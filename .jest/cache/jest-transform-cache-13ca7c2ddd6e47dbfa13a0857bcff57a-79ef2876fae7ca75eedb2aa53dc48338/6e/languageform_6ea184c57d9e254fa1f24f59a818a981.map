{"version":3,"names":["LanguageForm","form","id","cov_2d4j6e80b5","f","fields","append","remove","s","_reacthookform","useFieldArray","control","name","setValue","watch","formState","errors","availableLanguages","defaultLanguage","_react","useEffect","validCodes","map","lang","code","includes","b","JSON","stringify","_jsxruntime","jsxs","_card","Card","jsx","CardHeader","CardTitle","CardContent","className","field","index","_form","FormField","render","FormItem","FormLabel","FormControl","_input","Input","placeholder","FormMessage","message","_button","Button","type","disabled","length","variant","onClick","_lucidereact","TrashIcon","_select","Select","value","onValueChange","onChange","SelectTrigger","SelectValue","SelectContent","filter","x","SelectItem"],"sources":["/home/mark/Downloads/nextjs-amazona-main/app/[locale]/admin/settings/language-form.tsx"],"sourcesContent":["'use client'\n\nimport { Button } from '@/components/ui/button'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form'\nimport { Input } from '@/components/ui/input'\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select'\nimport { ISettingInput } from '@/types'\nimport { LanguageField, UseFieldArrayProps } from '@/types/form'\nimport { TrashIcon } from 'lucide-react'\nimport React, { useEffect } from 'react'\nimport { useFieldArray, UseFormReturn } from 'react-hook-form'\n\nexport default function LanguageForm({\n  form,\n  id,\n}: {\n  form: UseFormReturn<ISettingInput>\n  id: string\n}) {\n  const { fields, append, remove } = useFieldArray<ISettingInput>({\n    control: form.control,\n    name: 'availableLanguages',\n  } as UseFieldArrayProps<ISettingInput>)\n\n  const {\n    setValue,\n    watch,\n    control,\n    formState: { errors },\n  } = form\n\n  const availableLanguages = watch('availableLanguages')\n  const defaultLanguage = watch('defaultLanguage')\n\n  useEffect(() => {\n    const validCodes = availableLanguages.map((lang) => lang.code)\n    if (!validCodes.includes(defaultLanguage)) {\n      setValue('defaultLanguage', '')\n    }\n  }, [JSON.stringify(availableLanguages), defaultLanguage, setValue])\n\n  return (\n    <Card id={id}>\n      <CardHeader>\n        <CardTitle>Languages</CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        <div className=\"space-y-4\">\n          {fields.map((field, index) => (\n            <div key={field.id} className=\"flex gap-2\">\n              <FormField\n                control={form.control}\n                name={`availableLanguages.${index}.name`}\n                render={({ field }) => (\n                  <FormItem>\n                    {index === 0 && <FormLabel>Name</FormLabel>}\n                    <FormControl>\n                      <Input {...field} placeholder=\"Name\" />\n                    </FormControl>\n                    <FormMessage>\n                      {errors.availableLanguages?.[index]?.name?.message}\n                    </FormMessage>\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name={`availableLanguages.${index}.code`}\n                render={({ field }) => (\n                  <FormItem>\n                    {index === 0 && <FormLabel>Code</FormLabel>}\n                    <FormControl>\n                      <Input {...field} placeholder=\"Code\" />\n                    </FormControl>\n                    <FormMessage>\n                      {errors.availableLanguages?.[index]?.code?.message}\n                    </FormMessage>\n                  </FormItem>\n                )}\n              />\n\n              <div>\n                {index === 0 && <div>Action</div>}\n                <Button\n                  type=\"button\"\n                  disabled={fields.length === 1}\n                  variant=\"outline\"\n                  className={index === 0 ? 'mt-2' : ''}\n                  onClick={() => remove(index)}\n                >\n                  <TrashIcon className=\"w-4 h-4\" />\n                </Button>\n              </div>\n            </div>\n          ))}\n\n          <Button\n            type=\"button\"\n            variant=\"outline\"\n            onClick={() =>\n              append({\n                name: '',\n                code: '',\n              } as LanguageField)\n            }\n          >\n            Add Language\n          </Button>\n        </div>\n\n        <FormField\n          control={control}\n          name=\"defaultLanguage\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Default Language</FormLabel>\n              <FormControl>\n                <Select\n                  value={field.value || ''}\n                  onValueChange={(value) => field.onChange(value)}\n                >\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Select a language\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {availableLanguages\n                      .filter((x) => x.code)\n                      .map((lang, index) => (\n                        <SelectItem key={index} value={lang.code}>\n                          {lang.name} ({lang.code})\n                        </SelectItem>\n                      ))}\n                  </SelectContent>\n                </Select>\n              </FormControl>\n              <FormMessage>{errors.defaultLanguage?.message}</FormMessage>\n            </FormItem>\n          )}\n        />\n      </CardContent>\n    </Card>\n  )\n}\n\n// Current Date and Time (UTC): 2025-04-20 17:19:33\n// Current User's Login: ibrahim-lasfar\n"],"mappingsyBA,UAqIA;AACA;AAAA,E;;;;;;WAtIwBA,YAAA;;;;;;;;kCAvBD;;;kCACkC;;;kCAOlD;;;kCACe;;;kCAOf;;;kCAGmB;;;0EACO;;;mCACY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE9B,SAASA,aAAa;EACnCC,IAAI;EACJC;AAAE,CAIH;EAAA;EAAAC,cAAA,GAAAC,CAAA;EACC,MAAM;IAAEC,MAAM;IAAEC,MAAM;IAAEC;EAAM,CAAE;EAAA;EAAA,CAAAJ,cAAA,GAAAK,CAAA,QAAG,IAAAC,cAAA,CAAAC,aAAa,EAAgB;IAC9DC,OAAA,EAASV,IAAA,CAAKU,OAAO;IACrBC,IAAA,EAAM;EACR;EAEA,MAAM;IACJC,QAAQ;IACRC,KAAK;IACLH,OAAO;IACPI,SAAA,EAAW;MAAEC;IAAM;EAAE,CACtB;EAAA;EAAA,CAAAb,cAAA,GAAAK,CAAA,QAAGP,IAAA;EAEJ,MAAMgB,kBAAA;EAAA;EAAA,CAAAd,cAAA,GAAAK,CAAA,QAAqBM,KAAA,CAAM;EACjC,MAAMI,eAAA;EAAA;EAAA,CAAAf,cAAA,GAAAK,CAAA,QAAkBM,KAAA,CAAM;EAAA;EAAAX,cAAA,GAAAK,CAAA;EAE9B,IAAAW,MAAA,CAAAC,SAAS,EAAC;IAAA;IAAAjB,cAAA,GAAAC,CAAA;IACR,MAAMiB,UAAA;IAAA;IAAA,CAAAlB,cAAA,GAAAK,CAAA,QAAaS,kBAAA,CAAmBK,GAAG,CAAEC,IAAA,IAAS;MAAA;MAAApB,cAAA,GAAAC,CAAA;MAAAD,cAAA,GAAAK,CAAA;MAAA,OAAAe,IAAA,CAAKC,IAAI;IAAJ,CAAI;IAAA;IAAArB,cAAA,GAAAK,CAAA;IAC7D,IAAI,CAACa,UAAA,CAAWI,QAAQ,CAACP,eAAA,GAAkB;MAAA;MAAAf,cAAA,GAAAuB,CAAA;MAAAvB,cAAA,GAAAK,CAAA;MACzCK,QAAA,CAAS,mBAAmB;IAC9B;IAAA;IAAA;MAAAV,cAAA,GAAAuB,CAAA;IAAA;EACF,GAAG,CAACC,IAAA,CAAKC,SAAS,CAACX,kBAAA,GAAqBC,eAAA,EAAiBL,QAAA,CAAS;EAAA;EAAAV,cAAA,GAAAK,CAAA;EAElE,oBACE,IAAAqB,WAAA,CAAAC,IAAA,EAACC,KAAA,CAAAC,IAAI;IAAC9B,EAAA,EAAIA,EAAA;4BACR,IAAA2B,WAAA,CAAAI,GAAA,EAACF,KAAA,CAAAG,UAAU;gBACT,iBAAAL,WAAA,CAAAI,GAAA,EAACF,KAAA,CAAAI,SAAS;kBAAC;;qBAEb,IAAAN,WAAA,CAAAC,IAAA,EAACC,KAAA,CAAAK,WAAW;MAACC,SAAA,EAAU;8BACrB,IAAAR,WAAA,CAAAC,IAAA,EAAC;QAAIO,SAAA,EAAU;mBACZhC,MAAA,CAAOiB,GAAG,CAAC,CAACgB,KAAA,EAAOC,KAAA,KAClB;UAAA;UAAApC,cAAA,GAAAC,CAAA;UAAAD,cAAA,GAAAK,CAAA;UAAA,OADkB,aAClB,IAAAqB,WAAA,CAAAC,IAAA,EAAC;YAAmBO,SAAA,EAAU;oCAC5B,IAAAR,WAAA,CAAAI,GAAA,EAACO,KAAA,CAAAC,SAAS;cACR9B,OAAA,EAASV,IAAA,CAAKU,OAAO;cACrBC,IAAA,EAAM,sBAAsB2B,KAAA,OAAY;cACxCG,MAAA,EAAQA,CAAC;gBAAEJ;cAAK,CAAE,KAChB;gBAAA;gBAAAnC,cAAA,GAAAC,CAAA;gBAAAD,cAAA,GAAAK,CAAA;gBAAA,OADgB,aAChB,IAAAqB,WAAA,CAAAC,IAAA,EAACU,KAAA,CAAAG,QAAQ;;kBACN;kBAAA,CAAAxC,cAAA,GAAAuB,CAAA,WAAAa,KAAA,KAAU;kBAAA;kBAAA,CAAApC,cAAA,GAAAuB,CAAA,wBAAK,IAAAG,WAAA,CAAAI,GAAA,EAACO,KAAA,CAAAI,SAAS;8BAAC;oCAC3B,IAAAf,WAAA,CAAAI,GAAA,EAACO,KAAA,CAAAK,WAAW;8BACV,iBAAAhB,WAAA,CAAAI,GAAA,EAACa,MAAA,CAAAC,KAAK;sBAAE,GAAGT,KAAK;sBAAEU,WAAA,EAAY;;mCAEhC,IAAAnB,WAAA,CAAAI,GAAA,EAACO,KAAA,CAAAS,WAAW;8BACTjC,MAAA,CAAOC,kBAAkB,GAAGsB,KAAA,CAAM,EAAE3B,IAAA,EAAMsC;;;;6BAMnD,IAAArB,WAAA,CAAAI,GAAA,EAACO,KAAA,CAAAC,SAAS;cACR9B,OAAA,EAASV,IAAA,CAAKU,OAAO;cACrBC,IAAA,EAAM,sBAAsB2B,KAAA,OAAY;cACxCG,MAAA,EAAQA,CAAC;gBAAEJ;cAAK,CAAE,KAChB;gBAAA;gBAAAnC,cAAA,GAAAC,CAAA;gBAAAD,cAAA,GAAAK,CAAA;gBAAA,OADgB,aAChB,IAAAqB,WAAA,CAAAC,IAAA,EAACU,KAAA,CAAAG,QAAQ;;kBACN;kBAAA,CAAAxC,cAAA,GAAAuB,CAAA,WAAAa,KAAA,KAAU;kBAAA;kBAAA,CAAApC,cAAA,GAAAuB,CAAA,wBAAK,IAAAG,WAAA,CAAAI,GAAA,EAACO,KAAA,CAAAI,SAAS;8BAAC;oCAC3B,IAAAf,WAAA,CAAAI,GAAA,EAACO,KAAA,CAAAK,WAAW;8BACV,iBAAAhB,WAAA,CAAAI,GAAA,EAACa,MAAA,CAAAC,KAAK;sBAAE,GAAGT,KAAK;sBAAEU,WAAA,EAAY;;mCAEhC,IAAAnB,WAAA,CAAAI,GAAA,EAACO,KAAA,CAAAS,WAAW;8BACTjC,MAAA,CAAOC,kBAAkB,GAAGsB,KAAA,CAAM,EAAEf,IAAA,EAAM0B;;;;6BAMnD,IAAArB,WAAA,CAAAC,IAAA,EAAC;;cACE;cAAA,CAAA3B,cAAA,GAAAuB,CAAA,WAAAa,KAAA,KAAU;cAAA;cAAA,CAAApC,cAAA,GAAAuB,CAAA,wBAAK,IAAAG,WAAA,CAAAI,GAAA,EAAC;0BAAI;gCACrB,IAAAJ,WAAA,CAAAI,GAAA,EAACkB,OAAA,CAAAC,MAAM;gBACLC,IAAA,EAAK;gBACLC,QAAA,EAAUjD,MAAA,CAAOkD,MAAM,KAAK;gBAC5BC,OAAA,EAAQ;gBACRnB,SAAA,EAAWE,KAAA,KAAU;gBAAA;gBAAA,CAAApC,cAAA,GAAAuB,CAAA,WAAI;gBAAA;gBAAA,CAAAvB,cAAA,GAAAuB,CAAA,WAAS;gBAClC+B,OAAA,EAASA,CAAA,KAAM;kBAAA;kBAAAtD,cAAA,GAAAC,CAAA;kBAAAD,cAAA,GAAAK,CAAA;kBAAA,OAAAD,MAAA,CAAOgC,KAAA;gBAAA;0BAEtB,iBAAAV,WAAA,CAAAI,GAAA,EAACyB,YAAA,CAAAC,SAAS;kBAACtB,SAAA,EAAU;;;;aA1CjBC,KAAA,CAAMpC,EAAE;QAAA,I,aAgDpB,IAAA2B,WAAA,CAAAI,GAAA,EAACkB,OAAA,CAAAC,MAAM;UACLC,IAAA,EAAK;UACLG,OAAA,EAAQ;UACRC,OAAA,EAASA,CAAA,KACP;YAAA;YAAAtD,cAAA,GAAAC,CAAA;YAAAD,cAAA,GAAAK,CAAA;YAAA,OAAAF,MAAA,CAAO;cACLM,IAAA,EAAM;cACNY,IAAA,EAAM;YACR;UAAA;oBAEH;;uBAKH,IAAAK,WAAA,CAAAI,GAAA,EAACO,KAAA,CAAAC,SAAS;QACR9B,OAAA,EAASA,OAAA;QACTC,IAAA,EAAK;QACL8B,MAAA,EAAQA,CAAC;UAAEJ;QAAK,CAAE,KAChB;UAAA;UAAAnC,cAAA,GAAAC,CAAA;UAAAD,cAAA,GAAAK,CAAA;UAAA,OADgB,aAChB,IAAAqB,WAAA,CAAAC,IAAA,EAACU,KAAA,CAAAG,QAAQ;oCACP,IAAAd,WAAA,CAAAI,GAAA,EAACO,KAAA,CAAAI,SAAS;wBAAC;6BACX,IAAAf,WAAA,CAAAI,GAAA,EAACO,KAAA,CAAAK,WAAW;wBACV,iBAAAhB,WAAA,CAAAC,IAAA,EAAC8B,OAAA,CAAAC,MAAM;gBACLC,KAAA;gBAAO;gBAAA,CAAA3D,cAAA,GAAAuB,CAAA,WAAAY,KAAA,CAAMwB,KAAK;gBAAA;gBAAA,CAAA3D,cAAA,GAAAuB,CAAA,WAAI;gBACtBqC,aAAA,EAAgBD,KAAA,IAAU;kBAAA;kBAAA3D,cAAA,GAAAC,CAAA;kBAAAD,cAAA,GAAAK,CAAA;kBAAA,OAAA8B,KAAA,CAAM0B,QAAQ,CAACF,KAAA;gBAAA;wCAEzC,IAAAjC,WAAA,CAAAI,GAAA,EAAC2B,OAAA,CAAAK,aAAa;4BACZ,iBAAApC,WAAA,CAAAI,GAAA,EAAC2B,OAAA,CAAAM,WAAW;oBAAClB,WAAA,EAAY;;iCAE3B,IAAAnB,WAAA,CAAAI,GAAA,EAAC2B,OAAA,CAAAO,aAAa;4BACXlD,kBAAA,CACEmD,MAAM,CAAEC,CAAA,IAAM;oBAAA;oBAAAlE,cAAA,GAAAC,CAAA;oBAAAD,cAAA,GAAAK,CAAA;oBAAA,OAAA6D,CAAA,CAAE7C,IAAI;kBAAJ,CAAI,EACpBF,GAAG,CAAC,CAACC,IAAA,EAAMgB,KAAA,KACV;oBAAA;oBAAApC,cAAA,GAAAC,CAAA;oBAAAD,cAAA,GAAAK,CAAA;oBAAA,OADU,aACV,IAAAqB,WAAA,CAAAC,IAAA,EAAC8B,OAAA,CAAAU,UAAU;sBAAaR,KAAA,EAAOvC,IAAA,CAAKC,IAAI;iCACrCD,IAAA,CAAKX,IAAI,EAAC,MAAGW,IAAA,CAAKC,IAAI,EAAC;uBADTe,KAAA;kBAAA;;;6BAO3B,IAAAV,WAAA,CAAAI,GAAA,EAACO,KAAA,CAAAS,WAAW;wBAAEjC,MAAA,CAAOE,eAAe,EAAEgC;;;;;;;AAOpD","ignoreList":[]}