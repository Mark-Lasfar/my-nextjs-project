{"version":3,"names":["_default","ProductPrice","price","className","listPrice","cov_1ltv0yvff","b","isDeal","forListing","plain","f","getCurrency","s","_usesettingstore","default","currency","t","_nextintl","useTranslations","convertedPrice","_utils","round2","convertRate","convertedListPrice","format","useFormatter","discountPercent","Math","round","stringValue","toString","intValue","floatValue","includes","split","number","style","code","currencyDisplay","_jsxruntime","jsxs","cn","jsx","symbol"],"sources":["/home/mark/Downloads/nextjs-amazona-main/components/shared/product/product-price.tsx"],"sourcesContent":["'use client'\nimport useSettingStore from '@/hooks/use-setting-store'\nimport { cn, round2 } from '@/lib/utils'\nimport { useFormatter, useTranslations } from 'next-intl'\n\nconst ProductPrice = ({\n  price,\n  className,\n  listPrice = 0,\n  isDeal = false,\n  forListing = true,\n  plain = false,\n}: {\n  price: number\n  isDeal?: boolean\n  listPrice?: number\n  className?: string\n  forListing?: boolean\n  plain?: boolean\n}) => {\n  const { getCurrency } = useSettingStore()\n  const currency = getCurrency()\n  const t = useTranslations()\n  const convertedPrice = round2(currency.convertRate * price)\n  const convertedListPrice = round2(currency.convertRate * listPrice)\n\n  const format = useFormatter()\n  const discountPercent = Math.round(\n    100 - (convertedPrice / convertedListPrice) * 100\n  )\n  const stringValue = convertedPrice.toString()\n  const [intValue, floatValue] = stringValue.includes('.')\n    ? stringValue.split('.')\n    : [stringValue, '']\n\n  return plain ? (\n    format.number(convertedPrice, {\n      style: 'currency',\n      currency: currency.code,\n      currencyDisplay: 'narrowSymbol',\n    })\n  ) : convertedListPrice == 0 ? (\n    <div className={cn('text-3xl', className)}>\n      <span className=\"text-xs align-super\">{currency.symbol}</span>\n      {intValue}\n      <span className=\"text-xs align-super\">{floatValue}</span>\n    </div>\n  ) : isDeal ? (\n    <div className=\"space-y-2\">\n      <div className=\"flex justify-center items-center gap-2\">\n        <span className=\"bg-red-700 rounded-sm p-1 text-white text-sm font-semibold\">\n          {discountPercent}% {t('Product.Off')}\n        </span>\n        <span className=\"text-red-700 text-xs font-bold\">\n          {t('Product.Limited time deal')}\n        </span>\n      </div>\n      <div\n        className={`flex ${forListing && 'justify-center'} items-center gap-2`}\n      >\n        <div className={cn('text-3xl', className)}>\n          <span className=\"text-xs align-super\">{currency.symbol}</span>\n          {intValue}\n          <span className=\"text-xs align-super\">{floatValue}</span>\n        </div>\n        <div className=\"text-muted-foreground text-xs py-2\">\n          {t('Product.Was')}:{' '}\n          <span className=\"line-through\">\n            {format.number(convertedListPrice, {\n              style: 'currency',\n              currency: currency.code,\n              currencyDisplay: 'narrowSymbol',\n            })}\n          </span>\n        </div>\n      </div>\n    </div>\n  ) : (\n    <div className=\"\">\n      <div className=\"flex justify-center gap-3\">\n        <div className=\"text-3xl text-orange-700\">-{discountPercent}%</div>\n        <div className={cn('text-3xl', className)}>\n          <span className=\"text-xs align-super\">{currency.symbol}</span>\n          {intValue}\n          <span className=\"text-xs align-super\">{floatValue}</span>\n        </div>\n      </div>\n      <div className=\"text-muted-foreground text-xs py-2\">\n        {t('Product.List price')}:{' '}\n        <span className=\"line-through\">\n          {format.number(convertedListPrice, {\n            style: 'currency',\n            currency: currency.code,\n            currencyDisplay: 'narrowSymbol',\n          })}\n        </span>\n      </div>\n    </div>\n  )\n}\n\nexport default ProductPrice\n"],"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","ignoreList":[]}