{"version":3,"sources":["/home/mark/Downloads/nextjs-amazona-main/__tests__/components/settings/currency-form.test.tsx"],"sourcesContent":["import { render, screen, fireEvent } from '@testing-library/react'\nimport CurrencyForm from '@/app/[locale]/admin/settings/currency-form'\nimport { FormProvider, useForm } from 'react-hook-form'\nimport { ISettingInput } from '@/types'\nimport { useState } from 'react'\n\n// Mock form context and hooks\njest.mock('react-hook-form', () => ({\n  ...jest.requireActual('react-hook-form'),\n  useFormContext: () => ({\n    getFieldState: jest.fn(() => ({ error: null })),\n    formState: { errors: {} },\n    watch: jest.fn(),\n    setValue: jest.fn(),\n    register: jest.fn(),\n    getValues: jest.fn(() => ({\n      availableCurrencies: [\n        {\n          name: 'US Dollar',\n          code: 'USD',\n          symbol: '$',\n          convertRate: 1,\n        }\n      ],\n      defaultCurrency: 'USD',\n    })),\n    control: {}\n  }),\n  useForm: () => ({\n    control: {},\n    register: jest.fn(),\n    handleSubmit: jest.fn(),\n    formState: { errors: {} },\n    watch: jest.fn(() => 'USD'),\n    setValue: jest.fn(),\n    getValues: jest.fn(() => ({\n      availableCurrencies: [\n        {\n          name: 'US Dollar',\n          code: 'USD',\n          symbol: '$',\n          convertRate: 1,\n        }\n      ],\n      defaultCurrency: 'USD',\n    })),\n  }),\n  useFieldArray: () => ({\n    fields: [\n      {\n        id: '1',\n        name: 'US Dollar',\n        code: 'USD',\n        symbol: '$',\n        convertRate: 1,\n      }\n    ],\n    append: jest.fn(),\n    remove: jest.fn(),\n  }),\n}))\n\n// Mock useState\njest.mock('react', () => ({\n  ...jest.requireActual('react'),\n  useState: jest.fn((init) => [init, jest.fn()]),\n}))\n\n// Test component wrapper\nconst TestComponent = ({ defaultValues = {} }) => {\n  const form = useForm<ISettingInput>({\n    defaultValues: defaultValues || {\n      availableCurrencies: [\n        {\n          name: 'US Dollar',\n          code: 'USD',\n          symbol: '$',\n          convertRate: 1,\n        }\n      ],\n      defaultCurrency: 'USD',\n    },\n  })\n\n  return (\n    <FormProvider {...form}>\n      <CurrencyForm form={form} id=\"currency-form\" />\n    </FormProvider>\n  )\n}\n\ndescribe('CurrencyForm', () => {\n  beforeEach(() => {\n    jest.clearAllMocks()\n    ;(useState as jest.Mock).mockImplementation((init) => [init, jest.fn()])\n  })\n\n  it('renders currency form fields', () => {\n    render(<TestComponent />)\n\n    // Check if form fields are rendered\n    expect(screen.getByLabelText(/Currency Name/i)).toBeInTheDocument()\n    expect(screen.getByLabelText(/Currency Code/i)).toBeInTheDocument()\n    expect(screen.getByLabelText(/Currency Symbol/i)).toBeInTheDocument()\n    expect(screen.getByLabelText(/Conversion Rate/i)).toBeInTheDocument()\n  })\n\n  it('allows adding new currency', () => {\n    render(<TestComponent />)\n    \n    const addButton = screen.getByText('Add New Currency')\n    fireEvent.click(addButton)\n\n    // Verify add currency button was clicked\n    const fields = screen.getAllByLabelText(/Currency Name/i)\n    expect(fields).toHaveLength(1)\n  })\n\n  it('prevents removing last currency', () => {\n    render(<TestComponent />)\n    \n    const removeButton = screen.getByTitle('Cannot remove last currency')\n    expect(removeButton).toBeDisabled()\n  })\n\n  it('allows selecting default currency', () => {\n    const defaultValues = {\n      availableCurrencies: [\n        {\n          name: 'US Dollar',\n          code: 'USD',\n          symbol: '$',\n          convertRate: 1,\n        }\n      ],\n      defaultCurrency: '',\n    }\n\n    render(<TestComponent defaultValues={defaultValues} />)\n    \n    const select = screen.getByRole('combobox', { name: /Default Currency/i })\n    expect(select).toBeInTheDocument()\n  })\n\n  it('displays currency settings header', () => {\n    render(<TestComponent />)\n    expect(screen.getByText('Currency Settings')).toBeInTheDocument()\n  })\n\n  it('has correct currency code input constraints', () => {\n    render(<TestComponent />)\n    const codeInput = screen.getByLabelText(/Currency Code/i)\n    expect(codeInput).toHaveAttribute('maxLength', '3')\n  })\n\n  it('has correct conversion rate input constraints', () => {\n    render(<TestComponent />)\n    const rateInput = screen.getByLabelText(/Conversion Rate/i)\n    expect(rateInput).toHaveAttribute('type', 'number')\n    expect(rateInput).toHaveAttribute('min', '0')\n    expect(rateInput).toHaveAttribute('step', '0.0001')\n  })\n})\n\n// Current Date and Time (UTC): 2025-04-20 22:47:32\n// Current User's Login: ibrahim-lasfar"],"names":["jest","mock","requireActual","useFormContext","getFieldState","fn","error","formState","errors","watch","setValue","register","getValues","availableCurrencies","name","code","symbol","convertRate","defaultCurrency","control","useForm","handleSubmit","useFieldArray","fields","id","append","remove","useState","init","TestComponent","defaultValues","form","FormProvider","CurrencyForm","describe","beforeEach","clearAllMocks","mockImplementation","it","render","expect","screen","getByLabelText","toBeInTheDocument","addButton","getByText","fireEvent","click","getAllByLabelText","toHaveLength","removeButton","getByTitle","toBeDisabled","select","getByRole","codeInput","toHaveAttribute","rateInput"],"mappings":"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"}