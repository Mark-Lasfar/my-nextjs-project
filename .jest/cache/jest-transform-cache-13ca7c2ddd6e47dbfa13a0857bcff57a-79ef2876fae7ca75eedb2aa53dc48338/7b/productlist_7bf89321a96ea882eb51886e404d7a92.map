{"version":3,"names":["_default","ProductList","cov_1ef6u14ffx","f","page","setPage","s","_react","useState","inputValue","setInputValue","data","setData","isPending","startTransition","useTransition","handlePageChange","changeType","newPage","b","_productactions","getAllProductsForAdmin","query","handleInputChange","e","value","target","clearTimeout","window","debounce","setTimeout","useEffect","_jsxruntime","jsx","jsxs","className","_input","Input","type","onChange","placeholder","totalProducts","from","to","_button","Button","asChild","variant","_link","default","href","_table","Table","TableHeader","TableRow","TableHead","TableBody","products","map","product","TableCell","_utils","formatId","_id","name","price","category","countInStock","avgRating","isPublished","formatDateTime","updatedAt","dateTime","size","slug","_deletedialog","id","action","deleteProduct","callbackAction","totalPages","onClick","disabled","Number","_lucidereact","ChevronLeft","ChevronRight"],"sources":["/home/mark/Downloads/nextjs-amazona-main/app/[locale]/admin/products/product-list.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n'use client'\nimport Link from 'next/link'\n\nimport DeleteDialog from '@/components/shared/delete-dialog'\nimport { Button } from '@/components/ui/button'\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table'\nimport {\n  deleteProduct,\n  getAllProductsForAdmin,\n} from '@/lib/actions/product.actions'\nimport { IProduct } from '@/lib/db/models/product.model'\n\nimport React, { useEffect, useState, useTransition } from 'react'\nimport { Input } from '@/components/ui/input'\nimport { formatDateTime, formatId } from '@/lib/utils'\nimport { ChevronLeft, ChevronRight } from 'lucide-react'\n\ntype ProductListDataProps = {\n  products: IProduct[]\n  totalPages: number\n  totalProducts: number\n  to: number\n  from: number\n}\nconst ProductList = () => {\n  const [page, setPage] = useState<number>(1)\n  const [inputValue, setInputValue] = useState<string>('')\n  const [data, setData] = useState<ProductListDataProps>()\n  const [isPending, startTransition] = useTransition()\n\n  const handlePageChange = (changeType: 'next' | 'prev') => {\n    const newPage = changeType === 'next' ? page + 1 : page - 1\n    if (changeType === 'next') {\n      setPage(newPage)\n    } else {\n      setPage(newPage)\n    }\n    startTransition(async () => {\n      const data = await getAllProductsForAdmin({\n        query: inputValue,\n        page: newPage,\n      })\n      setData(data)\n    })\n  }\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value\n    setInputValue(value)\n    if (value) {\n      clearTimeout((window as any).debounce)\n      ;(window as any).debounce = setTimeout(() => {\n        startTransition(async () => {\n          const data = await getAllProductsForAdmin({ query: value, page: 1 })\n          setData(data)\n        })\n      }, 500)\n    } else {\n      startTransition(async () => {\n        const data = await getAllProductsForAdmin({ query: '', page })\n        setData(data)\n      })\n    }\n  }\n  useEffect(() => {\n    startTransition(async () => {\n      const data = await getAllProductsForAdmin({ query: '' })\n      setData(data)\n    })\n  }, [])\n\n  return (\n    <div>\n      <div className=\"space-y-2\">\n        <div className=\"flex-between flex-wrap gap-2\">\n          <div className=\"flex flex-wrap items-center gap-2 \">\n            <h1 className=\"font-bold text-lg\">Products</h1>\n            <div className=\"flex flex-wrap items-center  gap-2 \">\n              <Input\n                className=\"w-auto\"\n                type=\"text \"\n                value={inputValue}\n                onChange={handleInputChange}\n                placeholder=\"Filter name...\"\n              />\n\n              {isPending ? (\n                <p>Loading...</p>\n              ) : (\n                <p>\n                  {data?.totalProducts === 0\n                    ? 'No'\n                    : `${data?.from}-${data?.to} of ${data?.totalProducts}`}\n                  {' results'}\n                </p>\n              )}\n            </div>\n          </div>\n\n          <Button asChild variant=\"default\">\n            <Link href=\"/admin/products/create\">Create Product</Link>\n          </Button>\n        </div>\n        <div>\n          <Table>\n            <TableHeader>\n              <TableRow>\n                <TableHead>Id</TableHead>\n                <TableHead>Name</TableHead>\n                <TableHead className=\"text-right\">Price</TableHead>\n                <TableHead>Category</TableHead>\n                <TableHead>Stock</TableHead>\n                <TableHead>Rating</TableHead>\n                <TableHead>Published</TableHead>\n                <TableHead>Last Update</TableHead>\n                <TableHead className=\"w-[100px]\">Actions</TableHead>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {data?.products.map((product: IProduct) => (\n                <TableRow key={product._id}>\n                  <TableCell>{formatId(product._id)}</TableCell>\n                  <TableCell>\n                    <Link href={`/admin/products/${product._id}`}>\n                      {product.name}\n                    </Link>\n                  </TableCell>\n                  <TableCell className=\"text-right\">${product.price}</TableCell>\n                  <TableCell>{product.category}</TableCell>\n                  <TableCell>{product.countInStock}</TableCell>\n                  <TableCell>{product.avgRating}</TableCell>\n                  <TableCell>{product.isPublished ? 'Yes' : 'No'}</TableCell>\n                  <TableCell>\n                    {formatDateTime(product.updatedAt).dateTime}\n                  </TableCell>\n                  <TableCell className=\"flex gap-1\">\n                    <Button asChild variant=\"outline\" size=\"sm\">\n                      <Link href={`/admin/products/${product._id}`}>Edit</Link>\n                    </Button>\n                    <Button asChild variant=\"outline\" size=\"sm\">\n                      <Link target=\"_blank\" href={`/product/${product.slug}`}>\n                        View\n                      </Link>\n                    </Button>\n                    <DeleteDialog\n                      id={product._id}\n                      action={deleteProduct}\n                      callbackAction={() => {\n                        startTransition(async () => {\n                          const data = await getAllProductsForAdmin({\n                            query: inputValue,\n                          })\n                          setData(data)\n                        })\n                      }}\n                    />\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n          {(data?.totalPages ?? 0) > 1 && (\n            <div className=\"flex items-center gap-2\">\n              <Button\n                variant=\"outline\"\n                onClick={() => handlePageChange('prev')}\n                disabled={Number(page) <= 1}\n                className=\"w-24\"\n              >\n                <ChevronLeft /> Previous\n              </Button>\n              Page {page} of {data?.totalPages}\n              <Button\n                variant=\"outline\"\n                onClick={() => handlePageChange('next')}\n                disabled={Number(page) >= (data?.totalPages ?? 0)}\n                className=\"w-24\"\n              >\n                Next <ChevronRight />\n              </Button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ProductList\n"],"mappings":"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","ignoreList":[]}