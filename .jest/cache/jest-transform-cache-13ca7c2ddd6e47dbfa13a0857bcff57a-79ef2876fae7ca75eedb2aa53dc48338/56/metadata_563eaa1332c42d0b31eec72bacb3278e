e420481cd1d2d21ad4ca2a27bd8c9cac
"use strict";

/* istanbul ignore next */
function cov_13g8lzabwk() {
  var path = "/home/mark/Downloads/nextjs-amazona-main/lib/metadata.ts";
  var hash = "280edd3d569f2f2abe7d1b2d8d55a3eb8c719163";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/mark/Downloads/nextjs-amazona-main/lib/metadata.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "3": {
        start: {
          line: 11,
          column: 24
        },
        end: {
          line: 11,
          column: 60
        }
      },
      "4": {
        start: {
          line: 13,
          column: 46
        },
        end: {
          line: 13,
          column: 85
        }
      },
      "5": {
        start: {
          line: 14,
          column: 20
        },
        end: {
          line: 14,
          column: 57
        }
      },
      "6": {
        start: {
          line: 15,
          column: 28
        },
        end: {
          line: 20,
          column: 11
        }
      },
      "7": {
        start: {
          line: 15,
          column: 59
        },
        end: {
          line: 20,
          column: 9
        }
      },
      "8": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 88,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "generateProductMetadata",
        decl: {
          start: {
            line: 12,
            column: 15
          },
          end: {
            line: 12,
            column: 38
          }
        },
        loc: {
          start: {
            line: 12,
            column: 60
          },
          end: {
            line: 89,
            column: 1
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 51
          },
          end: {
            line: 15,
            column: 52
          }
        },
        loc: {
          start: {
            line: 15,
            column: 59
          },
          end: {
            line: 20,
            column: 9
          }
        },
        line: 15
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 20
          },
          end: {
            line: 14,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 20
          },
          end: {
            line: 14,
            column: 23
          }
        }, {
          start: {
            line: 14,
            column: 27
          },
          end: {
            line: 14,
            column: 57
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 17
          },
          end: {
            line: 16,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 16,
            column: 42
          },
          end: {
            line: 16,
            column: 45
          }
        }, {
          start: {
            line: 16,
            column: 48
          },
          end: {
            line: 16,
            column: 66
          }
        }],
        line: 16
      },
      "2": {
        loc: {
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 62,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 62,
            column: 29
          }
        }, {
          start: {
            line: 62,
            column: 33
          },
          end: {
            line: 62,
            column: 41
          }
        }],
        line: 62
      },
      "3": {
        loc: {
          start: {
            line: 68,
            column: 22
          },
          end: {
            line: 68,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 22
          },
          end: {
            line: 68,
            column: 39
          }
        }, {
          start: {
            line: 68,
            column: 43
          },
          end: {
            line: 68,
            column: 51
          }
        }],
        line: 68
      },
      "4": {
        loc: {
          start: {
            line: 71,
            column: 17
          },
          end: {
            line: 71,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 17
          },
          end: {
            line: 71,
            column: 34
          }
        }, {
          start: {
            line: 71,
            column: 38
          },
          end: {
            line: 71,
            column: 46
          }
        }],
        line: 71
      },
      "5": {
        loc: {
          start: {
            line: 81,
            column: 29
          },
          end: {
            line: 81,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 29
          },
          end: {
            line: 81,
            column: 46
          }
        }, {
          start: {
            line: 81,
            column: 50
          },
          end: {
            line: 81,
            column: 58
          }
        }],
        line: 81
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/mark/Downloads/nextjs-amazona-main/lib/metadata.ts"],
      sourcesContent: ["import { Metadata } from 'next'\nimport { getSetting } from './actions/setting.actions'\n\ninterface ProductData {\n  name: string\n  description: string\n  images: string[]\n  price: number\n  currency: string\n  sku: string\n  category: string\n  brand?: string\n}\n\nexport async function generateProductMetadata(\n  productData: ProductData,\n  locale: string\n): Promise<Metadata> {\n  const {\n    site: { url, name: siteName },\n  } = await getSetting()\n  const baseUrl = url || 'https://hager-zon.vercel.app'\n\n  const formattedImages = productData.images.map((img) => ({\n    url: img.startsWith('http') ? img : `${baseUrl}${img}`,\n    width: 800,\n    height: 600,\n    alt: productData.name,\n  }))\n\n  return {\n    title: productData.name,\n    description: productData.description,\n    metadataBase: new URL(baseUrl),\n    openGraph: {\n      title: productData.name,\n      description: productData.description,\n      images: formattedImages,\n      locale,\n      type: 'website',\n      siteName,\n    },\n    twitter: {\n      card: 'summary_large_image',\n      title: productData.name,\n      description: productData.description,\n      images: formattedImages,\n      creator: '@mgzon',\n      site: '@mgzon',\n    },\n    alternates: {\n      canonical: `${baseUrl}/product/${productData.sku}`,\n      languages: {\n        [locale]: `${baseUrl}/${locale}/product/${productData.sku}`,\n      },\n    },\n    robots: {\n      index: true,\n      follow: true,\n      googleBot: {\n        index: true,\n        follow: true,\n        'max-image-preview': 'large',\n        'max-video-preview': -1,\n        'max-snippet': -1,\n      },\n    },\n    applicationName: siteName,\n    keywords: [\n      productData.name,\n      productData.category,\n      productData.brand || siteName,\n      'shop',\n      'ecommerce',\n    ].join(', '),\n    authors: [{ name: productData.brand || siteName }],\n    creator: productData.brand || siteName,\n    publisher: siteName,\n    formatDetection: {\n      email: false,\n      address: false,\n      telephone: false,\n    },\n    other: {\n      'product:price:amount': productData.price.toString(),\n      'product:price:currency': productData.currency,\n      'product:brand': productData.brand || siteName,\n      'product:category': productData.category,\n      'product:sku': productData.sku,\n      'product:availability': 'in stock',\n      'og:price:amount': productData.price.toString(),\n      'og:price:currency': productData.currency,\n    },\n  }\n}\n\n// Current Date and Time (UTC): 2025-04-19 23:54:51\n// Current User's Login: ibrahim-lasfar\n"],
      names: ["generateProductMetadata", "productData", "locale", "site", "url", "name", "siteName", "getSetting", "baseUrl", "formattedImages", "images", "map", "img", "startsWith", "width", "height", "alt", "title", "description", "metadataBase", "URL", "openGraph", "type", "twitter", "card", "creator", "alternates", "canonical", "sku", "languages", "robots", "index", "follow", "googleBot", "applicationName", "keywords", "category", "brand", "join", "authors", "publisher", "formatDetection", "email", "address", "telephone", "other", "price", "toString", "currency"],
      mappings: ";;;;+BAcsBA;;;eAAAA;;;gCAbK;AAapB,eAAeA,wBACpBC,WAAwB,EACxBC,MAAc;IAEd,MAAM,EACJC,MAAM,EAAEC,GAAG,EAAEC,MAAMC,QAAQ,EAAE,EAC9B,GAAG,MAAMC,IAAAA,0BAAU;IACpB,MAAMC,UAAUJ,OAAO;IAEvB,MAAMK,kBAAkBR,YAAYS,MAAM,CAACC,GAAG,CAAC,CAACC,MAAS,CAAA;YACvDR,KAAKQ,IAAIC,UAAU,CAAC,UAAUD,MAAM,GAAGJ,UAAUI,KAAK;YACtDE,OAAO;YACPC,QAAQ;YACRC,KAAKf,YAAYI,IAAI;QACvB,CAAA;IAEA,OAAO;QACLY,OAAOhB,YAAYI,IAAI;QACvBa,aAAajB,YAAYiB,WAAW;QACpCC,cAAc,IAAIC,IAAIZ;QACtBa,WAAW;YACTJ,OAAOhB,YAAYI,IAAI;YACvBa,aAAajB,YAAYiB,WAAW;YACpCR,QAAQD;YACRP;YACAoB,MAAM;YACNhB;QACF;QACAiB,SAAS;YACPC,MAAM;YACNP,OAAOhB,YAAYI,IAAI;YACvBa,aAAajB,YAAYiB,WAAW;YACpCR,QAAQD;YACRgB,SAAS;YACTtB,MAAM;QACR;QACAuB,YAAY;YACVC,WAAW,GAAGnB,QAAQ,SAAS,EAAEP,YAAY2B,GAAG,EAAE;YAClDC,WAAW;gBACT,CAAC3B,OAAO,EAAE,GAAGM,QAAQ,CAAC,EAAEN,OAAO,SAAS,EAAED,YAAY2B,GAAG,EAAE;YAC7D;QACF;QACAE,QAAQ;YACNC,OAAO;YACPC,QAAQ;YACRC,WAAW;gBACTF,OAAO;gBACPC,QAAQ;gBACR,qBAAqB;gBACrB,qBAAqB,CAAC;gBACtB,eAAe,CAAC;YAClB;QACF;QACAE,iBAAiB5B;QACjB6B,UAAU;YACRlC,YAAYI,IAAI;YAChBJ,YAAYmC,QAAQ;YACpBnC,YAAYoC,KAAK,IAAI/B;YACrB;YACA;SACD,CAACgC,IAAI,CAAC;QACPC,SAAS;YAAC;gBAAElC,MAAMJ,YAAYoC,KAAK,IAAI/B;YAAS;SAAE;QAClDmB,SAASxB,YAAYoC,KAAK,IAAI/B;QAC9BkC,WAAWlC;QACXmC,iBAAiB;YACfC,OAAO;YACPC,SAAS;YACTC,WAAW;QACb;QACAC,OAAO;YACL,wBAAwB5C,YAAY6C,KAAK,CAACC,QAAQ;YAClD,0BAA0B9C,YAAY+C,QAAQ;YAC9C,iBAAiB/C,YAAYoC,KAAK,IAAI/B;YACtC,oBAAoBL,YAAYmC,QAAQ;YACxC,eAAenC,YAAY2B,GAAG;YAC9B,wBAAwB;YACxB,mBAAmB3B,YAAY6C,KAAK,CAACC,QAAQ;YAC7C,qBAAqB9C,YAAY+C,QAAQ;QAC3C;IACF;AACF,EAEA,mDAAmD;CACnD,uCAAuC"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "280edd3d569f2f2abe7d1b2d8d55a3eb8c719163"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_13g8lzabwk = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_13g8lzabwk();
cov_13g8lzabwk().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_13g8lzabwk().s[1]++;
Object.defineProperty(exports, "generateProductMetadata", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_13g8lzabwk().f[0]++;
    cov_13g8lzabwk().s[2]++;
    return generateProductMetadata;
  }
});
const _settingactions =
/* istanbul ignore next */
(cov_13g8lzabwk().s[3]++, require("./actions/setting.actions"));
async function generateProductMetadata(productData, locale) {
  /* istanbul ignore next */
  cov_13g8lzabwk().f[1]++;
  const {
    site: {
      url,
      name: siteName
    }
  } =
  /* istanbul ignore next */
  (cov_13g8lzabwk().s[4]++, await (0, _settingactions.getSetting)());
  const baseUrl =
  /* istanbul ignore next */
  (cov_13g8lzabwk().s[5]++,
  /* istanbul ignore next */
  (cov_13g8lzabwk().b[0][0]++, url) ||
  /* istanbul ignore next */
  (cov_13g8lzabwk().b[0][1]++, 'https://hager-zon.vercel.app'));
  const formattedImages =
  /* istanbul ignore next */
  (cov_13g8lzabwk().s[6]++, productData.images.map(img => {
    /* istanbul ignore next */
    cov_13g8lzabwk().f[2]++;
    cov_13g8lzabwk().s[7]++;
    return {
      url: img.startsWith('http') ?
      /* istanbul ignore next */
      (cov_13g8lzabwk().b[1][0]++, img) :
      /* istanbul ignore next */
      (cov_13g8lzabwk().b[1][1]++, `${baseUrl}${img}`),
      width: 800,
      height: 600,
      alt: productData.name
    };
  }));
  /* istanbul ignore next */
  cov_13g8lzabwk().s[8]++;
  return {
    title: productData.name,
    description: productData.description,
    metadataBase: new URL(baseUrl),
    openGraph: {
      title: productData.name,
      description: productData.description,
      images: formattedImages,
      locale,
      type: 'website',
      siteName
    },
    twitter: {
      card: 'summary_large_image',
      title: productData.name,
      description: productData.description,
      images: formattedImages,
      creator: '@mgzon',
      site: '@mgzon'
    },
    alternates: {
      canonical: `${baseUrl}/product/${productData.sku}`,
      languages: {
        [locale]: `${baseUrl}/${locale}/product/${productData.sku}`
      }
    },
    robots: {
      index: true,
      follow: true,
      googleBot: {
        index: true,
        follow: true,
        'max-image-preview': 'large',
        'max-video-preview': -1,
        'max-snippet': -1
      }
    },
    applicationName: siteName,
    keywords: [productData.name, productData.category,
    /* istanbul ignore next */
    (cov_13g8lzabwk().b[2][0]++, productData.brand) ||
    /* istanbul ignore next */
    (cov_13g8lzabwk().b[2][1]++, siteName), 'shop', 'ecommerce'].join(', '),
    authors: [{
      name:
      /* istanbul ignore next */
      (cov_13g8lzabwk().b[3][0]++, productData.brand) ||
      /* istanbul ignore next */
      (cov_13g8lzabwk().b[3][1]++, siteName)
    }],
    creator:
    /* istanbul ignore next */
    (cov_13g8lzabwk().b[4][0]++, productData.brand) ||
    /* istanbul ignore next */
    (cov_13g8lzabwk().b[4][1]++, siteName),
    publisher: siteName,
    formatDetection: {
      email: false,
      address: false,
      telephone: false
    },
    other: {
      'product:price:amount': productData.price.toString(),
      'product:price:currency': productData.currency,
      'product:brand':
      /* istanbul ignore next */
      (cov_13g8lzabwk().b[5][0]++, productData.brand) ||
      /* istanbul ignore next */
      (cov_13g8lzabwk().b[5][1]++, siteName),
      'product:category': productData.category,
      'product:sku': productData.sku,
      'product:availability': 'in stock',
      'og:price:amount': productData.price.toString(),
      'og:price:currency': productData.currency
    }
  };
} // Current Date and Time (UTC): 2025-04-19 23:54:51
// Current User's Login: ibrahim-lasfar
//# sourceMappingURL=data:application/json;charset=utf-8;base64,