{"version":3,"names":["PaymentMethodForm","form","id","cov_1k3sf9msqh","f","fields","append","remove","s","_reacthookform","useFieldArray","control","name","setValue","watch","formState","errors","availablePaymentMethods","defaultPaymentMethod","validPaymentMethods","_react","useMemo","map","method","useEffect","includes","b","_jsxruntime","jsxs","_card","Card","jsx","CardHeader","CardTitle","CardContent","className","field","index","_form","FormField","render","FormItem","FormLabel","FormControl","_input","Input","placeholder","FormMessage","message","type","step","min","max","commission","_button","Button","disabled","length","variant","onClick","_lucidereact","TrashIcon","_select","Select","value","onValueChange","onChange","SelectTrigger","SelectValue","SelectContent","filter","x","SelectItem"],"sources":["/home/mark/Downloads/nextjs-amazona-main/app/[locale]/admin/settings/payment-method-form.tsx"],"sourcesContent":["'use client'\n\nimport { Button } from '@/components/ui/button'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form'\nimport { Input } from '@/components/ui/input'\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select'\nimport { ISettingInput } from '@/types'\nimport { PaymentMethodField, UseFieldArrayProps } from '@/types/form'\nimport { TrashIcon } from 'lucide-react'\nimport React, { useEffect, useMemo } from 'react'\nimport { useFieldArray, UseFormReturn } from 'react-hook-form'\n\nexport default function PaymentMethodForm({\n  form,\n  id,\n}: {\n  form: UseFormReturn<ISettingInput>\n  id: string\n}) {\n  const { fields, append, remove } = useFieldArray<ISettingInput>({\n    control: form.control,\n    name: 'availablePaymentMethods',\n  } as UseFieldArrayProps<ISettingInput>)\n\n  const {\n    setValue,\n    watch,\n    control,\n    formState: { errors },\n  } = form\n\n  const availablePaymentMethods = watch('availablePaymentMethods')\n  const defaultPaymentMethod = watch('defaultPaymentMethod')\n\n  // Memoize the validation of payment methods\n  const validPaymentMethods = useMemo(\n    () => availablePaymentMethods.map((method) => method.name),\n    [availablePaymentMethods]\n  )\n\n  useEffect(() => {\n    if (!validPaymentMethods.includes(defaultPaymentMethod)) {\n      setValue('defaultPaymentMethod', validPaymentMethods[0] || '')\n    }\n  }, [validPaymentMethods, defaultPaymentMethod, setValue])\n\n  return (\n    <Card id={id}>\n      <CardHeader>\n        <CardTitle>Payment Methods</CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        <div className=\"space-y-4\">\n          {fields.map((field, index) => (\n            <div key={field.id} className=\"flex gap-2\">\n              <FormField\n                control={form.control}\n                name={`availablePaymentMethods.${index}.name`}\n                render={({ field }) => (\n                  <FormItem>\n                    {index === 0 && <FormLabel>Name</FormLabel>}\n                    <FormControl>\n                      <Input {...field} placeholder=\"Name\" />\n                    </FormControl>\n                    <FormMessage>\n                      {errors.availablePaymentMethods?.[index]?.name?.message}\n                    </FormMessage>\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name={`availablePaymentMethods.${index}.commission`}\n                render={({ field }) => (\n                  <FormItem>\n                    {index === 0 && <FormLabel>Commission</FormLabel>}\n                    <FormControl>\n                      <Input\n                        {...field}\n                        type=\"number\"\n                        step=\"0.01\"\n                        min=\"0\"\n                        max=\"100\"\n                        placeholder=\"Commission\"\n                      />\n                    </FormControl>\n                    <FormMessage>\n                      {\n                        errors.availablePaymentMethods?.[index]?.commission\n                          ?.message\n                      }\n                    </FormMessage>\n                  </FormItem>\n                )}\n              />\n\n              <div>\n                {index === 0 && <div>Action</div>}\n                <Button\n                  type=\"button\"\n                  disabled={fields.length === 1}\n                  variant=\"outline\"\n                  className={index === 0 ? 'mt-2' : ''}\n                  onClick={() => remove(index)}\n                >\n                  <TrashIcon className=\"w-4 h-4\" />\n                </Button>\n              </div>\n            </div>\n          ))}\n\n          <Button\n            type=\"button\"\n            variant=\"outline\"\n            onClick={() =>\n              append({\n                name: '',\n                commission: 0,\n              } as PaymentMethodField)\n            }\n          >\n            Add Payment Method\n          </Button>\n        </div>\n\n        <FormField\n          control={control}\n          name=\"defaultPaymentMethod\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Default Payment Method</FormLabel>\n              <FormControl>\n                <Select\n                  value={field.value || ''}\n                  onValueChange={(value) => field.onChange(value)}\n                >\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Select a payment method\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {availablePaymentMethods\n                      .filter((x) => x.name)\n                      .map((method, index) => (\n                        <SelectItem key={index} value={method.name}>\n                          {method.name}\n                        </SelectItem>\n                      ))}\n                  </SelectContent>\n                </Select>\n              </FormControl>\n              <FormMessage>{errors.defaultPaymentMethod?.message}</FormMessage>\n            </FormItem>\n          )}\n        />\n      </CardContent>\n    </Card>\n  )\n}\n\n// Current Date and Time (UTC): 2025-04-21 02:44:43\n// Current User's Login: ibrahim-lasfar"],"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","ignoreList":[]}