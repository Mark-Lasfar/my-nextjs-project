{"version":3,"names":["RatingSummary","asPopover","avgRating","cov_ha40327hk","b","numReviews","ratingDistribution","f","t","s","_nextintl","useTranslations","RatingDistribution","ratingPercentageDistribution","map","x","percentage","Math","round","count","_jsxruntime","jsxs","Fragment","className","jsx","_rating","default","rating","toFixed","sort","a","_progress","Progress","value","_popover","Popover","PopoverTrigger","asChild","_button","Button","variant","_lucidereact","ChevronDownIcon","PopoverContent","align","_separator","Separator","_link","href"],"sources":["/home/mark/Downloads/nextjs-amazona-main/components/shared/product/rating-summary.tsx"],"sourcesContent":["'use client'\n\nimport { Progress } from '@/components/ui/progress'\nimport Rating from './rating'\nimport { Separator } from '@/components/ui/separator'\nimport Link from 'next/link'\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from '@/components/ui/popover'\nimport { Button } from '@/components/ui/button'\nimport { useTranslations } from 'next-intl'\nimport { ChevronDownIcon } from 'lucide-react'\n\ntype RatingSummaryProps = {\n  asPopover?: boolean\n  avgRating: number\n  numReviews: number\n  ratingDistribution: {\n    rating: number\n    count: number\n  }[]\n}\n\nexport default function RatingSummary({\n  asPopover,\n  avgRating = 0,\n  numReviews = 0,\n  ratingDistribution = [],\n}: RatingSummaryProps) {\n  const t = useTranslations()\n  const RatingDistribution = () => {\n    const ratingPercentageDistribution = ratingDistribution.map((x) => ({\n      ...x,\n      percentage: Math.round((x.count / numReviews) * 100),\n    }))\n\n    return (\n      <>\n        <div className=\"flex flex-wrap items-center gap-1 cursor-help\">\n          <Rating rating={avgRating} />\n          <span className=\"text-lg font-semibold\">\n            {t('Product.avgRating out of 5', {\n              avgRating: avgRating.toFixed(1),\n            })}\n          </span>\n        </div>\n        <div className=\"text-lg \">\n          {t('Product.numReviews ratings', { numReviews })}\n        </div>\n\n        <div className=\"space-y-3\">\n          {ratingPercentageDistribution\n            .sort((a, b) => b.rating - a.rating)\n            .map(({ rating, percentage }) => (\n              <div\n                key={rating}\n                className=\"grid grid-cols-[50px_1fr_30px] gap-2 items-center\"\n              >\n                <div className=\"text-sm\">\n                  {' '}\n                  {t('Product.rating star', { rating })}\n                </div>\n                <Progress value={percentage} className=\"h-4\" />\n                <div className=\"text-sm text-right\">{percentage}%</div>\n              </div>\n            ))}\n        </div>\n      </>\n    )\n  }\n\n  return asPopover ? (\n    <div className=\"flex items-center gap-1\">\n      <Popover>\n        <PopoverTrigger asChild>\n          <Button variant=\"ghost\" className=\"px-2 [&_svg]:size-6 text-base\">\n            <span>{avgRating.toFixed(1)}</span>\n            <Rating rating={avgRating} />\n            <ChevronDownIcon className=\"w-5 h-5 text-muted-foreground\" />\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent className=\"w-auto p-4\" align=\"end\">\n          <div className=\"flex flex-col gap-2\">\n            <RatingDistribution />\n            <Separator />\n\n            <Link className=\"highlight-link text-center\" href=\"#reviews\">\n              {t('Product.See customer reviews')}\n            </Link>\n          </div>\n        </PopoverContent>\n      </Popover>\n      <div className=\" \">\n        <Link href=\"#reviews\" className=\"highlight-link\">\n          {t('Product.numReviews ratings', { numReviews })}\n        </Link>\n      </div>\n    </div>\n  ) : (\n    <RatingDistribution />\n  )\n}\n"],"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","ignoreList":[]}