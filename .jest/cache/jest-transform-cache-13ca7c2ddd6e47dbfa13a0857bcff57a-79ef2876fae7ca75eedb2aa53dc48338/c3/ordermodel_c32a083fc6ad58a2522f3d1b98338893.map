{"version":3,"names":["cov_xy7wguucw","actualCoverage","s","_default","orderSchema","_mongoose","Schema","user","type","Types","ObjectId","ref","required","items","product","clientId","String","name","slug","image","category","price","Number","countInStock","quantity","size","color","shippingAddress","fullName","street","city","postalCode","country","province","phone","expectedDeliveryDate","Date","paymentMethod","paymentResult","id","status","email_address","itemsPrice","shippingPrice","taxPrice","totalPrice","isPaid","Boolean","default","paidAt","isDelivered","deliveredAt","createdAt","now","timestamps","Order","b","models","model"],"sources":["/home/mark/Downloads/nextjs-amazona-main/lib/db/models/order.model.ts"],"sourcesContent":["import { IOrderInput } from '@/types'\nimport { Document, Model, model, models, Schema } from 'mongoose'\n\nexport interface IOrder extends Document, IOrderInput {\n  _id: string\n  createdAt: Date\n  updatedAt: Date\n}\n\nconst orderSchema = new Schema<IOrder>(\n  {\n    user: {\n      type: Schema.Types.ObjectId as unknown as typeof String,\n      ref: 'User',\n      required: true,\n    },\n    items: [\n      {\n        product: {\n          type: Schema.Types.ObjectId,\n          ref: 'Product',\n          required: true,\n        },\n        clientId: { type: String, required: true },\n        name: { type: String, required: true },\n        slug: { type: String, required: true },\n        image: { type: String, required: true },\n        category: { type: String, required: true },\n        price: { type: Number, required: true },\n        countInStock: { type: Number, required: true },\n        quantity: { type: Number, required: true },\n        size: { type: String },\n        color: { type: String },\n      },\n    ],\n    shippingAddress: {\n      fullName: { type: String, required: true },\n      street: { type: String, required: true },\n      city: { type: String, required: true },\n      postalCode: { type: String, required: true },\n      country: { type: String, required: true },\n      province: { type: String, required: true },\n      phone: { type: String, required: true },\n    },\n    expectedDeliveryDate: { type: Date, required: true },\n    paymentMethod: { type: String, required: true },\n    paymentResult: { id: String, status: String, email_address: String },\n    itemsPrice: { type: Number, required: true },\n    shippingPrice: { type: Number, required: true },\n    taxPrice: { type: Number, required: true },\n    totalPrice: { type: Number, required: true },\n    isPaid: { type: Boolean, required: true, default: false },\n    paidAt: { type: Date },\n    isDelivered: { type: Boolean, required: true, default: false },\n    deliveredAt: { type: Date },\n    createdAt: { type: Date, default: Date.now },\n  },\n  {\n    timestamps: true,\n  }\n)\n\nconst Order =\n  (models.Order as Model<IOrder>) || model<IOrder>('Order', orderSchema)\n\nexport default Order\n"],"mappings":"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","ignoreList":[]}