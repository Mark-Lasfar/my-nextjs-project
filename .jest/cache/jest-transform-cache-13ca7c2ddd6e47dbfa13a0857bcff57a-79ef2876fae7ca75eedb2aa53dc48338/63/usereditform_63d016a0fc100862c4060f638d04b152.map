{"version":3,"names":["_default","cov_sun6kml3g","s","UserEditForm","user","f","router","_navigation","useRouter","form","_reacthookform","useForm","resolver","_zod","zodResolver","_validator","UserUpdateSchema","defaultValues","toast","_usetoast","useToast","onSubmit","values","res","_useractions","updateUser","_id","success","b","variant","description","message","reset","push","error","_jsxruntime","jsx","_form","Form","jsxs","method","handleSubmit","className","FormField","control","name","render","field","FormItem","FormLabel","FormControl","_input","Input","placeholder","FormMessage","_select","Select","onValueChange","onChange","value","toString","SelectTrigger","SelectValue","SelectContent","_constants","USER_ROLES","map","role","SelectItem","_button","Button","type","disabled","formState","isSubmitting","onClick"],"sources":["/home/mark/Downloads/nextjs-amazona-main/app/[locale]/admin/users/[id]/user-edit-form.tsx"],"sourcesContent":["'use client'\n\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport { useRouter } from 'next/navigation'\nimport { useForm } from 'react-hook-form'\nimport { z } from 'zod'\n\nimport { Button } from '@/components/ui/button'\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form'\nimport { Input } from '@/components/ui/input'\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select'\nimport { useToast } from '@/hooks/use-toast'\nimport { updateUser } from '@/lib/actions/user.actions'\nimport { USER_ROLES } from '@/lib/constants'\nimport { IUser } from '@/lib/db/models/user.model'\nimport { UserUpdateSchema } from '@/lib/validator'\n\nconst UserEditForm = ({ user }: { user: IUser }) => {\n  const router = useRouter()\n\n  const form = useForm<z.infer<typeof UserUpdateSchema>>({\n    resolver: zodResolver(UserUpdateSchema),\n    defaultValues: user,\n  })\n\n  const { toast } = useToast()\n  async function onSubmit(values: z.infer<typeof UserUpdateSchema>) {\n    try {\n      const res = await updateUser({\n        ...values,\n        _id: user._id,\n      })\n      if (!res.success)\n        return toast({\n          variant: 'destructive',\n          description: res.message,\n        })\n\n      toast({\n        description: res.message,\n      })\n      form.reset()\n      router.push(`/admin/users`)\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } catch (error: any) {\n      toast({\n        variant: 'destructive',\n        description: error.message,\n      })\n    }\n  }\n\n  return (\n    <Form {...form}>\n      <form\n        method=\"post\"\n        onSubmit={form.handleSubmit(onSubmit)}\n        className=\"space-y-8\"\n      >\n        <div className=\"flex flex-col gap-5 md:flex-row\">\n          <FormField\n            control={form.control}\n            name=\"name\"\n            render={({ field }) => (\n              <FormItem className=\"w-full\">\n                <FormLabel>Name</FormLabel>\n                <FormControl>\n                  <Input placeholder=\"Enter user name\" {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"email\"\n            render={({ field }) => (\n              <FormItem className=\"w-full\">\n                <FormLabel>Email</FormLabel>\n                <FormControl>\n                  <Input placeholder=\"Enter user email\" {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </div>\n        <div>\n          <FormField\n            control={form.control}\n            name=\"role\"\n            render={({ field }) => (\n              <FormItem className=\"space-x-2 items-center\">\n                <FormLabel>Role</FormLabel>\n                <Select\n                  onValueChange={field.onChange}\n                  value={field.value.toString()}\n                >\n                  <FormControl>\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"Select a role\" />\n                    </SelectTrigger>\n                  </FormControl>\n                  <SelectContent>\n                    {USER_ROLES.map((role) => (\n                      <SelectItem key={role} value={role}>\n                        {role}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </div>\n        <div className=\"flex-between\">\n          <Button type=\"submit\" disabled={form.formState.isSubmitting}>\n            {form.formState.isSubmitting ? 'Submitting...' : `Update User `}\n          </Button>\n          <Button\n            variant=\"outline\"\n            type=\"button\"\n            onClick={() => router.push(`/admin/users`)}\n          >\n            Back\n          </Button>\n        </div>\n      </form>\n    </Form>\n  )\n}\n\nexport default UserEditForm\n"],"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","ignoreList":[]}