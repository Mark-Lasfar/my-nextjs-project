{"version":3,"names":["ActionButton","caption","action","className","cov_1w505pystl","b","variant","size","f","isPending","startTransition","s","_react","useTransition","toast","_usetoast","useToast","_jsxruntime","jsx","_button","Button","type","_utils","cn","disabled","onClick","res","success","description","message"],"sources":["/home/mark/Downloads/nextjs-amazona-main/components/shared/action-button.tsx"],"sourcesContent":["'use client'\nimport { useTransition } from 'react'\n\nimport { Button } from '@/components/ui/button'\nimport { useToast } from '@/hooks/use-toast'\nimport { cn } from '@/lib/utils'\n\nexport default function ActionButton({\n  caption,\n  action,\n  className = 'w-full',\n  variant = 'default',\n  size = 'default',\n}: {\n  caption: string\n  action: () => Promise<{ success: boolean; message: string }>\n  className?: string\n  variant?: 'default' | 'outline' | 'destructive'\n  size?: 'default' | 'sm' | 'lg'\n}) {\n  const [isPending, startTransition] = useTransition()\n  const { toast } = useToast()\n  return (\n    <Button\n      type=\"button\"\n      className={cn('rounded-full', className)}\n      variant={variant}\n      size={size}\n      disabled={isPending}\n      onClick={() =>\n        startTransition(async () => {\n          const res = await action()\n          toast({\n            variant: res.success ? 'default' : 'destructive',\n            description: res.message,\n          })\n        })\n      }\n    >\n      {isPending ? 'processing...' : caption}\n    </Button>\n  )\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+BAOA;;;;;;WAAwBA,YAAA;;;;;;;;kCANM;;;kCAEP;;;kCACE;;;kCACN;AAEJ,SAASA,aAAa;EACnCC,OAAO;EACPC,MAAM;EACNC,SAAA;EAAA;EAAA,CAAAC,cAAA,GAAAC,CAAA,UAAY,QAAQ;EACpBC,OAAA;EAAA;EAAA,CAAAF,cAAA,GAAAC,CAAA,UAAU,SAAS;EACnBE,IAAA;EAAA;EAAA,CAAAH,cAAA,GAAAC,CAAA,UAAO,SAAS;AAAA,CAOjB;EAAA;EAAAD,cAAA,GAAAI,CAAA;EACC,MAAM,CAACC,SAAA,EAAWC,eAAA,CAAgB;EAAA;EAAA,CAAAN,cAAA,GAAAO,CAAA,OAAG,IAAAC,MAAA,CAAAC,aAAa;EAClD,MAAM;IAAEC;EAAK,CAAE;EAAA;EAAA,CAAAV,cAAA,GAAAO,CAAA,OAAG,IAAAI,SAAA,CAAAC,QAAQ;EAAA;EAAAZ,cAAA,GAAAO,CAAA;EAC1B,oBACE,IAAAM,WAAA,CAAAC,GAAA,EAACC,OAAA,CAAAC,MAAM;IACLC,IAAA,EAAK;IACLlB,SAAA,EAAW,IAAAmB,MAAA,CAAAC,EAAE,EAAC,gBAAgBpB,SAAA;IAC9BG,OAAA,EAASA,OAAA;IACTC,IAAA,EAAMA,IAAA;IACNiB,QAAA,EAAUf,SAAA;IACVgB,OAAA,EAASA,CAAA,KACP;MAAA;MAAArB,cAAA,GAAAI,CAAA;MAAAJ,cAAA,GAAAO,CAAA;MAAA,OAAAD,eAAA,CAAgB;QAAA;QAAAN,cAAA,GAAAI,CAAA;QACd,MAAMkB,GAAA;QAAA;QAAA,CAAAtB,cAAA,GAAAO,CAAA,QAAM,MAAMT,MAAA;QAAA;QAAAE,cAAA,GAAAO,CAAA;QAClBG,KAAA,CAAM;UACJR,OAAA,EAASoB,GAAA,CAAIC,OAAO;UAAA;UAAA,CAAAvB,cAAA,GAAAC,CAAA,UAAG;UAAA;UAAA,CAAAD,cAAA,GAAAC,CAAA,UAAY;UACnCuB,WAAA,EAAaF,GAAA,CAAIG;QACnB;MACF;IAAA;cAGDpB,SAAA;IAAA;IAAA,CAAAL,cAAA,GAAAC,CAAA,UAAY;IAAA;IAAA,CAAAD,cAAA,GAAAC,CAAA,UAAkBJ,OAAA;;AAGrC","ignoreList":[]}