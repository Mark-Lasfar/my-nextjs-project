{"version":3,"names":["DeliveryDateForm","form","id","cov_1wth703zmb","f","fields","append","remove","s","_reacthookform","useFieldArray","control","name","setValue","watch","formState","errors","availableDeliveryDates","defaultDeliveryDate","_react","useEffect","validNames","map","date","includes","b","JSON","stringify","_jsxruntime","jsxs","_card","Card","jsx","CardHeader","CardTitle","CardContent","className","field","index","_form","FormField","render","FormItem","FormLabel","FormControl","_input","Input","placeholder","FormMessage","message","type","daysToDeliver","shippingPrice","freeShippingMinPrice","_button","Button","disabled","length","variant","onClick","_lucidereact","TrashIcon","_select","Select","value","onValueChange","onChange","SelectTrigger","SelectValue","SelectContent","filter","x","SelectItem"],"sources":["/home/mark/Downloads/nextjs-amazona-main/app/[locale]/admin/settings/delivery-date-form.tsx"],"sourcesContent":["'use client'\n\nimport { Button } from '@/components/ui/button'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form'\nimport { Input } from '@/components/ui/input'\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select'\nimport { ISettingInput } from '@/types'\nimport { DeliveryDateField, UseFieldArrayProps } from '@/types/form'\nimport { TrashIcon } from 'lucide-react'\nimport React, { useEffect } from 'react'\nimport { useFieldArray, UseFormReturn } from 'react-hook-form'\n\nexport default function DeliveryDateForm({\n  form,\n  id,\n}: {\n  form: UseFormReturn<ISettingInput>\n  id: string\n}) {\n  const { fields, append, remove } = useFieldArray<ISettingInput>({\n    control: form.control,\n    name: 'availableDeliveryDates',\n  } as UseFieldArrayProps<ISettingInput>)\n\n  const {\n    setValue,\n    watch,\n    control,\n    formState: { errors },\n  } = form\n\n  const availableDeliveryDates = watch('availableDeliveryDates')\n  const defaultDeliveryDate = watch('defaultDeliveryDate')\n\n  useEffect(() => {\n    const validNames = availableDeliveryDates.map((date) => date.name)\n    if (!validNames.includes(defaultDeliveryDate)) {\n      setValue('defaultDeliveryDate', '')\n    }\n  }, [JSON.stringify(availableDeliveryDates), defaultDeliveryDate, setValue])\n\n  return (\n    <Card id={id}>\n      <CardHeader>\n        <CardTitle>Delivery Dates</CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        <div className=\"space-y-4\">\n          {fields.map((field, index) => (\n            <div key={field.id} className=\"flex gap-2\">\n              <FormField\n                control={form.control}\n                name={`availableDeliveryDates.${index}.name`}\n                render={({ field }) => (\n                  <FormItem>\n                    {index === 0 && <FormLabel>Name</FormLabel>}\n                    <FormControl>\n                      <Input {...field} placeholder=\"Name\" />\n                    </FormControl>\n                    <FormMessage>\n                      {errors.availableDeliveryDates?.[index]?.name?.message}\n                    </FormMessage>\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name={`availableDeliveryDates.${index}.daysToDeliver`}\n                render={({ field }) => (\n                  <FormItem>\n                    {index === 0 && <FormLabel>Days to Deliver</FormLabel>}\n                    <FormControl>\n                      <Input {...field} type=\"number\" placeholder=\"Days\" />\n                    </FormControl>\n                    <FormMessage>\n                      {\n                        errors.availableDeliveryDates?.[index]?.daysToDeliver\n                          ?.message\n                      }\n                    </FormMessage>\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name={`availableDeliveryDates.${index}.shippingPrice`}\n                render={({ field }) => (\n                  <FormItem>\n                    {index === 0 && <FormLabel>Shipping Price</FormLabel>}\n                    <FormControl>\n                      <Input {...field} type=\"number\" placeholder=\"Price\" />\n                    </FormControl>\n                    <FormMessage>\n                      {\n                        errors.availableDeliveryDates?.[index]?.shippingPrice\n                          ?.message\n                      }\n                    </FormMessage>\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name={`availableDeliveryDates.${index}.freeShippingMinPrice`}\n                render={({ field }) => (\n                  <FormItem>\n                    {index === 0 && (\n                      <FormLabel>Free Shipping Min Price</FormLabel>\n                    )}\n                    <FormControl>\n                      <Input {...field} type=\"number\" placeholder=\"Min Price\" />\n                    </FormControl>\n                    <FormMessage>\n                      {\n                        errors.availableDeliveryDates?.[index]\n                          ?.freeShippingMinPrice?.message\n                      }\n                    </FormMessage>\n                  </FormItem>\n                )}\n              />\n\n              <div>\n                {index === 0 && <div>Action</div>}\n                <Button\n                  type=\"button\"\n                  disabled={fields.length === 1}\n                  variant=\"outline\"\n                  className={index === 0 ? 'mt-2' : ''}\n                  onClick={() => remove(index)}\n                >\n                  <TrashIcon className=\"w-4 h-4\" />\n                </Button>\n              </div>\n            </div>\n          ))}\n\n          <Button\n            type=\"button\"\n            variant=\"outline\"\n            onClick={() =>\n              append({\n                name: '',\n                daysToDeliver: 0,\n                shippingPrice: 0,\n                freeShippingMinPrice: 0,\n              } as DeliveryDateField)\n            }\n          >\n            Add Delivery Date\n          </Button>\n        </div>\n\n        <FormField\n          control={control}\n          name=\"defaultDeliveryDate\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Default Delivery Date</FormLabel>\n              <FormControl>\n                <Select\n                  value={field.value || ''}\n                  onValueChange={(value) => field.onChange(value)}\n                >\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Select a delivery date\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {availableDeliveryDates\n                      .filter((x) => x.name)\n                      .map((date, index) => (\n                        <SelectItem key={index} value={date.name}>\n                          {date.name}\n                        </SelectItem>\n                      ))}\n                  </SelectContent>\n                </Select>\n              </FormControl>\n              <FormMessage>{errors.defaultDeliveryDate?.message}</FormMessage>\n            </FormItem>\n          )}\n        />\n      </CardContent>\n    </Card>\n  )\n}\n"],"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","ignoreList":[]}