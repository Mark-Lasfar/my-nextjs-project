dc84d284a18bc5a7f9c572de74bbb2dc
"use strict";

/* istanbul ignore next */
function cov_23cpzj9yh2() {
  var path = "/home/mark/Downloads/nextjs-amazona-main/app/[locale]/product/[slug]/opengraph-image.tsx";
  var hash = "6b3b5371c376b36998ab133f547710d4eafea2a7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/mark/Downloads/nextjs-amazona-main/app/[locale]/product/[slug]/opengraph-image.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 28,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 27
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 21
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 26
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 23
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 20
        }
      },
      "9": {
        start: {
          line: 29,
          column: 20
        },
        end: {
          line: 29,
          column: 48
        }
      },
      "10": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 30,
          column: 30
        }
      },
      "11": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 31,
          column: 24
        }
      },
      "12": {
        start: {
          line: 32,
          column: 19
        },
        end: {
          line: 32,
          column: 23
        }
      },
      "13": {
        start: {
          line: 34,
          column: 20
        },
        end: {
          line: 34,
          column: 31
        }
      },
      "14": {
        start: {
          line: 35,
          column: 13
        },
        end: {
          line: 38,
          column: 1
        }
      },
      "15": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 113,
          column: 5
        }
      },
      "16": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 91,
          column: 11
        }
      },
      "17": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 55
        }
      },
      "18": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 112,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 17
          },
          end: {
            line: 12,
            column: 18
          }
        },
        loc: {
          start: {
            line: 12,
            column: 28
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 13
          },
          end: {
            line: 16,
            column: 14
          }
        },
        loc: {
          start: {
            line: 16,
            column: 24
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 16
          },
          end: {
            line: 19,
            column: 17
          }
        },
        loc: {
          start: {
            line: 19,
            column: 27
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 13
          },
          end: {
            line: 22,
            column: 14
          }
        },
        loc: {
          start: {
            line: 22,
            column: 24
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 10
          },
          end: {
            line: 25,
            column: 11
          }
        },
        loc: {
          start: {
            line: 25,
            column: 21
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "Image",
        decl: {
          start: {
            line: 39,
            column: 15
          },
          end: {
            line: 39,
            column: 20
          }
        },
        loc: {
          start: {
            line: 39,
            column: 33
          },
          end: {
            line: 114,
            column: 1
          }
        },
        line: 39
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {},
    inputSourceMap: {
      version: 3,
      sources: ["/home/mark/Downloads/nextjs-amazona-main/app/[locale]/product/[slug]/opengraph-image.tsx"],
      sourcesContent: ["import { ImageResponse } from 'next/og'\n\n// Route segment config\nexport const runtime = 'nodejs'\nexport const revalidate = 3600 // revalidate every hour\nexport const contentType = 'image/png'\nexport const size = {\n  width: 1200,\n  height: 630,\n}\n\n// Image generation\nexport default async function Image({ params }: { params: { slug: string } }) {\n  try {\n    return new ImageResponse(\n      (\n        <div\n          style={{\n            background: 'linear-gradient(to bottom, #000000, #1a1a1a)',\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            padding: '40px',\n          }}\n        >\n          <div\n            style={{\n              width: '200px',\n              height: '200px',\n              marginBottom: '40px',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              background: '#ffffff',\n              borderRadius: '50%',\n            }}\n          >\n            <span style={{ fontSize: '100px' }}>M</span>\n          </div>\n          <h1\n            style={{\n              fontSize: '60px',\n              color: '#ffffff',\n              marginBottom: '20px',\n              textAlign: 'center',\n            }}\n          >\n            MGZon\n          </h1>\n          <p\n            style={{\n              fontSize: '30px',\n              color: '#cccccc',\n              textAlign: 'center',\n            }}\n          >\n            {decodeURIComponent(params.slug)}\n          </p>\n        </div>\n      ),\n      {\n        ...size,\n      }\n    )\n  } catch (error) {\n    console.error('OpenGraph Image Error:', error)\n    return new ImageResponse(\n      (\n        <div\n          style={{\n            background: '#000000',\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <h1\n            style={{\n              fontSize: '48px',\n              color: '#ffffff',\n            }}\n          >\n            MGZon\n          </h1>\n        </div>\n      ),\n      {\n        ...size,\n      }\n    )\n  }\n}\n"],
      names: ["contentType", "Image", "revalidate", "runtime", "size", "width", "height", "params", "ImageResponse", "div", "style", "background", "display", "flexDirection", "alignItems", "justifyContent", "padding", "marginBottom", "borderRadius", "span", "fontSize", "h1", "color", "textAlign", "p", "decodeURIComponent", "slug", "error", "console"],
      mappings: ";;;;;;;;;;;IAKaA,WAAW;eAAXA;;IAMb,mBAAmB;IACnB,OAoFC;eApF6BC;;IARjBC,UAAU;eAAVA;;IADAC,OAAO;eAAPA;;IAGAC,IAAI;eAAJA;;;;oBANiB;AAGvB,MAAMD,UAAU;AAChB,MAAMD,aAAa,KAAK,wBAAwB;;AAChD,MAAMF,cAAc;AACpB,MAAMI,OAAO;IAClBC,OAAO;IACPC,QAAQ;AACV;AAGe,eAAeL,MAAM,EAAEM,MAAM,EAAgC;IAC1E,IAAI;QACF,OAAO,IAAIC,iBAAa,eAEpB,sBAACC;YACCC,OAAO;gBACLC,YAAY;gBACZN,OAAO;gBACPC,QAAQ;gBACRM,SAAS;gBACTC,eAAe;gBACfC,YAAY;gBACZC,gBAAgB;gBAChBC,SAAS;YACX;;8BAEA,qBAACP;oBACCC,OAAO;wBACLL,OAAO;wBACPC,QAAQ;wBACRW,cAAc;wBACdL,SAAS;wBACTE,YAAY;wBACZC,gBAAgB;wBAChBJ,YAAY;wBACZO,cAAc;oBAChB;8BAEA,cAAA,qBAACC;wBAAKT,OAAO;4BAAEU,UAAU;wBAAQ;kCAAG;;;8BAEtC,qBAACC;oBACCX,OAAO;wBACLU,UAAU;wBACVE,OAAO;wBACPL,cAAc;wBACdM,WAAW;oBACb;8BACD;;8BAGD,qBAACC;oBACCd,OAAO;wBACLU,UAAU;wBACVE,OAAO;wBACPC,WAAW;oBACb;8BAECE,mBAAmBlB,OAAOmB,IAAI;;;YAIrC;YACE,GAAGtB,IAAI;QACT;IAEJ,EAAE,OAAOuB,OAAO;QACdC,QAAQD,KAAK,CAAC,0BAA0BA;QACxC,OAAO,IAAInB,iBAAa,eAEpB,qBAACC;YACCC,OAAO;gBACLC,YAAY;gBACZN,OAAO;gBACPC,QAAQ;gBACRM,SAAS;gBACTE,YAAY;gBACZC,gBAAgB;YAClB;sBAEA,cAAA,qBAACM;gBACCX,OAAO;oBACLU,UAAU;oBACVE,OAAO;gBACT;0BACD;;YAKL;YACE,GAAGlB,IAAI;QACT;IAEJ;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6b3b5371c376b36998ab133f547710d4eafea2a7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_23cpzj9yh2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_23cpzj9yh2();
cov_23cpzj9yh2().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_23cpzj9yh2().f[0]++;
  cov_23cpzj9yh2().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_23cpzj9yh2().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_23cpzj9yh2().s[3]++;
_export(exports, {
  contentType: function () {
    /* istanbul ignore next */
    cov_23cpzj9yh2().f[1]++;
    cov_23cpzj9yh2().s[4]++;
    return contentType;
  },
  // Image generation
  default: function () {
    /* istanbul ignore next */
    cov_23cpzj9yh2().f[2]++;
    cov_23cpzj9yh2().s[5]++;
    return Image;
  },
  revalidate: function () {
    /* istanbul ignore next */
    cov_23cpzj9yh2().f[3]++;
    cov_23cpzj9yh2().s[6]++;
    return revalidate;
  },
  runtime: function () {
    /* istanbul ignore next */
    cov_23cpzj9yh2().f[4]++;
    cov_23cpzj9yh2().s[7]++;
    return runtime;
  },
  size: function () {
    /* istanbul ignore next */
    cov_23cpzj9yh2().f[5]++;
    cov_23cpzj9yh2().s[8]++;
    return size;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_23cpzj9yh2().s[9]++, require("react/jsx-runtime"));
const _og =
/* istanbul ignore next */
(cov_23cpzj9yh2().s[10]++, require("next/og"));
const runtime =
/* istanbul ignore next */
(cov_23cpzj9yh2().s[11]++, 'nodejs');
const revalidate =
/* istanbul ignore next */
(cov_23cpzj9yh2().s[12]++, 3600) // revalidate every hour
;
const contentType =
/* istanbul ignore next */
(cov_23cpzj9yh2().s[13]++, 'image/png');
const size =
/* istanbul ignore next */
(cov_23cpzj9yh2().s[14]++, {
  width: 1200,
  height: 630
});
async function Image({
  params
}) {
  /* istanbul ignore next */
  cov_23cpzj9yh2().f[6]++;
  cov_23cpzj9yh2().s[15]++;
  try {
    /* istanbul ignore next */
    cov_23cpzj9yh2().s[16]++;
    return new _og.ImageResponse(/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      style: {
        background: 'linear-gradient(to bottom, #000000, #1a1a1a)',
        width: '100%',
        height: '100%',
        display: 'flex',
        flexDirection: 'column',
        alignItems: 'center',
        justifyContent: 'center',
        padding: '40px'
      },
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        style: {
          width: '200px',
          height: '200px',
          marginBottom: '40px',
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'center',
          background: '#ffffff',
          borderRadius: '50%'
        },
        children: /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
          style: {
            fontSize: '100px'
          },
          children: "M"
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("h1", {
        style: {
          fontSize: '60px',
          color: '#ffffff',
          marginBottom: '20px',
          textAlign: 'center'
        },
        children: "MGZon"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
        style: {
          fontSize: '30px',
          color: '#cccccc',
          textAlign: 'center'
        },
        children: decodeURIComponent(params.slug)
      })]
    }), {
      ...size
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_23cpzj9yh2().s[17]++;
    console.error('OpenGraph Image Error:', error);
    /* istanbul ignore next */
    cov_23cpzj9yh2().s[18]++;
    return new _og.ImageResponse(/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      style: {
        background: '#000000',
        width: '100%',
        height: '100%',
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'center'
      },
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("h1", {
        style: {
          fontSize: '48px',
          color: '#ffffff'
        },
        children: "MGZon"
      })
    }), {
      ...size
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMjNjcHpqOXloMiIsImFjdHVhbENvdmVyYWdlIiwicyIsImNvbnRlbnRUeXBlIiwiZiIsImRlZmF1bHQiLCJJbWFnZSIsInJldmFsaWRhdGUiLCJydW50aW1lIiwic2l6ZSIsIndpZHRoIiwiaGVpZ2h0IiwicGFyYW1zIiwiX29nIiwiSW1hZ2VSZXNwb25zZSIsIl9qc3hydW50aW1lIiwianN4cyIsInN0eWxlIiwiYmFja2dyb3VuZCIsImRpc3BsYXkiLCJmbGV4RGlyZWN0aW9uIiwiYWxpZ25JdGVtcyIsImp1c3RpZnlDb250ZW50IiwicGFkZGluZyIsImpzeCIsIm1hcmdpbkJvdHRvbSIsImJvcmRlclJhZGl1cyIsImZvbnRTaXplIiwiY29sb3IiLCJ0ZXh0QWxpZ24iLCJkZWNvZGVVUklDb21wb25lbnQiLCJzbHVnIiwiZXJyb3IiLCJjb25zb2xlIl0sInNvdXJjZXMiOlsiL2hvbWUvbWFyay9Eb3dubG9hZHMvbmV4dGpzLWFtYXpvbmEtbWFpbi9hcHAvW2xvY2FsZV0vcHJvZHVjdC9bc2x1Z10vb3BlbmdyYXBoLWltYWdlLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbWFnZVJlc3BvbnNlIH0gZnJvbSAnbmV4dC9vZydcblxuLy8gUm91dGUgc2VnbWVudCBjb25maWdcbmV4cG9ydCBjb25zdCBydW50aW1lID0gJ25vZGVqcydcbmV4cG9ydCBjb25zdCByZXZhbGlkYXRlID0gMzYwMCAvLyByZXZhbGlkYXRlIGV2ZXJ5IGhvdXJcbmV4cG9ydCBjb25zdCBjb250ZW50VHlwZSA9ICdpbWFnZS9wbmcnXG5leHBvcnQgY29uc3Qgc2l6ZSA9IHtcbiAgd2lkdGg6IDEyMDAsXG4gIGhlaWdodDogNjMwLFxufVxuXG4vLyBJbWFnZSBnZW5lcmF0aW9uXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBJbWFnZSh7IHBhcmFtcyB9OiB7IHBhcmFtczogeyBzbHVnOiBzdHJpbmcgfSB9KSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIG5ldyBJbWFnZVJlc3BvbnNlKFxuICAgICAgKFxuICAgICAgICA8ZGl2XG4gICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICdsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCAjMDAwMDAwLCAjMWExYTFhKScsXG4gICAgICAgICAgICB3aWR0aDogJzEwMCUnLFxuICAgICAgICAgICAgaGVpZ2h0OiAnMTAwJScsXG4gICAgICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgICAgICBmbGV4RGlyZWN0aW9uOiAnY29sdW1uJyxcbiAgICAgICAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgICAgICAgICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICAgICAgICAgICAgcGFkZGluZzogJzQwcHgnLFxuICAgICAgICAgIH19XG4gICAgICAgID5cbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICB3aWR0aDogJzIwMHB4JyxcbiAgICAgICAgICAgICAgaGVpZ2h0OiAnMjAwcHgnLFxuICAgICAgICAgICAgICBtYXJnaW5Cb3R0b206ICc0MHB4JyxcbiAgICAgICAgICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgICAgICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICAgICAgICAgICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAnI2ZmZmZmZicsXG4gICAgICAgICAgICAgIGJvcmRlclJhZGl1czogJzUwJScsXG4gICAgICAgICAgICB9fVxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxzcGFuIHN0eWxlPXt7IGZvbnRTaXplOiAnMTAwcHgnIH19Pk08L3NwYW4+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGgxXG4gICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICBmb250U2l6ZTogJzYwcHgnLFxuICAgICAgICAgICAgICBjb2xvcjogJyNmZmZmZmYnLFxuICAgICAgICAgICAgICBtYXJnaW5Cb3R0b206ICcyMHB4JyxcbiAgICAgICAgICAgICAgdGV4dEFsaWduOiAnY2VudGVyJyxcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgPlxuICAgICAgICAgICAgTUdab25cbiAgICAgICAgICA8L2gxPlxuICAgICAgICAgIDxwXG4gICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICBmb250U2l6ZTogJzMwcHgnLFxuICAgICAgICAgICAgICBjb2xvcjogJyNjY2NjY2MnLFxuICAgICAgICAgICAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxuICAgICAgICAgICAgfX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7ZGVjb2RlVVJJQ29tcG9uZW50KHBhcmFtcy5zbHVnKX1cbiAgICAgICAgICA8L3A+XG4gICAgICAgIDwvZGl2PlxuICAgICAgKSxcbiAgICAgIHtcbiAgICAgICAgLi4uc2l6ZSxcbiAgICAgIH1cbiAgICApXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignT3BlbkdyYXBoIEltYWdlIEVycm9yOicsIGVycm9yKVxuICAgIHJldHVybiBuZXcgSW1hZ2VSZXNwb25zZShcbiAgICAgIChcbiAgICAgICAgPGRpdlxuICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAnIzAwMDAwMCcsXG4gICAgICAgICAgICB3aWR0aDogJzEwMCUnLFxuICAgICAgICAgICAgaGVpZ2h0OiAnMTAwJScsXG4gICAgICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICAgICAgICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgICAgICAgICB9fVxuICAgICAgICA+XG4gICAgICAgICAgPGgxXG4gICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICBmb250U2l6ZTogJzQ4cHgnLFxuICAgICAgICAgICAgICBjb2xvcjogJyNmZmZmZmYnLFxuICAgICAgICAgICAgfX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBNR1pvblxuICAgICAgICAgIDwvaDE+XG4gICAgICAgIDwvZGl2PlxuICAgICAgKSxcbiAgICAgIHtcbiAgICAgICAgLi4uc2l6ZSxcbiAgICAgIH1cbiAgICApXG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBZ0dDO0lBQUFBLGNBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFDLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUFELGNBQUE7QUFBQUEsY0FBQSxHQUFBRSxDQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztFQTNGWUMsV0FBVyxXQUFBQSxDQUFBO0lBQUE7SUFBQUgsY0FBQSxHQUFBSSxDQUFBO0lBQUFKLGNBQUEsR0FBQUUsQ0FBQTtXQUFYQyxXQUFBOztFQU1iO0VBQ0FFLE9Bb0ZDLFdBQUFBLENBQUE7SUFBQTtJQUFBTCxjQUFBLEdBQUFJLENBQUE7SUFBQUosY0FBQSxHQUFBRSxDQUFBO1dBcEY2Qkks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