{"version":3,"names":["_default","locales","cov_q06ymjxev","s","_i18nconfig","i18n","filter","locale","f","code","map","isNotInPaths","localePattern","join","pathsPattern","RegExp","test","useCartSidebar","cart","items","_usecartstore","default","deviceType","_usedevicetype","currentPath","_navigation","usePathname","b","length"],"sources":["/home/mark/Downloads/nextjs-amazona-main/hooks/use-cart-sidebar.ts"],"sourcesContent":["import { usePathname } from 'next/navigation'\nimport useDeviceType from './use-device-type'\nimport useCartStore from './use-cart-store'\nimport { i18n } from '@/i18n-config'\n\nconst locales = i18n.locales\n  .filter((locale) => locale.code !== 'en-US')\n  .map((locale) => locale.code)\n\nconst isNotInPaths = (s: string) => {\n  const localePattern = `/(?:${locales.join('|')})` // Match locales\n  const pathsPattern = `^(?:${localePattern})?(?:/$|/cart$|/checkout$|/sign-in$|/sign-up$|/order(?:/.*)?$|/account(?:/.*)?$|/admin(?:/.*)?$)?$`\n  return !new RegExp(pathsPattern).test(s)\n}\n\nfunction useCartSidebar() {\n  const {\n    cart: { items },\n  } = useCartStore()\n  const deviceType = useDeviceType()\n  const currentPath = usePathname()\n\n  return (\n    items.length > 0 && deviceType === 'desktop' && isNotInPaths(currentPath)\n  )\n}\n\nexport default useCartSidebar\n"],"mappingsiCA3B4B;;;uEACF;;;uEACD;;;iCACJ;;;;;;;;;;;;;;;AAErB,MAAMC,OAAA;AAAA;AAAA,CAAAC,aAAA,GAAAC,CAAA,OAAUC,WAAA,CAAAC,IAAI,CAACJ,OAAO,CACzBK,MAAM,CAAEC,MAAA,IAAW;EAAA;EAAAL,aAAA,GAAAM,CAAA;EAAAN,aAAA,GAAAC,CAAA;EAAA,OAAAI,MAAA,CAAOE,IAAI,KAAK;AAAA,GACnCC,GAAG,CAAEH,MAAA,IAAW;EAAA;EAAAL,aAAA,GAAAM,CAAA;EAAAN,aAAA,GAAAC,CAAA;EAAA,OAAAI,MAAA,CAAOE,IAAI;AAAJ,CAAI;AAAA;AAAAP,aAAA,GAAAC,CAAA;AAE9B,MAAMQ,YAAA,GAAgBR,CAAA;EAAA;EAAAD,aAAA,GAAAM,CAAA;EACpB,MAAMI,aAAA;EAAA;EAAA,CAAAV,aAAA,GAAAC,CAAA,QAAgB,OAAOF,OAAA,CAAQY,IAAI,CAAC,OAAO,EAAC;EAAA;EAClD,MAAMC,YAAA;EAAA;EAAA,CAAAZ,aAAA,GAAAC,CAAA,QAAe,OAAOS,aAAA,oGAAiH;EAAA;EAAAV,aAAA,GAAAC,CAAA;EAC7I,OAAO,CAAC,IAAIY,MAAA,CAAOD,YAAA,EAAcE,IAAI,CAACb,CAAA;AACxC;AAEA,SAASc,eAAA;EAAA;EAAAf,aAAA,GAAAM,CAAA;EACP,MAAM;IACJU,IAAA,EAAM;MAAEC;IAAK;EAAE,CAChB;EAAA;EAAA,CAAAjB,aAAA,GAAAC,CAAA,QAAG,IAAAiB,aAAA,CAAAC,OAAY;EAChB,MAAMC,UAAA;EAAA;EAAA,CAAApB,aAAA,GAAAC,CAAA,QAAa,IAAAoB,cAAA,CAAAF,OAAa;EAChC,MAAMG,WAAA;EAAA;EAAA,CAAAtB,aAAA,GAAAC,CAAA,QAAc,IAAAsB,WAAA,CAAAC,WAAW;EAAA;EAAAxB,aAAA,GAAAC,CAAA;EAE/B,OACE,2BAAAD,aAAA,GAAAyB,CAAA,UAAAR,KAAA,CAAMS,MAAM,GAAG;EAAA;EAAA,CAAA1B,aAAA,GAAAyB,CAAA,UAAKL,UAAA,KAAe;EAAA;EAAA,CAAApB,aAAA,GAAAyB,CAAA,UAAahB,YAAA,CAAaa,WAAA;AAEjE;MAEAxB,QAAA;AAAA;AAAA,CAAAE,aAAA,GAAAC,CAAA,QAAec,cAAA","ignoreList":[]}