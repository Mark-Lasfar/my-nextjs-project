{"version":3,"sources":["/home/mark/Downloads/nextjs-amazona-main/jest.setup.js"],"sourcesContent":["// Import testing libraries\nimport '@testing-library/jest-dom'\nimport { TextDecoder, TextEncoder } from 'util'\n\n// Mock fetch API\nglobal.fetch = jest.fn()\n\n// Mock window.matchMedia\nwindow.matchMedia = jest.fn().mockImplementation((query) => ({\n  matches: false,\n  media: query,\n  onchange: null,\n  addListener: jest.fn(),\n  removeListener: jest.fn(),\n  addEventListener: jest.fn(),\n  removeEventListener: jest.fn(),\n  dispatchEvent: jest.fn(),\n}))\n\n// Mock IntersectionObserver\nglobal.IntersectionObserver = class IntersectionObserver {\n  constructor(callback, options) {\n    this.callback = callback\n    this.options = options\n  }\n\n  observe = jest.fn()\n  unobserve = jest.fn()\n  disconnect = jest.fn()\n}\n\n// Mock ResizeObserver\nglobal.ResizeObserver = class ResizeObserver {\n  constructor(callback) {\n    this.callback = callback\n  }\n\n  observe = jest.fn()\n  unobserve = jest.fn()\n  disconnect = jest.fn()\n}\n\n// Mock window location\ndelete window.location\nwindow.location = {\n  protocol: 'http:',\n  host: 'localhost:3000',\n  hostname: 'localhost',\n  port: '3000',\n  pathname: '/',\n  search: '',\n  hash: '',\n  href: 'http://localhost:3000/',\n  origin: 'http://localhost:3000',\n  assign: jest.fn(),\n  replace: jest.fn(),\n  reload: jest.fn(),\n}\n\n// Mock scrollTo\nwindow.scrollTo = jest.fn()\n\n// Mock text encoder/decoder\nglobal.TextEncoder = TextEncoder\nglobal.TextDecoder = TextDecoder\n\n// Mock localStorage\nconst localStorageMock = (() => {\n  let store = {}\n  return {\n    getItem: (key) => store[key] || null,\n    setItem: (key, value) => {\n      store[key] = String(value)\n    },\n    removeItem: (key) => {\n      delete store[key]\n    },\n    clear: () => {\n      store = {}\n    },\n    length: Object.keys(store).length,\n    key: (index) => Object.keys(store)[index] || null,\n  }\n})()\n\nObject.defineProperty(window, 'localStorage', {\n  value: localStorageMock,\n})\n\n// Mock sessionStorage\nObject.defineProperty(window, 'sessionStorage', {\n  value: localStorageMock,\n})\n\n// Mock clipboard API\nObject.defineProperty(navigator, 'clipboard', {\n  value: {\n    writeText: jest.fn(),\n    readText: jest.fn(),\n  },\n})\n\n// Mock window.URL\nwindow.URL.createObjectURL = jest.fn()\nwindow.URL.revokeObjectURL = jest.fn()\n\n// Mock console methods\nconsole.error = jest.fn()\nconsole.warn = jest.fn()\nconsole.log = jest.fn()\n\n// Mock window dimensions\nObject.defineProperty(window, 'innerWidth', {\n  writable: true,\n  configurable: true,\n  value: 1024,\n})\n\nObject.defineProperty(window, 'innerHeight', {\n  writable: true,\n  configurable: true,\n  value: 768,\n})\n\n// Mock requestAnimationFrame\nglobal.requestAnimationFrame = (callback) => setTimeout(callback, 0)\nglobal.cancelAnimationFrame = jest.fn()\n\n// Mock MutationObserver\nglobal.MutationObserver = class {\n  constructor(callback) {\n    this.callback = callback\n  }\n\n  disconnect = jest.fn()\n  observe = jest.fn()\n  takeRecords = jest.fn()\n}\n\n// Extend Jest matchers\nexpect.extend({\n  toBeValidDate(received) {\n    const pass = received instanceof Date && !isNaN(received)\n    return {\n      pass,\n      message: () =>\n        `expected ${received} to be a valid Date${pass ? ' not' : ''}`,\n    }\n  },\n})\n\n// Mock Image class\nglobal.Image = class {\n  constructor() {\n    setTimeout(() => {\n      if (this.onload) this.onload()\n    })\n    return {\n      src: '',\n      onload: null,\n      onerror: null,\n    }\n  }\n}\n\n// Clear mocks after each test\nafterEach(() => {\n  jest.clearAllMocks()\n  localStorage.clear()\n  sessionStorage.clear()\n})\n\n// Clean up after all tests\nafterAll(() => {\n  jest.resetAllMocks()\n})\n\n// Set timezone for consistent date testing\nprocess.env.TZ = 'UTC'\n\n// Mock Next.js routing\njest.mock('next/navigation', () => ({\n  useRouter: () => ({\n    push: jest.fn(),\n    replace: jest.fn(),\n    prefetch: jest.fn(),\n    back: jest.fn(),\n    forward: jest.fn(),\n    refresh: jest.fn(),\n    pathname: '/',\n  }),\n  usePathname: () => '/',\n  useSearchParams: () => new URLSearchParams(),\n}))\n\n// Mock Next.js image component\njest.mock('next/image', () => ({\n  __esModule: true,\n  default: (props) => {\n    // eslint-disable-next-line @next/next/no-img-element\n    return <img {...props} alt={props.alt || ''} />\n  },\n}))\n\n// Mock Next.js link component\njest.mock('next/link', () => ({\n  __esModule: true,\n  default: ({ children, href, ...props }) => (\n    <a href={href} {...props}>\n      {children}\n    </a>\n  ),\n}))\n\n// Mock next-auth\njest.mock('next-auth/react', () => ({\n  useSession: jest.fn(() => ({\n    data: null,\n    status: 'unauthenticated',\n  })),\n  signIn: jest.fn(),\n  signOut: jest.fn(),\n}))\n\n// Set up environment variables\nprocess.env = {\n  ...process.env,\n  NEXT_PUBLIC_APP_URL: 'http://localhost:3000',\n  NODE_ENV: 'test',\n}"],"names":["jest","mock","useRouter","push","fn","replace","prefetch","back","forward","refresh","pathname","usePathname","useSearchParams","URLSearchParams","__esModule","default","props","img","alt","children","href","a","useSession","data","status","signIn","signOut","global","fetch","window","matchMedia","mockImplementation","query","matches","media","onchange","addListener","removeListener","addEventListener","removeEventListener","dispatchEvent","IntersectionObserver","constructor","callback","options","observe","unobserve","disconnect","ResizeObserver","location","protocol","host","hostname","port","search","hash","origin","assign","reload","scrollTo","TextEncoder","TextDecoder","localStorageMock","store","getItem","key","setItem","value","String","removeItem","clear","length","Object","keys","index","defineProperty","navigator","writeText","readText","URL","createObjectURL","revokeObjectURL","console","error","warn","log","writable","configurable","requestAnimationFrame","setTimeout","cancelAnimationFrame","MutationObserver","takeRecords","expect","extend","toBeValidDate","received","pass","Date","isNaN","message","Image","onload","src","onerror","afterEach","clearAllMocks","localStorage","sessionStorage","afterAll","resetAllMocks","process","env","TZ","NEXT_PUBLIC_APP_URL","NODE_ENV"],"mappings":"AAAA,2BAA2B;;AAoL3B,uBAAuB;AACvBA,KAAKC,IAAI,CAAC,mBAAmB,IAAO,CAAA;QAClCC,WAAW,IAAO,CAAA;gBAChBC,MAAMH,KAAKI,EAAE;gBACbC,SAASL,KAAKI,EAAE;gBAChBE,UAAUN,KAAKI,EAAE;gBACjBG,MAAMP,KAAKI,EAAE;gBACbI,SAASR,KAAKI,EAAE;gBAChBK,SAAST,KAAKI,EAAE;gBAChBM,UAAU;YACZ,CAAA;QACAC,aAAa,IAAM;QACnBC,iBAAiB,IAAM,IAAIC;IAC7B,CAAA;AAEA,+BAA+B;AAC/Bb,KAAKC,IAAI,CAAC,cAAc,IAAO,CAAA;QAC7Ba,YAAY;QACZC,SAAS,CAACC;YACR,qDAAqD;YACrD,qBAAO,qBAACC;gBAAK,GAAGD,KAAK;gBAAEE,KAAKF,MAAME,GAAG,IAAI;;QAC3C;IACF,CAAA;AAEA,8BAA8B;AAC9BlB,KAAKC,IAAI,CAAC,aAAa,IAAO,CAAA;QAC5Ba,YAAY;QACZC,SAAS,CAAC,EAAEI,QAAQ,EAAEC,IAAI,EAAE,GAAGJ,OAAO,iBACpC,qBAACK;gBAAED,MAAMA;gBAAO,GAAGJ,KAAK;0BACrBG;;IAGP,CAAA;AAEA,iBAAiB;AACjBnB,KAAKC,IAAI,CAAC,mBAAmB,IAAO,CAAA;QAClCqB,YAAYtB,KAAKI,EAAE,CAAC,IAAO,CAAA;gBACzBmB,MAAM;gBACNC,QAAQ;YACV,CAAA;QACAC,QAAQzB,KAAKI,EAAE;QACfsB,SAAS1B,KAAKI,EAAE;IAClB,CAAA;;;;;QA7NO;sBACkC;AAEzC,iBAAiB;AACjBuB,OAAOC,KAAK,GAAG5B,KAAKI,EAAE;AAEtB,yBAAyB;AACzByB,OAAOC,UAAU,GAAG9B,KAAKI,EAAE,GAAG2B,kBAAkB,CAAC,CAACC,QAAW,CAAA;QAC3DC,SAAS;QACTC,OAAOF;QACPG,UAAU;QACVC,aAAapC,KAAKI,EAAE;QACpBiC,gBAAgBrC,KAAKI,EAAE;QACvBkC,kBAAkBtC,KAAKI,EAAE;QACzBmC,qBAAqBvC,KAAKI,EAAE;QAC5BoC,eAAexC,KAAKI,EAAE;IACxB,CAAA;AAEA,4BAA4B;AAC5BuB,OAAOc,oBAAoB,GAAG,MAAMA;IAClCC,YAAYC,QAAQ,EAAEC,OAAO,CAAE;aAK/BC,UAAU7C,KAAKI,EAAE;aACjB0C,YAAY9C,KAAKI,EAAE;aACnB2C,aAAa/C,KAAKI,EAAE;QANlB,IAAI,CAACuC,QAAQ,GAAGA;QAChB,IAAI,CAACC,OAAO,GAAGA;IACjB;AAKF;AAEA,sBAAsB;AACtBjB,OAAOqB,cAAc,GAAG,MAAMA;IAC5BN,YAAYC,QAAQ,CAAE;aAItBE,UAAU7C,KAAKI,EAAE;aACjB0C,YAAY9C,KAAKI,EAAE;aACnB2C,aAAa/C,KAAKI,EAAE;QALlB,IAAI,CAACuC,QAAQ,GAAGA;IAClB;AAKF;AAEA,uBAAuB;AACvB,OAAOd,OAAOoB,QAAQ;AACtBpB,OAAOoB,QAAQ,GAAG;IAChBC,UAAU;IACVC,MAAM;IACNC,UAAU;IACVC,MAAM;IACN3C,UAAU;IACV4C,QAAQ;IACRC,MAAM;IACNnC,MAAM;IACNoC,QAAQ;IACRC,QAAQzD,KAAKI,EAAE;IACfC,SAASL,KAAKI,EAAE;IAChBsD,QAAQ1D,KAAKI,EAAE;AACjB;AAEA,gBAAgB;AAChByB,OAAO8B,QAAQ,GAAG3D,KAAKI,EAAE;AAEzB,4BAA4B;AAC5BuB,OAAOiC,WAAW,GAAGA,iBAAW;AAChCjC,OAAOkC,WAAW,GAAGA,iBAAW;AAEhC,oBAAoB;AACpB,MAAMC,mBAAmB,AAAC,CAAA;IACxB,IAAIC,QAAQ,CAAC;IACb,OAAO;QACLC,SAAS,CAACC,MAAQF,KAAK,CAACE,IAAI,IAAI;QAChCC,SAAS,CAACD,KAAKE;YACbJ,KAAK,CAACE,IAAI,GAAGG,OAAOD;QACtB;QACAE,YAAY,CAACJ;YACX,OAAOF,KAAK,CAACE,IAAI;QACnB;QACAK,OAAO;YACLP,QAAQ,CAAC;QACX;QACAQ,QAAQC,OAAOC,IAAI,CAACV,OAAOQ,MAAM;QACjCN,KAAK,CAACS,QAAUF,OAAOC,IAAI,CAACV,MAAM,CAACW,MAAM,IAAI;IAC/C;AACF,CAAA;AAEAF,OAAOG,cAAc,CAAC9C,QAAQ,gBAAgB;IAC5CsC,OAAOL;AACT;AAEA,sBAAsB;AACtBU,OAAOG,cAAc,CAAC9C,QAAQ,kBAAkB;IAC9CsC,OAAOL;AACT;AAEA,qBAAqB;AACrBU,OAAOG,cAAc,CAACC,WAAW,aAAa;IAC5CT,OAAO;QACLU,WAAW7E,KAAKI,EAAE;QAClB0E,UAAU9E,KAAKI,EAAE;IACnB;AACF;AAEA,kBAAkB;AAClByB,OAAOkD,GAAG,CAACC,eAAe,GAAGhF,KAAKI,EAAE;AACpCyB,OAAOkD,GAAG,CAACE,eAAe,GAAGjF,KAAKI,EAAE;AAEpC,uBAAuB;AACvB8E,QAAQC,KAAK,GAAGnF,KAAKI,EAAE;AACvB8E,QAAQE,IAAI,GAAGpF,KAAKI,EAAE;AACtB8E,QAAQG,GAAG,GAAGrF,KAAKI,EAAE;AAErB,yBAAyB;AACzBoE,OAAOG,cAAc,CAAC9C,QAAQ,cAAc;IAC1CyD,UAAU;IACVC,cAAc;IACdpB,OAAO;AACT;AAEAK,OAAOG,cAAc,CAAC9C,QAAQ,eAAe;IAC3CyD,UAAU;IACVC,cAAc;IACdpB,OAAO;AACT;AAEA,6BAA6B;AAC7BxC,OAAO6D,qBAAqB,GAAG,CAAC7C,WAAa8C,WAAW9C,UAAU;AAClEhB,OAAO+D,oBAAoB,GAAG1F,KAAKI,EAAE;AAErC,wBAAwB;AACxBuB,OAAOgE,gBAAgB,GAAG;IACxBjD,YAAYC,QAAQ,CAAE;aAItBI,aAAa/C,KAAKI,EAAE;aACpByC,UAAU7C,KAAKI,EAAE;aACjBwF,cAAc5F,KAAKI,EAAE;QALnB,IAAI,CAACuC,QAAQ,GAAGA;IAClB;AAKF;AAEA,uBAAuB;AACvBkD,OAAOC,MAAM,CAAC;IACZC,eAAcC,QAAQ;QACpB,MAAMC,OAAOD,oBAAoBE,QAAQ,CAACC,MAAMH;QAChD,OAAO;YACLC;YACAG,SAAS,IACP,CAAC,SAAS,EAAEJ,SAAS,mBAAmB,EAAEC,OAAO,SAAS,IAAI;QAClE;IACF;AACF;AAEA,mBAAmB;AACnBtE,OAAO0E,KAAK,GAAG;IACb3D,aAAc;QACZ+C,WAAW;YACT,IAAI,IAAI,CAACa,MAAM,EAAE,IAAI,CAACA,MAAM;QAC9B;QACA,OAAO;YACLC,KAAK;YACLD,QAAQ;YACRE,SAAS;QACX;IACF;AACF;AAEA,8BAA8B;AAC9BC,UAAU;IACRzG,KAAK0G,aAAa;IAClBC,aAAarC,KAAK;IAClBsC,eAAetC,KAAK;AACtB;AAEA,2BAA2B;AAC3BuC,SAAS;IACP7G,KAAK8G,aAAa;AACpB;AAEA,2CAA2C;AAC3CC,QAAQC,GAAG,CAACC,EAAE,GAAG;AA8CjB,+BAA+B;AAC/BF,QAAQC,GAAG,GAAG;IACZ,GAAGD,QAAQC,GAAG;IACdE,qBAAqB;IACrBC,UAAU;AACZ"}