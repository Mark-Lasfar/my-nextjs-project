a240a76cde899f099e66e8d1485009a7
'use server';
"use strict";

/* istanbul ignore next */
function cov_2qu8mx6isx() {
  var path = "/home/mark/Downloads/nextjs-amazona-main/lib/actions/product.actions.ts";
  var hash = "0e5cab070da3e3cafdaee3707c6bae3e9daf16ac";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/mark/Downloads/nextjs-amazona-main/lib/actions/product.actions.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 52,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 29
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 29
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 32
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 30
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 38
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 26
        }
      },
      "10": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 33
        }
      },
      "11": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 30
        }
      },
      "12": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 32
        }
      },
      "13": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 32
        }
      },
      "14": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 34
        }
      },
      "15": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 44
        }
      },
      "16": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 29
        }
      },
      "17": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 28
        }
      },
      "18": {
        start: {
          line: 54,
          column: 36
        },
        end: {
          line: 54,
          column: 99
        }
      },
      "19": {
        start: {
          line: 55,
          column: 15
        },
        end: {
          line: 55,
          column: 36
        }
      },
      "20": {
        start: {
          line: 56,
          column: 15
        },
        end: {
          line: 56,
          column: 34
        }
      },
      "21": {
        start: {
          line: 57,
          column: 19
        },
        end: {
          line: 57,
          column: 42
        }
      },
      "22": {
        start: {
          line: 58,
          column: 24
        },
        end: {
          line: 58,
          column: 52
        }
      },
      "23": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 62,
          column: 6
        }
      },
      "24": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 79,
          column: 5
        }
      },
      "25": {
        start: {
          line: 66,
          column: 24
        },
        end: {
          line: 66,
          column: 65
        }
      },
      "26": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 43
        }
      },
      "27": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 52
        }
      },
      "28": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 54
        }
      },
      "29": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 73,
          column: 10
        }
      },
      "30": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 78,
          column: 10
        }
      },
      "31": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 96,
          column: 5
        }
      },
      "32": {
        start: {
          line: 83,
          column: 24
        },
        end: {
          line: 83,
          column: 66
        }
      },
      "33": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 43
        }
      },
      "34": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 76
        }
      },
      "35": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 54
        }
      },
      "36": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 90,
          column: 10
        }
      },
      "37": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 95,
          column: 10
        }
      },
      "38": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 113,
          column: 5
        }
      },
      "39": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 43
        }
      },
      "40": {
        start: {
          line: 101,
          column: 20
        },
        end: {
          line: 101,
          column: 69
        }
      },
      "41": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 55
        }
      },
      "42": {
        start: {
          line: 102,
          column: 18
        },
        end: {
          line: 102,
          column: 55
        }
      },
      "43": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 54
        }
      },
      "44": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 107,
          column: 10
        }
      },
      "45": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 112,
          column: 10
        }
      },
      "46": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 127,
          column: 5
        }
      },
      "47": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 43
        }
      },
      "48": {
        start: {
          line: 118,
          column: 25
        },
        end: {
          line: 122,
          column: 57
        }
      },
      "49": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 52
        }
      },
      "50": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 64
        }
      },
      "51": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 18
        }
      },
      "52": {
        start: {
          line: 130,
          column: 4
        },
        end: {
          line: 130,
          column: 39
        }
      },
      "53": {
        start: {
          line: 131,
          column: 20
        },
        end: {
          line: 131,
          column: 67
        }
      },
      "54": {
        start: {
          line: 132,
          column: 4
        },
        end: {
          line: 132,
          column: 47
        }
      },
      "55": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 135,
          column: 39
        }
      },
      "56": {
        start: {
          line: 136,
          column: 37
        },
        end: {
          line: 136,
          column: 76
        }
      },
      "57": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 137,
          column: 30
        }
      },
      "58": {
        start: {
          line: 138,
          column: 24
        },
        end: {
          line: 143,
          column: 10
        }
      },
      "59": {
        start: {
          line: 144,
          column: 18
        },
        end: {
          line: 154,
          column: 5
        }
      },
      "60": {
        start: {
          line: 155,
          column: 21
        },
        end: {
          line: 157,
          column: 71
        }
      },
      "61": {
        start: {
          line: 158,
          column: 26
        },
        end: {
          line: 160,
          column: 6
        }
      },
      "62": {
        start: {
          line: 161,
          column: 4
        },
        end: {
          line: 167,
          column: 6
        }
      },
      "63": {
        start: {
          line: 170,
          column: 4
        },
        end: {
          line: 170,
          column: 39
        }
      },
      "64": {
        start: {
          line: 171,
          column: 23
        },
        end: {
          line: 173,
          column: 27
        }
      },
      "65": {
        start: {
          line: 174,
          column: 4
        },
        end: {
          line: 174,
          column: 22
        }
      },
      "66": {
        start: {
          line: 177,
          column: 4
        },
        end: {
          line: 177,
          column: 39
        }
      },
      "67": {
        start: {
          line: 178,
          column: 21
        },
        end: {
          line: 191,
          column: 26
        }
      },
      "68": {
        start: {
          line: 192,
          column: 4
        },
        end: {
          line: 192,
          column: 48
        }
      },
      "69": {
        start: {
          line: 195,
          column: 4
        },
        end: {
          line: 195,
          column: 39
        }
      },
      "70": {
        start: {
          line: 196,
          column: 21
        },
        end: {
          line: 205,
          column: 19
        }
      },
      "71": {
        start: {
          line: 206,
          column: 4
        },
        end: {
          line: 206,
          column: 48
        }
      },
      "72": {
        start: {
          line: 209,
          column: 4
        },
        end: {
          line: 209,
          column: 39
        }
      },
      "73": {
        start: {
          line: 210,
          column: 20
        },
        end: {
          line: 213,
          column: 6
        }
      },
      "74": {
        start: {
          line: 214,
          column: 4
        },
        end: {
          line: 214,
          column: 55
        }
      },
      "75": {
        start: {
          line: 214,
          column: 18
        },
        end: {
          line: 214,
          column: 55
        }
      },
      "76": {
        start: {
          line: 215,
          column: 4
        },
        end: {
          line: 215,
          column: 47
        }
      },
      "77": {
        start: {
          line: 218,
          column: 37
        },
        end: {
          line: 218,
          column: 76
        }
      },
      "78": {
        start: {
          line: 219,
          column: 4
        },
        end: {
          line: 219,
          column: 30
        }
      },
      "79": {
        start: {
          line: 220,
          column: 4
        },
        end: {
          line: 220,
          column: 39
        }
      },
      "80": {
        start: {
          line: 221,
          column: 23
        },
        end: {
          line: 221,
          column: 49
        }
      },
      "81": {
        start: {
          line: 222,
          column: 23
        },
        end: {
          line: 228,
          column: 5
        }
      },
      "82": {
        start: {
          line: 229,
          column: 21
        },
        end: {
          line: 231,
          column: 36
        }
      },
      "83": {
        start: {
          line: 232,
          column: 26
        },
        end: {
          line: 232,
          column: 80
        }
      },
      "84": {
        start: {
          line: 233,
          column: 4
        },
        end: {
          line: 236,
          column: 6
        }
      },
      "85": {
        start: {
          line: 239,
          column: 37
        },
        end: {
          line: 239,
          column: 76
        }
      },
      "86": {
        start: {
          line: 240,
          column: 4
        },
        end: {
          line: 240,
          column: 30
        }
      },
      "87": {
        start: {
          line: 241,
          column: 4
        },
        end: {
          line: 241,
          column: 39
        }
      },
      "88": {
        start: {
          line: 242,
          column: 24
        },
        end: {
          line: 247,
          column: 10
        }
      },
      "89": {
        start: {
          line: 248,
          column: 27
        },
        end: {
          line: 250,
          column: 10
        }
      },
      "90": {
        start: {
          line: 251,
          column: 22
        },
        end: {
          line: 253,
          column: 10
        }
      },
      "91": {
        start: {
          line: 254,
          column: 25
        },
        end: {
          line: 258,
          column: 10
        }
      },
      "92": {
        start: {
          line: 260,
          column: 24
        },
        end: {
          line: 265,
          column: 10
        }
      },
      "93": {
        start: {
          line: 266,
          column: 18
        },
        end: {
          line: 276,
          column: 5
        }
      },
      "94": {
        start: {
          line: 277,
          column: 24
        },
        end: {
          line: 279,
          column: 5
        }
      },
      "95": {
        start: {
          line: 280,
          column: 21
        },
        end: {
          line: 287,
          column: 71
        }
      },
      "96": {
        start: {
          line: 288,
          column: 26
        },
        end: {
          line: 294,
          column: 6
        }
      },
      "97": {
        start: {
          line: 295,
          column: 4
        },
        end: {
          line: 301,
          column: 6
        }
      },
      "98": {
        start: {
          line: 304,
          column: 17
        },
        end: {
          line: 322,
          column: 6
        }
      },
      "99": {
        start: {
          line: 323,
          column: 4
        },
        end: {
          line: 323,
          column: 161
        }
      },
      "100": {
        start: {
          line: 323,
          column: 44
        },
        end: {
          line: 323,
          column: 62
        }
      },
      "101": {
        start: {
          line: 323,
          column: 73
        },
        end: {
          line: 323,
          column: 153
        }
      },
      "102": {
        start: {
          line: 323,
          column: 98
        },
        end: {
          line: 323,
          column: 142
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 19
          },
          end: {
            line: 13,
            column: 20
          }
        },
        loc: {
          start: {
            line: 13,
            column: 30
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 16,
            column: 20
          }
        },
        loc: {
          start: {
            line: 16,
            column: 30
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 22
          },
          end: {
            line: 19,
            column: 23
          }
        },
        loc: {
          start: {
            line: 19,
            column: 33
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 20
          },
          end: {
            line: 22,
            column: 21
          }
        },
        loc: {
          start: {
            line: 22,
            column: 31
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 28
          },
          end: {
            line: 25,
            column: 29
          }
        },
        loc: {
          start: {
            line: 25,
            column: 39
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 28,
            column: 16
          },
          end: {
            line: 28,
            column: 17
          }
        },
        loc: {
          start: {
            line: 28,
            column: 27
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 31,
            column: 23
          },
          end: {
            line: 31,
            column: 24
          }
        },
        loc: {
          start: {
            line: 31,
            column: 34
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 34,
            column: 20
          },
          end: {
            line: 34,
            column: 21
          }
        },
        loc: {
          start: {
            line: 34,
            column: 31
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 34
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 37,
            column: 22
          },
          end: {
            line: 37,
            column: 23
          }
        },
        loc: {
          start: {
            line: 37,
            column: 33
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 37
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 40,
            column: 22
          },
          end: {
            line: 40,
            column: 23
          }
        },
        loc: {
          start: {
            line: 40,
            column: 33
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 40
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 43,
            column: 24
          },
          end: {
            line: 43,
            column: 25
          }
        },
        loc: {
          start: {
            line: 43,
            column: 35
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 43
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 46,
            column: 34
          },
          end: {
            line: 46,
            column: 35
          }
        },
        loc: {
          start: {
            line: 46,
            column: 45
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 46
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 49,
            column: 19
          },
          end: {
            line: 49,
            column: 20
          }
        },
        loc: {
          start: {
            line: 49,
            column: 30
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 49
      },
      "14": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 59,
            column: 9
          },
          end: {
            line: 59,
            column: 33
          }
        },
        loc: {
          start: {
            line: 59,
            column: 39
          },
          end: {
            line: 63,
            column: 1
          }
        },
        line: 59
      },
      "15": {
        name: "createProduct",
        decl: {
          start: {
            line: 64,
            column: 15
          },
          end: {
            line: 64,
            column: 28
          }
        },
        loc: {
          start: {
            line: 64,
            column: 35
          },
          end: {
            line: 80,
            column: 1
          }
        },
        line: 64
      },
      "16": {
        name: "updateProduct",
        decl: {
          start: {
            line: 81,
            column: 15
          },
          end: {
            line: 81,
            column: 28
          }
        },
        loc: {
          start: {
            line: 81,
            column: 35
          },
          end: {
            line: 97,
            column: 1
          }
        },
        line: 81
      },
      "17": {
        name: "deleteProduct",
        decl: {
          start: {
            line: 98,
            column: 15
          },
          end: {
            line: 98,
            column: 28
          }
        },
        loc: {
          start: {
            line: 98,
            column: 33
          },
          end: {
            line: 114,
            column: 1
          }
        },
        line: 98
      },
      "18": {
        name: "getLatestProducts",
        decl: {
          start: {
            line: 115,
            column: 15
          },
          end: {
            line: 115,
            column: 32
          }
        },
        loc: {
          start: {
            line: 115,
            column: 53
          },
          end: {
            line: 128,
            column: 1
          }
        },
        line: 115
      },
      "19": {
        name: "getProductById",
        decl: {
          start: {
            line: 129,
            column: 15
          },
          end: {
            line: 129,
            column: 29
          }
        },
        loc: {
          start: {
            line: 129,
            column: 41
          },
          end: {
            line: 133,
            column: 1
          }
        },
        line: 129
      },
      "20": {
        name: "getAllProductsForAdmin",
        decl: {
          start: {
            line: 134,
            column: 15
          },
          end: {
            line: 134,
            column: 37
          }
        },
        loc: {
          start: {
            line: 134,
            column: 83
          },
          end: {
            line: 168,
            column: 1
          }
        },
        line: 134
      },
      "21": {
        name: "getAllCategories",
        decl: {
          start: {
            line: 169,
            column: 15
          },
          end: {
            line: 169,
            column: 31
          }
        },
        loc: {
          start: {
            line: 169,
            column: 34
          },
          end: {
            line: 175,
            column: 1
          }
        },
        line: 169
      },
      "22": {
        name: "getProductsForCard",
        decl: {
          start: {
            line: 176,
            column: 15
          },
          end: {
            line: 176,
            column: 33
          }
        },
        loc: {
          start: {
            line: 176,
            column: 54
          },
          end: {
            line: 193,
            column: 1
          }
        },
        line: 176
      },
      "23": {
        name: "getProductsByTag",
        decl: {
          start: {
            line: 194,
            column: 15
          },
          end: {
            line: 194,
            column: 31
          }
        },
        loc: {
          start: {
            line: 194,
            column: 53
          },
          end: {
            line: 207,
            column: 1
          }
        },
        line: 194
      },
      "24": {
        name: "getProductBySlug",
        decl: {
          start: {
            line: 208,
            column: 15
          },
          end: {
            line: 208,
            column: 31
          }
        },
        loc: {
          start: {
            line: 208,
            column: 38
          },
          end: {
            line: 216,
            column: 1
          }
        },
        line: 208
      },
      "25": {
        name: "getRelatedProductsByCategory",
        decl: {
          start: {
            line: 217,
            column: 15
          },
          end: {
            line: 217,
            column: 43
          }
        },
        loc: {
          start: {
            line: 217,
            column: 90
          },
          end: {
            line: 237,
            column: 1
          }
        },
        line: 217
      },
      "26": {
        name: "getAllProducts",
        decl: {
          start: {
            line: 238,
            column: 15
          },
          end: {
            line: 238,
            column: 29
          }
        },
        loc: {
          start: {
            line: 238,
            column: 90
          },
          end: {
            line: 302,
            column: 1
          }
        },
        line: 238
      },
      "27": {
        name: "getAllTags",
        decl: {
          start: {
            line: 303,
            column: 15
          },
          end: {
            line: 303,
            column: 25
          }
        },
        loc: {
          start: {
            line: 303,
            column: 28
          },
          end: {
            line: 324,
            column: 1
          }
        },
        line: 303
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 323,
            column: 36
          },
          end: {
            line: 323,
            column: 37
          }
        },
        loc: {
          start: {
            line: 323,
            column: 44
          },
          end: {
            line: 323,
            column: 62
          }
        },
        line: 323
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 323,
            column: 68
          },
          end: {
            line: 323,
            column: 69
          }
        },
        loc: {
          start: {
            line: 323,
            column: 73
          },
          end: {
            line: 323,
            column: 153
          }
        },
        line: 323
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 323,
            column: 90
          },
          end: {
            line: 323,
            column: 91
          }
        },
        loc: {
          start: {
            line: 323,
            column: 98
          },
          end: {
            line: 323,
            column: 142
          }
        },
        line: 323
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 60,
            column: 11
          },
          end: {
            line: 62,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 60,
            column: 35
          },
          end: {
            line: 60,
            column: 38
          }
        }, {
          start: {
            line: 60,
            column: 41
          },
          end: {
            line: 62,
            column: 5
          }
        }],
        line: 60
      },
      "1": {
        loc: {
          start: {
            line: 60,
            column: 11
          },
          end: {
            line: 60,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 11
          },
          end: {
            line: 60,
            column: 14
          }
        }, {
          start: {
            line: 60,
            column: 18
          },
          end: {
            line: 60,
            column: 32
          }
        }],
        line: 60
      },
      "2": {
        loc: {
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 102,
            column: 55
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 102,
            column: 55
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "3": {
        loc: {
          start: {
            line: 115,
            column: 33
          },
          end: {
            line: 115,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 115,
            column: 49
          },
          end: {
            line: 115,
            column: 51
          }
        }],
        line: 115
      },
      "4": {
        loc: {
          start: {
            line: 115,
            column: 35
          },
          end: {
            line: 115,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 115,
            column: 43
          },
          end: {
            line: 115,
            column: 44
          }
        }],
        line: 115
      },
      "5": {
        loc: {
          start: {
            line: 134,
            column: 47
          },
          end: {
            line: 134,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 134,
            column: 54
          },
          end: {
            line: 134,
            column: 55
          }
        }],
        line: 134
      },
      "6": {
        loc: {
          start: {
            line: 134,
            column: 57
          },
          end: {
            line: 134,
            column: 72
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 134,
            column: 64
          },
          end: {
            line: 134,
            column: 72
          }
        }],
        line: 134
      },
      "7": {
        loc: {
          start: {
            line: 137,
            column: 12
          },
          end: {
            line: 137,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 137,
            column: 12
          },
          end: {
            line: 137,
            column: 17
          }
        }, {
          start: {
            line: 137,
            column: 21
          },
          end: {
            line: 137,
            column: 29
          }
        }],
        line: 137
      },
      "8": {
        loc: {
          start: {
            line: 138,
            column: 24
          },
          end: {
            line: 143,
            column: 10
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 138,
            column: 51
          },
          end: {
            line: 143,
            column: 5
          }
        }, {
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 143,
            column: 10
          }
        }],
        line: 138
      },
      "9": {
        loc: {
          start: {
            line: 138,
            column: 24
          },
          end: {
            line: 138,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 138,
            column: 24
          },
          end: {
            line: 138,
            column: 29
          }
        }, {
          start: {
            line: 138,
            column: 33
          },
          end: {
            line: 138,
            column: 48
          }
        }],
        line: 138
      },
      "10": {
        loc: {
          start: {
            line: 144,
            column: 18
          },
          end: {
            line: 154,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 144,
            column: 44
          },
          end: {
            line: 146,
            column: 5
          }
        }, {
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 154,
            column: 5
          }
        }],
        line: 144
      },
      "11": {
        loc: {
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 154,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 146,
            column: 39
          },
          end: {
            line: 148,
            column: 5
          }
        }, {
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 154,
            column: 5
          }
        }],
        line: 146
      },
      "12": {
        loc: {
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 154,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 148,
            column: 39
          },
          end: {
            line: 150,
            column: 5
          }
        }, {
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 154,
            column: 5
          }
        }],
        line: 148
      },
      "13": {
        loc: {
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 154,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 150,
            column: 41
          },
          end: {
            line: 152,
            column: 5
          }
        }, {
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 154,
            column: 5
          }
        }],
        line: 150
      },
      "14": {
        loc: {
          start: {
            line: 176,
            column: 41
          },
          end: {
            line: 176,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 176,
            column: 49
          },
          end: {
            line: 176,
            column: 50
          }
        }],
        line: 176
      },
      "15": {
        loc: {
          start: {
            line: 194,
            column: 39
          },
          end: {
            line: 194,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 194,
            column: 47
          },
          end: {
            line: 194,
            column: 49
          }
        }],
        line: 194
      },
      "16": {
        loc: {
          start: {
            line: 214,
            column: 4
          },
          end: {
            line: 214,
            column: 55
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 4
          },
          end: {
            line: 214,
            column: 55
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 214
      },
      "17": {
        loc: {
          start: {
            line: 217,
            column: 67
          },
          end: {
            line: 217,
            column: 76
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 217,
            column: 75
          },
          end: {
            line: 217,
            column: 76
          }
        }],
        line: 217
      },
      "18": {
        loc: {
          start: {
            line: 217,
            column: 78
          },
          end: {
            line: 217,
            column: 86
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 217,
            column: 85
          },
          end: {
            line: 217,
            column: 86
          }
        }],
        line: 217
      },
      "19": {
        loc: {
          start: {
            line: 219,
            column: 12
          },
          end: {
            line: 219,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 219,
            column: 12
          },
          end: {
            line: 219,
            column: 17
          }
        }, {
          start: {
            line: 219,
            column: 21
          },
          end: {
            line: 219,
            column: 29
          }
        }],
        line: 219
      },
      "20": {
        loc: {
          start: {
            line: 240,
            column: 12
          },
          end: {
            line: 240,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 240,
            column: 12
          },
          end: {
            line: 240,
            column: 17
          }
        }, {
          start: {
            line: 240,
            column: 21
          },
          end: {
            line: 240,
            column: 29
          }
        }],
        line: 240
      },
      "21": {
        loc: {
          start: {
            line: 242,
            column: 24
          },
          end: {
            line: 247,
            column: 10
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 242,
            column: 51
          },
          end: {
            line: 247,
            column: 5
          }
        }, {
          start: {
            line: 247,
            column: 8
          },
          end: {
            line: 247,
            column: 10
          }
        }],
        line: 242
      },
      "22": {
        loc: {
          start: {
            line: 242,
            column: 24
          },
          end: {
            line: 242,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 242,
            column: 24
          },
          end: {
            line: 242,
            column: 29
          }
        }, {
          start: {
            line: 242,
            column: 33
          },
          end: {
            line: 242,
            column: 48
          }
        }],
        line: 242
      },
      "23": {
        loc: {
          start: {
            line: 248,
            column: 27
          },
          end: {
            line: 250,
            column: 10
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 248,
            column: 60
          },
          end: {
            line: 250,
            column: 5
          }
        }, {
          start: {
            line: 250,
            column: 8
          },
          end: {
            line: 250,
            column: 10
          }
        }],
        line: 248
      },
      "24": {
        loc: {
          start: {
            line: 248,
            column: 27
          },
          end: {
            line: 248,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 248,
            column: 27
          },
          end: {
            line: 248,
            column: 35
          }
        }, {
          start: {
            line: 248,
            column: 39
          },
          end: {
            line: 248,
            column: 57
          }
        }],
        line: 248
      },
      "25": {
        loc: {
          start: {
            line: 251,
            column: 22
          },
          end: {
            line: 253,
            column: 10
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 251,
            column: 45
          },
          end: {
            line: 253,
            column: 5
          }
        }, {
          start: {
            line: 253,
            column: 8
          },
          end: {
            line: 253,
            column: 10
          }
        }],
        line: 251
      },
      "26": {
        loc: {
          start: {
            line: 251,
            column: 22
          },
          end: {
            line: 251,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 251,
            column: 22
          },
          end: {
            line: 251,
            column: 25
          }
        }, {
          start: {
            line: 251,
            column: 29
          },
          end: {
            line: 251,
            column: 42
          }
        }],
        line: 251
      },
      "27": {
        loc: {
          start: {
            line: 254,
            column: 25
          },
          end: {
            line: 258,
            column: 10
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 254,
            column: 54
          },
          end: {
            line: 258,
            column: 5
          }
        }, {
          start: {
            line: 258,
            column: 8
          },
          end: {
            line: 258,
            column: 10
          }
        }],
        line: 254
      },
      "28": {
        loc: {
          start: {
            line: 254,
            column: 25
          },
          end: {
            line: 254,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 254,
            column: 25
          },
          end: {
            line: 254,
            column: 31
          }
        }, {
          start: {
            line: 254,
            column: 35
          },
          end: {
            line: 254,
            column: 51
          }
        }],
        line: 254
      },
      "29": {
        loc: {
          start: {
            line: 260,
            column: 24
          },
          end: {
            line: 265,
            column: 10
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 260,
            column: 51
          },
          end: {
            line: 265,
            column: 5
          }
        }, {
          start: {
            line: 265,
            column: 8
          },
          end: {
            line: 265,
            column: 10
          }
        }],
        line: 260
      },
      "30": {
        loc: {
          start: {
            line: 260,
            column: 24
          },
          end: {
            line: 260,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 260,
            column: 24
          },
          end: {
            line: 260,
            column: 29
          }
        }, {
          start: {
            line: 260,
            column: 33
          },
          end: {
            line: 260,
            column: 48
          }
        }],
        line: 260
      },
      "31": {
        loc: {
          start: {
            line: 266,
            column: 18
          },
          end: {
            line: 276,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 266,
            column: 44
          },
          end: {
            line: 268,
            column: 5
          }
        }, {
          start: {
            line: 268,
            column: 8
          },
          end: {
            line: 276,
            column: 5
          }
        }],
        line: 266
      },
      "32": {
        loc: {
          start: {
            line: 268,
            column: 8
          },
          end: {
            line: 276,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 268,
            column: 39
          },
          end: {
            line: 270,
            column: 5
          }
        }, {
          start: {
            line: 270,
            column: 8
          },
          end: {
            line: 276,
            column: 5
          }
        }],
        line: 268
      },
      "33": {
        loc: {
          start: {
            line: 270,
            column: 8
          },
          end: {
            line: 276,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 270,
            column: 39
          },
          end: {
            line: 272,
            column: 5
          }
        }, {
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 276,
            column: 5
          }
        }],
        line: 270
      },
      "34": {
        loc: {
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 276,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 272,
            column: 41
          },
          end: {
            line: 274,
            column: 5
          }
        }, {
          start: {
            line: 274,
            column: 8
          },
          end: {
            line: 276,
            column: 5
          }
        }],
        line: 272
      },
      "35": {
        loc: {
          start: {
            line: 323,
            column: 11
          },
          end: {
            line: 323,
            column: 160
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 323,
            column: 11
          },
          end: {
            line: 323,
            column: 154
          }
        }, {
          start: {
            line: 323,
            column: 158
          },
          end: {
            line: 323,
            column: 160
          }
        }],
        line: 323
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0],
      "4": [0],
      "5": [0],
      "6": [0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0],
      "15": [0],
      "16": [0, 0],
      "17": [0],
      "18": [0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/mark/Downloads/nextjs-amazona-main/lib/actions/product.actions.ts"],
      sourcesContent: ["'use server'\n\nimport { connectToDatabase } from '@/lib/db'\nimport Product, { IProduct } from '@/lib/db/models/product.model'\nimport { revalidatePath } from 'next/cache'\nimport { formatError } from '../utils'\nimport { ProductInputSchema, ProductUpdateSchema } from '../validator'\nimport { IProductInput } from '@/types'\nimport { z } from 'zod'\nimport { getSetting } from './setting.actions'\n\n// CREATE\nexport async function createProduct(data: IProductInput) {\n  try {\n    const product = ProductInputSchema.parse(data)\n    await connectToDatabase()\n    await Product.create(product)\n    revalidatePath('/admin/products')\n    return {\n      success: true,\n      message: 'Product created successfully',\n    }\n  } catch (error) {\n    return { success: false, message: formatError(error) }\n  }\n}\n\n// UPDATE\nexport async function updateProduct(data: z.infer<typeof ProductUpdateSchema>) {\n  try {\n    const product = ProductUpdateSchema.parse(data)\n    await connectToDatabase()\n    await Product.findByIdAndUpdate(product._id, product)\n    revalidatePath('/admin/products')\n    return {\n      success: true,\n      message: 'Product updated successfully',\n    }\n  } catch (error) {\n    return { success: false, message: formatError(error) }\n  }\n}\n\n// DELETE\nexport async function deleteProduct(id: string) {\n  try {\n    await connectToDatabase()\n    const res = await Product.findByIdAndDelete(id)\n    if (!res) throw new Error('Product not found')\n    revalidatePath('/admin/products')\n    return {\n      success: true,\n      message: 'Product deleted successfully',\n    }\n  } catch (error) {\n    return { success: false, message: formatError(error) }\n  }\n}\n\n// GET LATEST PRODUCTS\nexport async function getLatestProducts({\n  limit = 4,\n}: { limit?: number } = {}) {\n  try {\n    await connectToDatabase()\n    const products = await Product.find({ isPublished: true })\n      .sort({ createdAt: -1 })\n      .limit(limit)\n      .select('name images slug')\n      .lean()\n\n    return JSON.parse(JSON.stringify(products)) as {\n      name: string\n      images: string[]\n      slug: string\n    }[]\n  } catch (error) {\n    console.error('Error fetching latest products:', error)\n    return []\n  }\n}\n\n// GET ONE PRODUCT BY ID\nexport async function getProductById(productId: string) {\n  await connectToDatabase()\n  const product = await Product.findById(productId)\n  return JSON.parse(JSON.stringify(product)) as IProduct\n}\n\n// GET ALL PRODUCTS FOR ADMIN\nexport async function getAllProductsForAdmin({\n  query,\n  page = 1,\n  sort = 'latest',\n  limit,\n}: {\n  query: string\n  page?: number\n  sort?: string\n  limit?: number\n}) {\n  await connectToDatabase()\n\n  const {\n    common: { pageSize },\n  } = await getSetting()\n  limit = limit || pageSize\n  const queryFilter =\n    query && query !== 'all'\n      ? {\n          name: {\n            $regex: query,\n            $options: 'i',\n          },\n        }\n      : {}\n\n  const order: Record<string, 1 | -1> =\n    sort === 'best-selling'\n      ? { numSales: -1 }\n      : sort === 'price-low-to-high'\n        ? { price: 1 }\n        : sort === 'price-high-to-low'\n          ? { price: -1 }\n          : sort === 'avg-customer-review'\n            ? { avgRating: -1 }\n            : { _id: -1 }\n  const products = await Product.find({\n    ...queryFilter,\n  })\n    .sort(order)\n    .skip(limit * (Number(page) - 1))\n    .limit(limit)\n    .lean()\n\n  const countProducts = await Product.countDocuments({\n    ...queryFilter,\n  })\n  return {\n    products: JSON.parse(JSON.stringify(products)) as IProduct[],\n    totalPages: Math.ceil(countProducts / pageSize),\n    totalProducts: countProducts,\n    from: pageSize * (Number(page) - 1) + 1,\n    to: pageSize * (Number(page) - 1) + products.length,\n  }\n}\n\nexport async function getAllCategories() {\n  await connectToDatabase()\n  const categories = await Product.find({ isPublished: true }).distinct(\n    'category'\n  )\n  return categories\n}\n\nexport async function getProductsForCard({\n  tag,\n  limit = 4,\n}: {\n  tag: string\n  limit?: number\n}) {\n  await connectToDatabase()\n  const products = await Product.find(\n    { tags: { $in: [tag] }, isPublished: true },\n    {\n      name: 1,\n      slug: 1,\n      images: 1,\n    }\n  )\n    .sort({ createdAt: 'desc' })\n    .limit(limit)\n    .lean()\n\n  return JSON.parse(JSON.stringify(products))\n}\n\n// GET PRODUCTS BY TAG\nexport async function getProductsByTag({\n  tag,\n  limit = 10,\n}: {\n  tag: string\n  limit?: number\n}) {\n  await connectToDatabase()\n  const products = await Product.find({\n    tags: { $in: [tag] },\n    isPublished: true,\n  })\n    .sort({ createdAt: 'desc' })\n    .limit(limit)\n  return JSON.parse(JSON.stringify(products)) as IProduct[]\n}\n\n// GET ONE PRODUCT BY SLUG\nexport async function getProductBySlug(slug: string) {\n  await connectToDatabase()\n  const product = await Product.findOne({ slug, isPublished: true })\n  if (!product) throw new Error('Product not found')\n  return JSON.parse(JSON.stringify(product)) as IProduct\n}\n\n// GET RELATED PRODUCTS: PRODUCTS WITH SAME CATEGORY\nexport async function getRelatedProductsByCategory({\n  category,\n  productId,\n  limit = 4,\n  page = 1,\n}: {\n  category: string\n  productId: string\n  limit?: number\n  page: number\n}) {\n  const {\n    common: { pageSize },\n  } = await getSetting()\n  limit = limit || pageSize\n  await connectToDatabase()\n  const skipAmount = (Number(page) - 1) * limit\n  const conditions = {\n    isPublished: true,\n    category,\n    _id: { $ne: productId },\n  }\n  const products = await Product.find(conditions)\n    .sort({ numSales: 'desc' })\n    .skip(skipAmount)\n    .limit(limit)\n  const productsCount = await Product.countDocuments(conditions)\n  return {\n    data: JSON.parse(JSON.stringify(products)) as IProduct[],\n    totalPages: Math.ceil(productsCount / limit),\n  }\n}\n\n// GET ALL PRODUCTS\nexport async function getAllProducts({\n  query,\n  limit,\n  page,\n  category,\n  tag,\n  price,\n  rating,\n  sort,\n}: {\n  query: string\n  category: string\n  tag: string\n  limit?: number\n  page: number\n  price?: string\n  rating?: string\n  sort?: string\n}) {\n  const {\n    common: { pageSize },\n  } = await getSetting()\n  limit = limit || pageSize\n  await connectToDatabase()\n\n  const queryFilter =\n    query && query !== 'all'\n      ? {\n          name: {\n            $regex: query,\n            $options: 'i',\n          },\n        }\n      : {}\n  const categoryFilter = category && category !== 'all' ? { category } : {}\n  const tagFilter = tag && tag !== 'all' ? { tags: tag } : {}\n\n  const ratingFilter =\n    rating && rating !== 'all'\n      ? {\n          avgRating: {\n            $gte: Number(rating),\n          },\n        }\n      : {}\n  // 10-50\n  const priceFilter =\n    price && price !== 'all'\n      ? {\n          price: {\n            $gte: Number(price.split('-')[0]),\n            $lte: Number(price.split('-')[1]),\n          },\n        }\n      : {}\n  const order: Record<string, 1 | -1> =\n    sort === 'best-selling'\n      ? { numSales: -1 }\n      : sort === 'price-low-to-high'\n        ? { price: 1 }\n        : sort === 'price-high-to-low'\n          ? { price: -1 }\n          : sort === 'avg-customer-review'\n            ? { avgRating: -1 }\n            : { _id: -1 }\n  const isPublished = { isPublished: true }\n  const products = await Product.find({\n    ...isPublished,\n    ...queryFilter,\n    ...tagFilter,\n    ...categoryFilter,\n    ...priceFilter,\n    ...ratingFilter,\n  })\n    .sort(order)\n    .skip(limit * (Number(page) - 1))\n    .limit(limit)\n    .lean()\n\n  const countProducts = await Product.countDocuments({\n    ...queryFilter,\n    ...tagFilter,\n    ...categoryFilter,\n    ...priceFilter,\n    ...ratingFilter,\n  })\n  return {\n    products: JSON.parse(JSON.stringify(products)) as IProduct[],\n    totalPages: Math.ceil(countProducts / limit),\n    totalProducts: countProducts,\n    from: limit * (Number(page) - 1) + 1,\n    to: limit * (Number(page) - 1) + products.length,\n  }\n}\n\nexport async function getAllTags() {\n  const tags = await Product.aggregate([\n    { $unwind: '$tags' },\n    { $group: { _id: null, uniqueTags: { $addToSet: '$tags' } } },\n    { $project: { _id: 0, uniqueTags: 1 } },\n  ])\n  return (\n    (tags[0]?.uniqueTags\n      .sort((a: string, b: string) => a.localeCompare(b))\n      .map((x: string) =>\n        x\n          .split('-')\n          .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n          .join(' ')\n      ) as string[]) || []\n  )\n}\n"],
      names: ["createProduct", "deleteProduct", "getAllCategories", "getAllProducts", "getAllProductsForAdmin", "getAllTags", "getLatestProducts", "getProductById", "getProductBySlug", "getProductsByTag", "getProductsForCard", "getRelatedProductsByCategory", "updateProduct", "data", "product", "ProductInputSchema", "parse", "connectToDatabase", "Product", "create", "revalidatePath", "success", "message", "error", "formatError", "ProductUpdateSchema", "findByIdAndUpdate", "_id", "id", "res", "findByIdAndDelete", "Error", "limit", "products", "find", "isPublished", "sort", "createdAt", "select", "lean", "JSON", "stringify", "console", "productId", "findById", "query", "page", "common", "pageSize", "getSetting", "queryFilter", "name", "$regex", "$options", "order", "numSales", "price", "avgRating", "skip", "Number", "countProducts", "countDocuments", "totalPages", "Math", "ceil", "totalProducts", "from", "to", "length", "categories", "distinct", "tag", "tags", "$in", "slug", "images", "findOne", "category", "skipAmount", "conditions", "$ne", "productsCount", "rating", "categoryFilter", "tagFilter", "ratingFilter", "$gte", "priceFilter", "split", "$lte", "aggregate", "$unwind", "$group", "uniqueTags", "$addToSet", "$project", "a", "b", "localeCompare", "map", "x", "word", "charAt", "toUpperCase", "slice", "join"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0e5cab070da3e3cafdaee3707c6bae3e9daf16ac"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2qu8mx6isx = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2qu8mx6isx();
cov_2qu8mx6isx().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2qu8mx6isx().f[0]++;
  cov_2qu8mx6isx().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2qu8mx6isx().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_2qu8mx6isx().s[3]++;
_export(exports, {
  createProduct: function () {
    /* istanbul ignore next */
    cov_2qu8mx6isx().f[1]++;
    cov_2qu8mx6isx().s[4]++;
    return createProduct;
  },
  deleteProduct: function () {
    /* istanbul ignore next */
    cov_2qu8mx6isx().f[2]++;
    cov_2qu8mx6isx().s[5]++;
    return deleteProduct;
  },
  getAllCategories: function () {
    /* istanbul ignore next */
    cov_2qu8mx6isx().f[3]++;
    cov_2qu8mx6isx().s[6]++;
    return getAllCategories;
  },
  getAllProducts: function () {
    /* istanbul ignore next */
    cov_2qu8mx6isx().f[4]++;
    cov_2qu8mx6isx().s[7]++;
    return getAllProducts;
  },
  getAllProductsForAdmin: function () {
    /* istanbul ignore next */
    cov_2qu8mx6isx().f[5]++;
    cov_2qu8mx6isx().s[8]++;
    return getAllProductsForAdmin;
  },
  getAllTags: function () {
    /* istanbul ignore next */
    cov_2qu8mx6isx().f[6]++;
    cov_2qu8mx6isx().s[9]++;
    return getAllTags;
  },
  getLatestProducts: function () {
    /* istanbul ignore next */
    cov_2qu8mx6isx().f[7]++;
    cov_2qu8mx6isx().s[10]++;
    return getLatestProducts;
  },
  getProductById: function () {
    /* istanbul ignore next */
    cov_2qu8mx6isx().f[8]++;
    cov_2qu8mx6isx().s[11]++;
    return getProductById;
  },
  getProductBySlug: function () {
    /* istanbul ignore next */
    cov_2qu8mx6isx().f[9]++;
    cov_2qu8mx6isx().s[12]++;
    return getProductBySlug;
  },
  getProductsByTag: function () {
    /* istanbul ignore next */
    cov_2qu8mx6isx().f[10]++;
    cov_2qu8mx6isx().s[13]++;
    return getProductsByTag;
  },
  getProductsForCard: function () {
    /* istanbul ignore next */
    cov_2qu8mx6isx().f[11]++;
    cov_2qu8mx6isx().s[14]++;
    return getProductsForCard;
  },
  getRelatedProductsByCategory: function () {
    /* istanbul ignore next */
    cov_2qu8mx6isx().f[12]++;
    cov_2qu8mx6isx().s[15]++;
    return getRelatedProductsByCategory;
  },
  updateProduct: function () {
    /* istanbul ignore next */
    cov_2qu8mx6isx().f[13]++;
    cov_2qu8mx6isx().s[16]++;
    return updateProduct;
  }
});
const _db =
/* istanbul ignore next */
(cov_2qu8mx6isx().s[17]++, require("../db"));
const _productmodel =
/* istanbul ignore next */
(/*#__PURE__*/cov_2qu8mx6isx().s[18]++, _interop_require_default(require("../db/models/product.model")));
const _cache =
/* istanbul ignore next */
(cov_2qu8mx6isx().s[19]++, require("next/cache"));
const _utils =
/* istanbul ignore next */
(cov_2qu8mx6isx().s[20]++, require("../utils"));
const _validator =
/* istanbul ignore next */
(cov_2qu8mx6isx().s[21]++, require("../validator"));
const _settingactions =
/* istanbul ignore next */
(cov_2qu8mx6isx().s[22]++, require("./setting.actions"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_2qu8mx6isx().f[14]++;
  cov_2qu8mx6isx().s[23]++;
  return /* istanbul ignore next */(cov_2qu8mx6isx().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[0][1]++, {
    default: obj
  });
}
async function createProduct(data) {
  /* istanbul ignore next */
  cov_2qu8mx6isx().f[15]++;
  cov_2qu8mx6isx().s[24]++;
  try {
    const product =
    /* istanbul ignore next */
    (cov_2qu8mx6isx().s[25]++, _validator.ProductInputSchema.parse(data));
    /* istanbul ignore next */
    cov_2qu8mx6isx().s[26]++;
    await (0, _db.connectToDatabase)();
    /* istanbul ignore next */
    cov_2qu8mx6isx().s[27]++;
    await _productmodel.default.create(product);
    /* istanbul ignore next */
    cov_2qu8mx6isx().s[28]++;
    (0, _cache.revalidatePath)('/admin/products');
    /* istanbul ignore next */
    cov_2qu8mx6isx().s[29]++;
    return {
      success: true,
      message: 'Product created successfully'
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_2qu8mx6isx().s[30]++;
    return {
      success: false,
      message: (0, _utils.formatError)(error)
    };
  }
}
async function updateProduct(data) {
  /* istanbul ignore next */
  cov_2qu8mx6isx().f[16]++;
  cov_2qu8mx6isx().s[31]++;
  try {
    const product =
    /* istanbul ignore next */
    (cov_2qu8mx6isx().s[32]++, _validator.ProductUpdateSchema.parse(data));
    /* istanbul ignore next */
    cov_2qu8mx6isx().s[33]++;
    await (0, _db.connectToDatabase)();
    /* istanbul ignore next */
    cov_2qu8mx6isx().s[34]++;
    await _productmodel.default.findByIdAndUpdate(product._id, product);
    /* istanbul ignore next */
    cov_2qu8mx6isx().s[35]++;
    (0, _cache.revalidatePath)('/admin/products');
    /* istanbul ignore next */
    cov_2qu8mx6isx().s[36]++;
    return {
      success: true,
      message: 'Product updated successfully'
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_2qu8mx6isx().s[37]++;
    return {
      success: false,
      message: (0, _utils.formatError)(error)
    };
  }
}
async function deleteProduct(id) {
  /* istanbul ignore next */
  cov_2qu8mx6isx().f[17]++;
  cov_2qu8mx6isx().s[38]++;
  try {
    /* istanbul ignore next */
    cov_2qu8mx6isx().s[39]++;
    await (0, _db.connectToDatabase)();
    const res =
    /* istanbul ignore next */
    (cov_2qu8mx6isx().s[40]++, await _productmodel.default.findByIdAndDelete(id));
    /* istanbul ignore next */
    cov_2qu8mx6isx().s[41]++;
    if (!res) {
      /* istanbul ignore next */
      cov_2qu8mx6isx().b[2][0]++;
      cov_2qu8mx6isx().s[42]++;
      throw new Error('Product not found');
    } else
    /* istanbul ignore next */
    {
      cov_2qu8mx6isx().b[2][1]++;
    }
    cov_2qu8mx6isx().s[43]++;
    (0, _cache.revalidatePath)('/admin/products');
    /* istanbul ignore next */
    cov_2qu8mx6isx().s[44]++;
    return {
      success: true,
      message: 'Product deleted successfully'
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_2qu8mx6isx().s[45]++;
    return {
      success: false,
      message: (0, _utils.formatError)(error)
    };
  }
}
async function getLatestProducts({
  limit =
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[4][0]++, 4)
} =
/* istanbul ignore next */
(cov_2qu8mx6isx().b[3][0]++, {})) {
  /* istanbul ignore next */
  cov_2qu8mx6isx().f[18]++;
  cov_2qu8mx6isx().s[46]++;
  try {
    /* istanbul ignore next */
    cov_2qu8mx6isx().s[47]++;
    await (0, _db.connectToDatabase)();
    const products =
    /* istanbul ignore next */
    (cov_2qu8mx6isx().s[48]++, await _productmodel.default.find({
      isPublished: true
    }).sort({
      createdAt: -1
    }).limit(limit).select('name images slug').lean());
    /* istanbul ignore next */
    cov_2qu8mx6isx().s[49]++;
    return JSON.parse(JSON.stringify(products));
  } catch (error) {
    /* istanbul ignore next */
    cov_2qu8mx6isx().s[50]++;
    console.error('Error fetching latest products:', error);
    /* istanbul ignore next */
    cov_2qu8mx6isx().s[51]++;
    return [];
  }
}
async function getProductById(productId) {
  /* istanbul ignore next */
  cov_2qu8mx6isx().f[19]++;
  cov_2qu8mx6isx().s[52]++;
  await (0, _db.connectToDatabase)();
  const product =
  /* istanbul ignore next */
  (cov_2qu8mx6isx().s[53]++, await _productmodel.default.findById(productId));
  /* istanbul ignore next */
  cov_2qu8mx6isx().s[54]++;
  return JSON.parse(JSON.stringify(product));
}
async function getAllProductsForAdmin({
  query,
  page =
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[5][0]++, 1),
  sort =
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[6][0]++, 'latest'),
  limit
}) {
  /* istanbul ignore next */
  cov_2qu8mx6isx().f[20]++;
  cov_2qu8mx6isx().s[55]++;
  await (0, _db.connectToDatabase)();
  const {
    common: {
      pageSize
    }
  } =
  /* istanbul ignore next */
  (cov_2qu8mx6isx().s[56]++, await (0, _settingactions.getSetting)());
  /* istanbul ignore next */
  cov_2qu8mx6isx().s[57]++;
  limit =
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[7][0]++, limit) ||
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[7][1]++, pageSize);
  const queryFilter =
  /* istanbul ignore next */
  (cov_2qu8mx6isx().s[58]++,
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[9][0]++, query) &&
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[9][1]++, query !== 'all') ?
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[8][0]++, {
    name: {
      $regex: query,
      $options: 'i'
    }
  }) :
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[8][1]++, {}));
  const order =
  /* istanbul ignore next */
  (cov_2qu8mx6isx().s[59]++, sort === 'best-selling' ?
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[10][0]++, {
    numSales: -1
  }) :
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[10][1]++, sort === 'price-low-to-high' ?
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[11][0]++, {
    price: 1
  }) :
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[11][1]++, sort === 'price-high-to-low' ?
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[12][0]++, {
    price: -1
  }) :
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[12][1]++, sort === 'avg-customer-review' ?
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[13][0]++, {
    avgRating: -1
  }) :
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[13][1]++, {
    _id: -1
  })))));
  const products =
  /* istanbul ignore next */
  (cov_2qu8mx6isx().s[60]++, await _productmodel.default.find({
    ...queryFilter
  }).sort(order).skip(limit * (Number(page) - 1)).limit(limit).lean());
  const countProducts =
  /* istanbul ignore next */
  (cov_2qu8mx6isx().s[61]++, await _productmodel.default.countDocuments({
    ...queryFilter
  }));
  /* istanbul ignore next */
  cov_2qu8mx6isx().s[62]++;
  return {
    products: JSON.parse(JSON.stringify(products)),
    totalPages: Math.ceil(countProducts / pageSize),
    totalProducts: countProducts,
    from: pageSize * (Number(page) - 1) + 1,
    to: pageSize * (Number(page) - 1) + products.length
  };
}
async function getAllCategories() {
  /* istanbul ignore next */
  cov_2qu8mx6isx().f[21]++;
  cov_2qu8mx6isx().s[63]++;
  await (0, _db.connectToDatabase)();
  const categories =
  /* istanbul ignore next */
  (cov_2qu8mx6isx().s[64]++, await _productmodel.default.find({
    isPublished: true
  }).distinct('category'));
  /* istanbul ignore next */
  cov_2qu8mx6isx().s[65]++;
  return categories;
}
async function getProductsForCard({
  tag,
  limit =
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[14][0]++, 4)
}) {
  /* istanbul ignore next */
  cov_2qu8mx6isx().f[22]++;
  cov_2qu8mx6isx().s[66]++;
  await (0, _db.connectToDatabase)();
  const products =
  /* istanbul ignore next */
  (cov_2qu8mx6isx().s[67]++, await _productmodel.default.find({
    tags: {
      $in: [tag]
    },
    isPublished: true
  }, {
    name: 1,
    slug: 1,
    images: 1
  }).sort({
    createdAt: 'desc'
  }).limit(limit).lean());
  /* istanbul ignore next */
  cov_2qu8mx6isx().s[68]++;
  return JSON.parse(JSON.stringify(products));
}
async function getProductsByTag({
  tag,
  limit =
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[15][0]++, 10)
}) {
  /* istanbul ignore next */
  cov_2qu8mx6isx().f[23]++;
  cov_2qu8mx6isx().s[69]++;
  await (0, _db.connectToDatabase)();
  const products =
  /* istanbul ignore next */
  (cov_2qu8mx6isx().s[70]++, await _productmodel.default.find({
    tags: {
      $in: [tag]
    },
    isPublished: true
  }).sort({
    createdAt: 'desc'
  }).limit(limit));
  /* istanbul ignore next */
  cov_2qu8mx6isx().s[71]++;
  return JSON.parse(JSON.stringify(products));
}
async function getProductBySlug(slug) {
  /* istanbul ignore next */
  cov_2qu8mx6isx().f[24]++;
  cov_2qu8mx6isx().s[72]++;
  await (0, _db.connectToDatabase)();
  const product =
  /* istanbul ignore next */
  (cov_2qu8mx6isx().s[73]++, await _productmodel.default.findOne({
    slug,
    isPublished: true
  }));
  /* istanbul ignore next */
  cov_2qu8mx6isx().s[74]++;
  if (!product) {
    /* istanbul ignore next */
    cov_2qu8mx6isx().b[16][0]++;
    cov_2qu8mx6isx().s[75]++;
    throw new Error('Product not found');
  } else
  /* istanbul ignore next */
  {
    cov_2qu8mx6isx().b[16][1]++;
  }
  cov_2qu8mx6isx().s[76]++;
  return JSON.parse(JSON.stringify(product));
}
async function getRelatedProductsByCategory({
  category,
  productId,
  limit =
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[17][0]++, 4),
  page =
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[18][0]++, 1)
}) {
  /* istanbul ignore next */
  cov_2qu8mx6isx().f[25]++;
  const {
    common: {
      pageSize
    }
  } =
  /* istanbul ignore next */
  (cov_2qu8mx6isx().s[77]++, await (0, _settingactions.getSetting)());
  /* istanbul ignore next */
  cov_2qu8mx6isx().s[78]++;
  limit =
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[19][0]++, limit) ||
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[19][1]++, pageSize);
  /* istanbul ignore next */
  cov_2qu8mx6isx().s[79]++;
  await (0, _db.connectToDatabase)();
  const skipAmount =
  /* istanbul ignore next */
  (cov_2qu8mx6isx().s[80]++, (Number(page) - 1) * limit);
  const conditions =
  /* istanbul ignore next */
  (cov_2qu8mx6isx().s[81]++, {
    isPublished: true,
    category,
    _id: {
      $ne: productId
    }
  });
  const products =
  /* istanbul ignore next */
  (cov_2qu8mx6isx().s[82]++, await _productmodel.default.find(conditions).sort({
    numSales: 'desc'
  }).skip(skipAmount).limit(limit));
  const productsCount =
  /* istanbul ignore next */
  (cov_2qu8mx6isx().s[83]++, await _productmodel.default.countDocuments(conditions));
  /* istanbul ignore next */
  cov_2qu8mx6isx().s[84]++;
  return {
    data: JSON.parse(JSON.stringify(products)),
    totalPages: Math.ceil(productsCount / limit)
  };
}
async function getAllProducts({
  query,
  limit,
  page,
  category,
  tag,
  price,
  rating,
  sort
}) {
  /* istanbul ignore next */
  cov_2qu8mx6isx().f[26]++;
  const {
    common: {
      pageSize
    }
  } =
  /* istanbul ignore next */
  (cov_2qu8mx6isx().s[85]++, await (0, _settingactions.getSetting)());
  /* istanbul ignore next */
  cov_2qu8mx6isx().s[86]++;
  limit =
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[20][0]++, limit) ||
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[20][1]++, pageSize);
  /* istanbul ignore next */
  cov_2qu8mx6isx().s[87]++;
  await (0, _db.connectToDatabase)();
  const queryFilter =
  /* istanbul ignore next */
  (cov_2qu8mx6isx().s[88]++,
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[22][0]++, query) &&
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[22][1]++, query !== 'all') ?
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[21][0]++, {
    name: {
      $regex: query,
      $options: 'i'
    }
  }) :
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[21][1]++, {}));
  const categoryFilter =
  /* istanbul ignore next */
  (cov_2qu8mx6isx().s[89]++,
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[24][0]++, category) &&
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[24][1]++, category !== 'all') ?
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[23][0]++, {
    category
  }) :
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[23][1]++, {}));
  const tagFilter =
  /* istanbul ignore next */
  (cov_2qu8mx6isx().s[90]++,
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[26][0]++, tag) &&
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[26][1]++, tag !== 'all') ?
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[25][0]++, {
    tags: tag
  }) :
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[25][1]++, {}));
  const ratingFilter =
  /* istanbul ignore next */
  (cov_2qu8mx6isx().s[91]++,
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[28][0]++, rating) &&
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[28][1]++, rating !== 'all') ?
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[27][0]++, {
    avgRating: {
      $gte: Number(rating)
    }
  }) :
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[27][1]++, {}));
  // 10-50
  const priceFilter =
  /* istanbul ignore next */
  (cov_2qu8mx6isx().s[92]++,
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[30][0]++, price) &&
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[30][1]++, price !== 'all') ?
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[29][0]++, {
    price: {
      $gte: Number(price.split('-')[0]),
      $lte: Number(price.split('-')[1])
    }
  }) :
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[29][1]++, {}));
  const order =
  /* istanbul ignore next */
  (cov_2qu8mx6isx().s[93]++, sort === 'best-selling' ?
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[31][0]++, {
    numSales: -1
  }) :
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[31][1]++, sort === 'price-low-to-high' ?
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[32][0]++, {
    price: 1
  }) :
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[32][1]++, sort === 'price-high-to-low' ?
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[33][0]++, {
    price: -1
  }) :
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[33][1]++, sort === 'avg-customer-review' ?
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[34][0]++, {
    avgRating: -1
  }) :
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[34][1]++, {
    _id: -1
  })))));
  const isPublished =
  /* istanbul ignore next */
  (cov_2qu8mx6isx().s[94]++, {
    isPublished: true
  });
  const products =
  /* istanbul ignore next */
  (cov_2qu8mx6isx().s[95]++, await _productmodel.default.find({
    ...isPublished,
    ...queryFilter,
    ...tagFilter,
    ...categoryFilter,
    ...priceFilter,
    ...ratingFilter
  }).sort(order).skip(limit * (Number(page) - 1)).limit(limit).lean());
  const countProducts =
  /* istanbul ignore next */
  (cov_2qu8mx6isx().s[96]++, await _productmodel.default.countDocuments({
    ...queryFilter,
    ...tagFilter,
    ...categoryFilter,
    ...priceFilter,
    ...ratingFilter
  }));
  /* istanbul ignore next */
  cov_2qu8mx6isx().s[97]++;
  return {
    products: JSON.parse(JSON.stringify(products)),
    totalPages: Math.ceil(countProducts / limit),
    totalProducts: countProducts,
    from: limit * (Number(page) - 1) + 1,
    to: limit * (Number(page) - 1) + products.length
  };
}
async function getAllTags() {
  /* istanbul ignore next */
  cov_2qu8mx6isx().f[27]++;
  const tags =
  /* istanbul ignore next */
  (cov_2qu8mx6isx().s[98]++, await _productmodel.default.aggregate([{
    $unwind: '$tags'
  }, {
    $group: {
      _id: null,
      uniqueTags: {
        $addToSet: '$tags'
      }
    }
  }, {
    $project: {
      _id: 0,
      uniqueTags: 1
    }
  }]));
  /* istanbul ignore next */
  cov_2qu8mx6isx().s[99]++;
  return /* istanbul ignore next */(cov_2qu8mx6isx().b[35][0]++, tags[0]?.uniqueTags.sort((a, b) => {
    /* istanbul ignore next */
    cov_2qu8mx6isx().f[28]++;
    cov_2qu8mx6isx().s[100]++;
    return a.localeCompare(b);
  }).map(x => {
    /* istanbul ignore next */
    cov_2qu8mx6isx().f[29]++;
    cov_2qu8mx6isx().s[101]++;
    return x.split('-').map(word => {
      /* istanbul ignore next */
      cov_2qu8mx6isx().f[30]++;
      cov_2qu8mx6isx().s[102]++;
      return word.charAt(0).toUpperCase() + word.slice(1);
    }).join(' ');
  })) ||
  /* istanbul ignore next */
  (cov_2qu8mx6isx().b[35][1]++, []);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,