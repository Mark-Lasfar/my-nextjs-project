abc7c32b2352a8cceed37c046b9795da
'use server';
"use strict";

/* istanbul ignore next */
function cov_sadl33j27() {
  var path = "/home/mark/Downloads/nextjs-amazona-main/lib/actions/user.actions.ts";
  var hash = "06e4a13807285089acaf927c67eb286f26ede02c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/mark/Downloads/nextjs-amazona-main/lib/actions/user.actions.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 40,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 32
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 26
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 27
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 27
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 28
        }
      },
      "10": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 37
        }
      },
      "11": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 26
        }
      },
      "12": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 30
        }
      },
      "13": {
        start: {
          line: 41,
          column: 32
        },
        end: {
          line: 41,
          column: 77
        }
      },
      "14": {
        start: {
          line: 42,
          column: 14
        },
        end: {
          line: 42,
          column: 35
        }
      },
      "15": {
        start: {
          line: 43,
          column: 19
        },
        end: {
          line: 43,
          column: 42
        }
      },
      "16": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 28
        }
      },
      "17": {
        start: {
          line: 45,
          column: 33
        },
        end: {
          line: 45,
          column: 93
        }
      },
      "18": {
        start: {
          line: 46,
          column: 15
        },
        end: {
          line: 46,
          column: 34
        }
      },
      "19": {
        start: {
          line: 47,
          column: 20
        },
        end: {
          line: 47,
          column: 46
        }
      },
      "20": {
        start: {
          line: 48,
          column: 15
        },
        end: {
          line: 48,
          column: 36
        }
      },
      "21": {
        start: {
          line: 49,
          column: 24
        },
        end: {
          line: 49,
          column: 52
        }
      },
      "22": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 53,
          column: 6
        }
      },
      "23": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 77,
          column: 5
        }
      },
      "24": {
        start: {
          line: 57,
          column: 21
        },
        end: {
          line: 62,
          column: 10
        }
      },
      "25": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 43
        }
      },
      "26": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 67,
          column: 11
        }
      },
      "27": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 71,
          column: 10
        }
      },
      "28": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 76,
          column: 10
        }
      },
      "29": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 94,
          column: 5
        }
      },
      "30": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 43
        }
      },
      "31": {
        start: {
          line: 82,
          column: 20
        },
        end: {
          line: 82,
          column: 66
        }
      },
      "32": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 51
        }
      },
      "33": {
        start: {
          line: 83,
          column: 18
        },
        end: {
          line: 83,
          column: 51
        }
      },
      "34": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 51
        }
      },
      "35": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 88,
          column: 10
        }
      },
      "36": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 93,
          column: 10
        }
      },
      "37": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 116,
          column: 5
        }
      },
      "38": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 43
        }
      },
      "39": {
        start: {
          line: 99,
          column: 23
        },
        end: {
          line: 99,
          column: 66
        }
      },
      "40": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 55
        }
      },
      "41": {
        start: {
          line: 100,
          column: 21
        },
        end: {
          line: 100,
          column: 55
        }
      },
      "42": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 101,
          column: 32
        }
      },
      "43": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 34
        }
      },
      "44": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 32
        }
      },
      "45": {
        start: {
          line: 104,
          column: 28
        },
        end: {
          line: 104,
          column: 47
        }
      },
      "46": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 105,
          column: 51
        }
      },
      "47": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 110,
          column: 10
        }
      },
      "48": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 115,
          column: 10
        }
      },
      "49": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 136,
          column: 5
        }
      },
      "50": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 43
        }
      },
      "51": {
        start: {
          line: 121,
          column: 24
        },
        end: {
          line: 121,
          column: 47
        }
      },
      "52": {
        start: {
          line: 122,
          column: 28
        },
        end: {
          line: 122,
          column: 80
        }
      },
      "53": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 60
        }
      },
      "54": {
        start: {
          line: 123,
          column: 26
        },
        end: {
          line: 123,
          column: 60
        }
      },
      "55": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 37
        }
      },
      "56": {
        start: {
          line: 125,
          column: 28
        },
        end: {
          line: 125,
          column: 52
        }
      },
      "57": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 130,
          column: 10
        }
      },
      "58": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 135,
          column: 10
        }
      },
      "59": {
        start: {
          line: 139,
          column: 4
        },
        end: {
          line: 142,
          column: 7
        }
      },
      "60": {
        start: {
          line: 144,
          column: 25
        },
        end: {
          line: 146,
          column: 1
        }
      },
      "61": {
        start: {
          line: 145,
          column: 4
        },
        end: {
          line: 145,
          column: 38
        }
      },
      "62": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 152,
          column: 1
        }
      },
      "63": {
        start: {
          line: 148,
          column: 23
        },
        end: {
          line: 150,
          column: 6
        }
      },
      "64": {
        start: {
          line: 151,
          column: 4
        },
        end: {
          line: 151,
          column: 51
        }
      },
      "65": {
        start: {
          line: 154,
          column: 37
        },
        end: {
          line: 154,
          column: 76
        }
      },
      "66": {
        start: {
          line: 155,
          column: 4
        },
        end: {
          line: 155,
          column: 30
        }
      },
      "67": {
        start: {
          line: 156,
          column: 4
        },
        end: {
          line: 156,
          column: 39
        }
      },
      "68": {
        start: {
          line: 157,
          column: 23
        },
        end: {
          line: 157,
          column: 49
        }
      },
      "69": {
        start: {
          line: 158,
          column: 18
        },
        end: {
          line: 160,
          column: 36
        }
      },
      "70": {
        start: {
          line: 161,
          column: 23
        },
        end: {
          line: 161,
          column: 64
        }
      },
      "71": {
        start: {
          line: 162,
          column: 4
        },
        end: {
          line: 165,
          column: 6
        }
      },
      "72": {
        start: {
          line: 168,
          column: 4
        },
        end: {
          line: 168,
          column: 39
        }
      },
      "73": {
        start: {
          line: 169,
          column: 17
        },
        end: {
          line: 169,
          column: 58
        }
      },
      "74": {
        start: {
          line: 170,
          column: 4
        },
        end: {
          line: 170,
          column: 49
        }
      },
      "75": {
        start: {
          line: 170,
          column: 15
        },
        end: {
          line: 170,
          column: 49
        }
      },
      "76": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 171,
          column: 44
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 22
          },
          end: {
            line: 13,
            column: 23
          }
        },
        loc: {
          start: {
            line: 13,
            column: 33
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 13
          },
          end: {
            line: 16,
            column: 14
          }
        },
        loc: {
          start: {
            line: 16,
            column: 24
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 16
          },
          end: {
            line: 19,
            column: 17
          }
        },
        loc: {
          start: {
            line: 19,
            column: 27
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 17
          },
          end: {
            line: 22,
            column: 18
          }
        },
        loc: {
          start: {
            line: 22,
            column: 28
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 17
          },
          end: {
            line: 25,
            column: 18
          }
        },
        loc: {
          start: {
            line: 25,
            column: 28
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 28,
            column: 18
          },
          end: {
            line: 28,
            column: 19
          }
        },
        loc: {
          start: {
            line: 28,
            column: 29
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 31,
            column: 27
          },
          end: {
            line: 31,
            column: 28
          }
        },
        loc: {
          start: {
            line: 31,
            column: 38
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 34,
            column: 16
          },
          end: {
            line: 34,
            column: 17
          }
        },
        loc: {
          start: {
            line: 34,
            column: 27
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 34
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 37,
            column: 20
          },
          end: {
            line: 37,
            column: 21
          }
        },
        loc: {
          start: {
            line: 37,
            column: 31
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 37
      },
      "10": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 50,
            column: 9
          },
          end: {
            line: 50,
            column: 33
          }
        },
        loc: {
          start: {
            line: 50,
            column: 39
          },
          end: {
            line: 54,
            column: 1
          }
        },
        line: 50
      },
      "11": {
        name: "registerUser",
        decl: {
          start: {
            line: 55,
            column: 15
          },
          end: {
            line: 55,
            column: 27
          }
        },
        loc: {
          start: {
            line: 55,
            column: 40
          },
          end: {
            line: 78,
            column: 1
          }
        },
        line: 55
      },
      "12": {
        name: "deleteUser",
        decl: {
          start: {
            line: 79,
            column: 15
          },
          end: {
            line: 79,
            column: 25
          }
        },
        loc: {
          start: {
            line: 79,
            column: 30
          },
          end: {
            line: 95,
            column: 1
          }
        },
        line: 79
      },
      "13": {
        name: "updateUser",
        decl: {
          start: {
            line: 96,
            column: 15
          },
          end: {
            line: 96,
            column: 25
          }
        },
        loc: {
          start: {
            line: 96,
            column: 32
          },
          end: {
            line: 117,
            column: 1
          }
        },
        line: 96
      },
      "14": {
        name: "updateUserName",
        decl: {
          start: {
            line: 118,
            column: 15
          },
          end: {
            line: 118,
            column: 29
          }
        },
        loc: {
          start: {
            line: 118,
            column: 36
          },
          end: {
            line: 137,
            column: 1
          }
        },
        line: 118
      },
      "15": {
        name: "signInWithCredentials",
        decl: {
          start: {
            line: 138,
            column: 15
          },
          end: {
            line: 138,
            column: 36
          }
        },
        loc: {
          start: {
            line: 138,
            column: 43
          },
          end: {
            line: 143,
            column: 1
          }
        },
        line: 138
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 144,
            column: 25
          },
          end: {
            line: 144,
            column: 26
          }
        },
        loc: {
          start: {
            line: 144,
            column: 35
          },
          end: {
            line: 146,
            column: 1
          }
        },
        line: 144
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 147,
            column: 16
          },
          end: {
            line: 147,
            column: 17
          }
        },
        loc: {
          start: {
            line: 147,
            column: 26
          },
          end: {
            line: 152,
            column: 1
          }
        },
        line: 147
      },
      "18": {
        name: "getAllUsers",
        decl: {
          start: {
            line: 153,
            column: 15
          },
          end: {
            line: 153,
            column: 26
          }
        },
        loc: {
          start: {
            line: 153,
            column: 44
          },
          end: {
            line: 166,
            column: 1
          }
        },
        line: 153
      },
      "19": {
        name: "getUserById",
        decl: {
          start: {
            line: 167,
            column: 15
          },
          end: {
            line: 167,
            column: 26
          }
        },
        loc: {
          start: {
            line: 167,
            column: 35
          },
          end: {
            line: 172,
            column: 1
          }
        },
        line: 167
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 51,
            column: 11
          },
          end: {
            line: 53,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 51,
            column: 35
          },
          end: {
            line: 51,
            column: 38
          }
        }, {
          start: {
            line: 51,
            column: 41
          },
          end: {
            line: 53,
            column: 5
          }
        }],
        line: 51
      },
      "1": {
        loc: {
          start: {
            line: 51,
            column: 11
          },
          end: {
            line: 51,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 11
          },
          end: {
            line: 51,
            column: 14
          }
        }, {
          start: {
            line: 51,
            column: 18
          },
          end: {
            line: 51,
            column: 32
          }
        }],
        line: 51
      },
      "2": {
        loc: {
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 83,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 83,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "3": {
        loc: {
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 100,
            column: 55
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 100,
            column: 55
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "4": {
        loc: {
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 123,
            column: 60
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 123,
            column: 60
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "5": {
        loc: {
          start: {
            line: 155,
            column: 12
          },
          end: {
            line: 155,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 155,
            column: 12
          },
          end: {
            line: 155,
            column: 17
          }
        }, {
          start: {
            line: 155,
            column: 21
          },
          end: {
            line: 155,
            column: 29
          }
        }],
        line: 155
      },
      "6": {
        loc: {
          start: {
            line: 170,
            column: 4
          },
          end: {
            line: 170,
            column: 49
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 4
          },
          end: {
            line: 170,
            column: 49
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 170
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/mark/Downloads/nextjs-amazona-main/lib/actions/user.actions.ts"],
      sourcesContent: ["'use server'\n\nimport bcrypt from 'bcryptjs'\nimport { auth, signIn, signOut } from '@/auth'\nimport { IUserName, IUserSignIn, IUserSignUp } from '@/types'\nimport { UserSignUpSchema, UserUpdateSchema } from '../validator'\nimport { connectToDatabase } from '../db'\nimport User, { IUser } from '../db/models/user.model'\nimport { formatError } from '../utils'\nimport { redirect } from 'next/navigation'\nimport { revalidatePath } from 'next/cache'\nimport { z } from 'zod'\nimport { getSetting } from './setting.actions'\n\n// CREATE\nexport async function registerUser(userSignUp: IUserSignUp) {\n  try {\n    const user = await UserSignUpSchema.parseAsync({\n      name: userSignUp.name,\n      email: userSignUp.email,\n      password: userSignUp.password,\n      confirmPassword: userSignUp.confirmPassword,\n    })\n\n    await connectToDatabase()\n    await User.create({\n      ...user,\n      password: await bcrypt.hash(user.password, 5),\n    })\n    return { success: true, message: 'User created successfully' }\n  } catch (error) {\n    return { success: false, error: formatError(error) }\n  }\n}\n\n// DELETE\n\nexport async function deleteUser(id: string) {\n  try {\n    await connectToDatabase()\n    const res = await User.findByIdAndDelete(id)\n    if (!res) throw new Error('Use not found')\n    revalidatePath('/admin/users')\n    return {\n      success: true,\n      message: 'User deleted successfully',\n    }\n  } catch (error) {\n    return { success: false, message: formatError(error) }\n  }\n}\n// UPDATE\n\nexport async function updateUser(user: z.infer<typeof UserUpdateSchema>) {\n  try {\n    await connectToDatabase()\n    const dbUser = await User.findById(user._id)\n    if (!dbUser) throw new Error('User not found')\n    dbUser.name = user.name\n    dbUser.email = user.email\n    dbUser.role = user.role\n    const updatedUser = await dbUser.save()\n    revalidatePath('/admin/users')\n    return {\n      success: true,\n      message: 'User updated successfully',\n      data: JSON.parse(JSON.stringify(updatedUser)),\n    }\n  } catch (error) {\n    return { success: false, message: formatError(error) }\n  }\n}\nexport async function updateUserName(user: IUserName) {\n  try {\n    await connectToDatabase()\n    const session = await auth()\n    const currentUser = await User.findById(session?.user?.id)\n    if (!currentUser) throw new Error('User not found')\n    currentUser.name = user.name\n    const updatedUser = await currentUser.save()\n    return {\n      success: true,\n      message: 'User updated successfully',\n      data: JSON.parse(JSON.stringify(updatedUser)),\n    }\n  } catch (error) {\n    return { success: false, message: formatError(error) }\n  }\n}\n\nexport async function signInWithCredentials(user: IUserSignIn) {\n  return await signIn('credentials', { ...user, redirect: false })\n}\nexport const SignInWithGoogle = async () => {\n  await signIn('google')\n}\nexport const SignOut = async () => {\n  const redirectTo = await signOut({ redirect: false })\n  redirect(redirectTo.redirect)\n}\n\n// GET\nexport async function getAllUsers({\n  limit,\n  page,\n}: {\n  limit?: number\n  page: number\n}) {\n  const {\n    common: { pageSize },\n  } = await getSetting()\n  limit = limit || pageSize\n  await connectToDatabase()\n\n  const skipAmount = (Number(page) - 1) * limit\n  const users = await User.find()\n    .sort({ createdAt: 'desc' })\n    .skip(skipAmount)\n    .limit(limit)\n  const usersCount = await User.countDocuments()\n  return {\n    data: JSON.parse(JSON.stringify(users)) as IUser[],\n    totalPages: Math.ceil(usersCount / limit),\n  }\n}\n\nexport async function getUserById(userId: string) {\n  await connectToDatabase()\n  const user = await User.findById(userId)\n  if (!user) throw new Error('User not found')\n  return JSON.parse(JSON.stringify(user)) as IUser\n}\n"],
      names: ["SignInWithGoogle", "SignOut", "deleteUser", "getAllUsers", "getUserById", "registerUser", "signInWithCredentials", "updateUser", "updateUserName", "userSignUp", "user", "UserSignUpSchema", "parseAsync", "name", "email", "password", "confirmPassword", "connectToDatabase", "User", "create", "bcrypt", "hash", "success", "message", "error", "formatError", "id", "res", "findByIdAndDelete", "Error", "revalidatePath", "dbUser", "findById", "_id", "role", "updatedUser", "save", "data", "JSON", "parse", "stringify", "session", "auth", "currentUser", "signIn", "redirect", "redirectTo", "signOut", "limit", "page", "common", "pageSize", "getSetting", "skipAmount", "Number", "users", "find", "sort", "createdAt", "skip", "usersCount", "countDocuments", "totalPages", "Math", "ceil", "userId"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "06e4a13807285089acaf927c67eb286f26ede02c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_sadl33j27 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_sadl33j27();
cov_sadl33j27().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_sadl33j27().f[0]++;
  cov_sadl33j27().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_sadl33j27().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_sadl33j27().s[3]++;
_export(exports, {
  SignInWithGoogle: function () {
    /* istanbul ignore next */
    cov_sadl33j27().f[1]++;
    cov_sadl33j27().s[4]++;
    return SignInWithGoogle;
  },
  SignOut: function () {
    /* istanbul ignore next */
    cov_sadl33j27().f[2]++;
    cov_sadl33j27().s[5]++;
    return SignOut;
  },
  deleteUser: function () {
    /* istanbul ignore next */
    cov_sadl33j27().f[3]++;
    cov_sadl33j27().s[6]++;
    return deleteUser;
  },
  getAllUsers: function () {
    /* istanbul ignore next */
    cov_sadl33j27().f[4]++;
    cov_sadl33j27().s[7]++;
    return getAllUsers;
  },
  getUserById: function () {
    /* istanbul ignore next */
    cov_sadl33j27().f[5]++;
    cov_sadl33j27().s[8]++;
    return getUserById;
  },
  registerUser: function () {
    /* istanbul ignore next */
    cov_sadl33j27().f[6]++;
    cov_sadl33j27().s[9]++;
    return registerUser;
  },
  signInWithCredentials: function () {
    /* istanbul ignore next */
    cov_sadl33j27().f[7]++;
    cov_sadl33j27().s[10]++;
    return signInWithCredentials;
  },
  updateUser: function () {
    /* istanbul ignore next */
    cov_sadl33j27().f[8]++;
    cov_sadl33j27().s[11]++;
    return updateUser;
  },
  updateUserName: function () {
    /* istanbul ignore next */
    cov_sadl33j27().f[9]++;
    cov_sadl33j27().s[12]++;
    return updateUserName;
  }
});
const _bcryptjs =
/* istanbul ignore next */
(/*#__PURE__*/cov_sadl33j27().s[13]++, _interop_require_default(require("bcryptjs")));
const _auth =
/* istanbul ignore next */
(cov_sadl33j27().s[14]++, require("../../auth"));
const _validator =
/* istanbul ignore next */
(cov_sadl33j27().s[15]++, require("../validator"));
const _db =
/* istanbul ignore next */
(cov_sadl33j27().s[16]++, require("../db"));
const _usermodel =
/* istanbul ignore next */
(/*#__PURE__*/cov_sadl33j27().s[17]++, _interop_require_default(require("../db/models/user.model")));
const _utils =
/* istanbul ignore next */
(cov_sadl33j27().s[18]++, require("../utils"));
const _navigation =
/* istanbul ignore next */
(cov_sadl33j27().s[19]++, require("next/navigation"));
const _cache =
/* istanbul ignore next */
(cov_sadl33j27().s[20]++, require("next/cache"));
const _settingactions =
/* istanbul ignore next */
(cov_sadl33j27().s[21]++, require("./setting.actions"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_sadl33j27().f[10]++;
  cov_sadl33j27().s[22]++;
  return /* istanbul ignore next */(cov_sadl33j27().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_sadl33j27().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_sadl33j27().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_sadl33j27().b[0][1]++, {
    default: obj
  });
}
async function registerUser(userSignUp) {
  /* istanbul ignore next */
  cov_sadl33j27().f[11]++;
  cov_sadl33j27().s[23]++;
  try {
    const user =
    /* istanbul ignore next */
    (cov_sadl33j27().s[24]++, await _validator.UserSignUpSchema.parseAsync({
      name: userSignUp.name,
      email: userSignUp.email,
      password: userSignUp.password,
      confirmPassword: userSignUp.confirmPassword
    }));
    /* istanbul ignore next */
    cov_sadl33j27().s[25]++;
    await (0, _db.connectToDatabase)();
    /* istanbul ignore next */
    cov_sadl33j27().s[26]++;
    await _usermodel.default.create({
      ...user,
      password: await _bcryptjs.default.hash(user.password, 5)
    });
    /* istanbul ignore next */
    cov_sadl33j27().s[27]++;
    return {
      success: true,
      message: 'User created successfully'
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_sadl33j27().s[28]++;
    return {
      success: false,
      error: (0, _utils.formatError)(error)
    };
  }
}
async function deleteUser(id) {
  /* istanbul ignore next */
  cov_sadl33j27().f[12]++;
  cov_sadl33j27().s[29]++;
  try {
    /* istanbul ignore next */
    cov_sadl33j27().s[30]++;
    await (0, _db.connectToDatabase)();
    const res =
    /* istanbul ignore next */
    (cov_sadl33j27().s[31]++, await _usermodel.default.findByIdAndDelete(id));
    /* istanbul ignore next */
    cov_sadl33j27().s[32]++;
    if (!res) {
      /* istanbul ignore next */
      cov_sadl33j27().b[2][0]++;
      cov_sadl33j27().s[33]++;
      throw new Error('Use not found');
    } else
    /* istanbul ignore next */
    {
      cov_sadl33j27().b[2][1]++;
    }
    cov_sadl33j27().s[34]++;
    (0, _cache.revalidatePath)('/admin/users');
    /* istanbul ignore next */
    cov_sadl33j27().s[35]++;
    return {
      success: true,
      message: 'User deleted successfully'
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_sadl33j27().s[36]++;
    return {
      success: false,
      message: (0, _utils.formatError)(error)
    };
  }
}
async function updateUser(user) {
  /* istanbul ignore next */
  cov_sadl33j27().f[13]++;
  cov_sadl33j27().s[37]++;
  try {
    /* istanbul ignore next */
    cov_sadl33j27().s[38]++;
    await (0, _db.connectToDatabase)();
    const dbUser =
    /* istanbul ignore next */
    (cov_sadl33j27().s[39]++, await _usermodel.default.findById(user._id));
    /* istanbul ignore next */
    cov_sadl33j27().s[40]++;
    if (!dbUser) {
      /* istanbul ignore next */
      cov_sadl33j27().b[3][0]++;
      cov_sadl33j27().s[41]++;
      throw new Error('User not found');
    } else
    /* istanbul ignore next */
    {
      cov_sadl33j27().b[3][1]++;
    }
    cov_sadl33j27().s[42]++;
    dbUser.name = user.name;
    /* istanbul ignore next */
    cov_sadl33j27().s[43]++;
    dbUser.email = user.email;
    /* istanbul ignore next */
    cov_sadl33j27().s[44]++;
    dbUser.role = user.role;
    const updatedUser =
    /* istanbul ignore next */
    (cov_sadl33j27().s[45]++, await dbUser.save());
    /* istanbul ignore next */
    cov_sadl33j27().s[46]++;
    (0, _cache.revalidatePath)('/admin/users');
    /* istanbul ignore next */
    cov_sadl33j27().s[47]++;
    return {
      success: true,
      message: 'User updated successfully',
      data: JSON.parse(JSON.stringify(updatedUser))
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_sadl33j27().s[48]++;
    return {
      success: false,
      message: (0, _utils.formatError)(error)
    };
  }
}
async function updateUserName(user) {
  /* istanbul ignore next */
  cov_sadl33j27().f[14]++;
  cov_sadl33j27().s[49]++;
  try {
    /* istanbul ignore next */
    cov_sadl33j27().s[50]++;
    await (0, _db.connectToDatabase)();
    const session =
    /* istanbul ignore next */
    (cov_sadl33j27().s[51]++, await (0, _auth.auth)());
    const currentUser =
    /* istanbul ignore next */
    (cov_sadl33j27().s[52]++, await _usermodel.default.findById(session?.user?.id));
    /* istanbul ignore next */
    cov_sadl33j27().s[53]++;
    if (!currentUser) {
      /* istanbul ignore next */
      cov_sadl33j27().b[4][0]++;
      cov_sadl33j27().s[54]++;
      throw new Error('User not found');
    } else
    /* istanbul ignore next */
    {
      cov_sadl33j27().b[4][1]++;
    }
    cov_sadl33j27().s[55]++;
    currentUser.name = user.name;
    const updatedUser =
    /* istanbul ignore next */
    (cov_sadl33j27().s[56]++, await currentUser.save());
    /* istanbul ignore next */
    cov_sadl33j27().s[57]++;
    return {
      success: true,
      message: 'User updated successfully',
      data: JSON.parse(JSON.stringify(updatedUser))
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_sadl33j27().s[58]++;
    return {
      success: false,
      message: (0, _utils.formatError)(error)
    };
  }
}
async function signInWithCredentials(user) {
  /* istanbul ignore next */
  cov_sadl33j27().f[15]++;
  cov_sadl33j27().s[59]++;
  return await (0, _auth.signIn)('credentials', {
    ...user,
    redirect: false
  });
}
/* istanbul ignore next */
cov_sadl33j27().s[60]++;
const SignInWithGoogle = async () => {
  /* istanbul ignore next */
  cov_sadl33j27().f[16]++;
  cov_sadl33j27().s[61]++;
  await (0, _auth.signIn)('google');
};
/* istanbul ignore next */
cov_sadl33j27().s[62]++;
const SignOut = async () => {
  /* istanbul ignore next */
  cov_sadl33j27().f[17]++;
  const redirectTo =
  /* istanbul ignore next */
  (cov_sadl33j27().s[63]++, await (0, _auth.signOut)({
    redirect: false
  }));
  /* istanbul ignore next */
  cov_sadl33j27().s[64]++;
  (0, _navigation.redirect)(redirectTo.redirect);
};
async function getAllUsers({
  limit,
  page
}) {
  /* istanbul ignore next */
  cov_sadl33j27().f[18]++;
  const {
    common: {
      pageSize
    }
  } =
  /* istanbul ignore next */
  (cov_sadl33j27().s[65]++, await (0, _settingactions.getSetting)());
  /* istanbul ignore next */
  cov_sadl33j27().s[66]++;
  limit =
  /* istanbul ignore next */
  (cov_sadl33j27().b[5][0]++, limit) ||
  /* istanbul ignore next */
  (cov_sadl33j27().b[5][1]++, pageSize);
  /* istanbul ignore next */
  cov_sadl33j27().s[67]++;
  await (0, _db.connectToDatabase)();
  const skipAmount =
  /* istanbul ignore next */
  (cov_sadl33j27().s[68]++, (Number(page) - 1) * limit);
  const users =
  /* istanbul ignore next */
  (cov_sadl33j27().s[69]++, await _usermodel.default.find().sort({
    createdAt: 'desc'
  }).skip(skipAmount).limit(limit));
  const usersCount =
  /* istanbul ignore next */
  (cov_sadl33j27().s[70]++, await _usermodel.default.countDocuments());
  /* istanbul ignore next */
  cov_sadl33j27().s[71]++;
  return {
    data: JSON.parse(JSON.stringify(users)),
    totalPages: Math.ceil(usersCount / limit)
  };
}
async function getUserById(userId) {
  /* istanbul ignore next */
  cov_sadl33j27().f[19]++;
  cov_sadl33j27().s[72]++;
  await (0, _db.connectToDatabase)();
  const user =
  /* istanbul ignore next */
  (cov_sadl33j27().s[73]++, await _usermodel.default.findById(userId));
  /* istanbul ignore next */
  cov_sadl33j27().s[74]++;
  if (!user) {
    /* istanbul ignore next */
    cov_sadl33j27().b[6][0]++;
    cov_sadl33j27().s[75]++;
    throw new Error('User not found');
  } else
  /* istanbul ignore next */
  {
    cov_sadl33j27().b[6][1]++;
  }
  cov_sadl33j27().s[76]++;
  return JSON.parse(JSON.stringify(user));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3Zfc2FkbDMzajI3IiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwiU2lnbkluV2l0aEdvb2dsZSIsImYiLCJTaWduT3V0IiwiZGVsZXRlVXNlciIsImdldEFsbFVzZXJzIiwiZ2V0VXNlckJ5SWQiLCJyZWdpc3RlclVzZXIiLCJzaWduSW5XaXRoQ3JlZGVudGlhbHMiLCJ1cGRhdGVVc2VyIiwidXBkYXRlVXNlck5hbWUiLCJ1c2VyU2lnblVwIiwidXNlciIsIl92YWxpZGF0b3IiLCJVc2VyU2lnblVwU2NoZW1hIiwicGFyc2VBc3luYyIsIm5hbWUiLCJlbWFpbCIsInBhc3N3b3JkIiwiY29uZmlybVBhc3N3b3JkIiwiX2RiIiwiY29ubmVjdFRvRGF0YWJhc2UiLCJfdXNlcm1vZGVsIiwiZGVmYXVsdCIsImNyZWF0ZSIsIl9iY3J5cHRqcyIsImhhc2giLCJzdWNjZXNzIiwibWVzc2FnZSIsImVycm9yIiwiX3V0aWxzIiwiZm9ybWF0RXJyb3IiLCJpZCIsInJlcyIsImZpbmRCeUlkQW5kRGVsZXRlIiwiYiIsIkVycm9yIiwiX2NhY2hlIiwicmV2YWxpZGF0ZVBhdGgiLCJkYlVzZXIiLCJmaW5kQnlJZCIsIl9pZCIsInJvbGUiLCJ1cGRhdGVkVXNlciIsInNhdmUiLCJkYXRhIiwiSlNPTiIsInBhcnNlIiwic3RyaW5naWZ5Iiwic2Vzc2lvbiIsIl9hdXRoIiwiYXV0aCIsImN1cnJlbnRVc2VyIiwic2lnbkluIiwicmVkaXJlY3QiLCJyZWRpcmVjdFRvIiwic2lnbk91dCIsIl9uYXZpZ2F0aW9uIiwibGltaXQiLCJwYWdlIiwiY29tbW9uIiwicGFnZVNpemUiLCJfc2V0dGluZ2FjdGlvbnMiLCJnZXRTZXR0aW5nIiwic2tpcEFtb3VudCIsIk51bWJlciIsInVzZXJzIiwiZmluZCIsInNvcnQiLCJjcmVhdGVkQXQiLCJza2lwIiwidXNlcnNDb3VudCIsImNvdW50RG9jdW1lbnRzIiwidG90YWxQYWdlcyIsIk1hdGgiLCJjZWlsIiwidXNlcklkIl0sInNvdXJjZXMiOlsiL2hvbWUvbWFyay9Eb3dubG9hZHMvbmV4dGpzLWFtYXpvbmEtbWFpbi9saWIvYWN0aW9ucy91c2VyLmFjdGlvbnMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzZXJ2ZXInXG5cbmltcG9ydCBiY3J5cHQgZnJvbSAnYmNyeXB0anMnXG5pbXBvcnQgeyBhdXRoLCBzaWduSW4sIHNpZ25PdXQgfSBmcm9tICdAL2F1dGgnXG5pbXBvcnQgeyBJVXNlck5hbWUsIElVc2VyU2lnbkluLCBJVXNlclNpZ25VcCB9IGZyb20gJ0AvdHlwZXMnXG5pbXBvcnQgeyBVc2VyU2lnblVwU2NoZW1hLCBVc2VyVXBkYXRlU2NoZW1hIH0gZnJvbSAnLi4vdmFsaWRhdG9yJ1xuaW1wb3J0IHsgY29ubmVjdFRvRGF0YWJhc2UgfSBmcm9tICcuLi9kYidcbmltcG9ydCBVc2VyLCB7IElVc2VyIH0gZnJvbSAnLi4vZGIvbW9kZWxzL3VzZXIubW9kZWwnXG5pbXBvcnQgeyBmb3JtYXRFcnJvciB9IGZyb20gJy4uL3V0aWxzJ1xuaW1wb3J0IHsgcmVkaXJlY3QgfSBmcm9tICduZXh0L25hdmlnYXRpb24nXG5pbXBvcnQgeyByZXZhbGlkYXRlUGF0aCB9IGZyb20gJ25leHQvY2FjaGUnXG5pbXBvcnQgeyB6IH0gZnJvbSAnem9kJ1xuaW1wb3J0IHsgZ2V0U2V0dGluZyB9IGZyb20gJy4vc2V0dGluZy5hY3Rpb25zJ1xuXG4vLyBDUkVBVEVcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiByZWdpc3RlclVzZXIodXNlclNpZ25VcDogSVVzZXJTaWduVXApIHtcbiAgdHJ5IHtcbiAgICBjb25zdCB1c2VyID0gYXdhaXQgVXNlclNpZ25VcFNjaGVtYS5wYXJzZUFzeW5jKHtcbiAgICAgIG5hbWU6IHVzZXJTaWduVXAubmFtZSxcbiAgICAgIGVtYWlsOiB1c2VyU2lnblVwLmVtYWlsLFxuICAgICAgcGFzc3dvcmQ6IHVzZXJTaWduVXAucGFzc3dvcmQsXG4gICAgICBjb25maXJtUGFzc3dvcmQ6IHVzZXJTaWduVXAuY29uZmlybVBhc3N3b3JkLFxuICAgIH0pXG5cbiAgICBhd2FpdCBjb25uZWN0VG9EYXRhYmFzZSgpXG4gICAgYXdhaXQgVXNlci5jcmVhdGUoe1xuICAgICAgLi4udXNlcixcbiAgICAgIHBhc3N3b3JkOiBhd2FpdCBiY3J5cHQuaGFzaCh1c2VyLnBhc3N3b3JkLCA1KSxcbiAgICB9KVxuICAgIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUsIG1lc3NhZ2U6ICdVc2VyIGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5JyB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIHsgc3VjY2VzczogZmFsc2UsIGVycm9yOiBmb3JtYXRFcnJvcihlcnJvcikgfVxuICB9XG59XG5cbi8vIERFTEVURVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZGVsZXRlVXNlcihpZDogc3RyaW5nKSB7XG4gIHRyeSB7XG4gICAgYXdhaXQgY29ubmVjdFRvRGF0YWJhc2UoKVxuICAgIGNvbnN0IHJlcyA9IGF3YWl0IFVzZXIuZmluZEJ5SWRBbmREZWxldGUoaWQpXG4gICAgaWYgKCFyZXMpIHRocm93IG5ldyBFcnJvcignVXNlIG5vdCBmb3VuZCcpXG4gICAgcmV2YWxpZGF0ZVBhdGgoJy9hZG1pbi91c2VycycpXG4gICAgcmV0dXJuIHtcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICBtZXNzYWdlOiAnVXNlciBkZWxldGVkIHN1Y2Nlc3NmdWxseScsXG4gICAgfVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJldHVybiB7IHN1Y2Nlc3M6IGZhbHNlLCBtZXNzYWdlOiBmb3JtYXRFcnJvcihlcnJvcikgfVxuICB9XG59XG4vLyBVUERBVEVcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHVwZGF0ZVVzZXIodXNlcjogei5pbmZlcjx0eXBlb2YgVXNlclVwZGF0ZVNjaGVtYT4pIHtcbiAgdHJ5IHtcbiAgICBhd2FpdCBjb25uZWN0VG9EYXRhYmFzZSgpXG4gICAgY29uc3QgZGJVc2VyID0gYXdhaXQgVXNlci5maW5kQnlJZCh1c2VyLl9pZClcbiAgICBpZiAoIWRiVXNlcikgdGhyb3cgbmV3IEVycm9yKCdVc2VyIG5vdCBmb3VuZCcpXG4gICAgZGJVc2VyLm5hbWUgPSB1c2VyLm5hbWVcbiAgICBkYlVzZXIuZW1haWwgPSB1c2VyLmVtYWlsXG4gICAgZGJVc2VyLnJvbGUgPSB1c2VyLnJvbGVcbiAgICBjb25zdCB1cGRhdGVkVXNlciA9IGF3YWl0IGRiVXNlci5zYXZlKClcbiAgICByZXZhbGlkYXRlUGF0aCgnL2FkbWluL3VzZXJzJylcbiAgICByZXR1cm4ge1xuICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgIG1lc3NhZ2U6ICdVc2VyIHVwZGF0ZWQgc3VjY2Vzc2Z1bGx5JyxcbiAgICAgIGRhdGE6IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodXBkYXRlZFVzZXIpKSxcbiAgICB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIHsgc3VjY2VzczogZmFsc2UsIG1lc3NhZ2U6IGZvcm1hdEVycm9yKGVycm9yKSB9XG4gIH1cbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB1cGRhdGVVc2VyTmFtZSh1c2VyOiBJVXNlck5hbWUpIHtcbiAgdHJ5IHtcbiAgICBhd2FpdCBjb25uZWN0VG9EYXRhYmFzZSgpXG4gICAgY29uc3Qgc2Vzc2lvbiA9IGF3YWl0IGF1dGgoKVxuICAgIGNvbnN0IGN1cnJlbnRVc2VyID0gYXdhaXQgVXNlci5maW5kQnlJZChzZXNzaW9uPy51c2VyPy5pZClcbiAgICBpZiAoIWN1cnJlbnRVc2VyKSB0aHJvdyBuZXcgRXJyb3IoJ1VzZXIgbm90IGZvdW5kJylcbiAgICBjdXJyZW50VXNlci5uYW1lID0gdXNlci5uYW1lXG4gICAgY29uc3QgdXBkYXRlZFVzZXIgPSBhd2FpdCBjdXJyZW50VXNlci5zYXZlKClcbiAgICByZXR1cm4ge1xuICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgIG1lc3NhZ2U6ICdVc2VyIHVwZGF0ZWQgc3VjY2Vzc2Z1bGx5JyxcbiAgICAgIGRhdGE6IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodXBkYXRlZFVzZXIpKSxcbiAgICB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIHsgc3VjY2VzczogZmFsc2UsIG1lc3NhZ2U6IGZvcm1hdEVycm9yKGVycm9yKSB9XG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNpZ25JbldpdGhDcmVkZW50aWFscyh1c2VyOiBJVXNlclNpZ25Jbikge1xuICByZXR1cm4gYXdhaXQgc2lnbkluKCdjcmVkZW50aWFscycsIHsgLi4udXNlciwgcmVkaXJlY3Q6IGZhbHNlIH0pXG59XG5leHBvcnQgY29uc3QgU2lnbkluV2l0aEdvb2dsZSA9IGFzeW5jICgpID0+IHtcbiAgYXdhaXQgc2lnbkluKCdnb29nbGUnKVxufVxuZXhwb3J0IGNvbnN0IFNpZ25PdXQgPSBhc3luYyAoKSA9PiB7XG4gIGNvbnN0IHJlZGlyZWN0VG8gPSBhd2FpdCBzaWduT3V0KHsgcmVkaXJlY3Q6IGZhbHNlIH0pXG4gIHJlZGlyZWN0KHJlZGlyZWN0VG8ucmVkaXJlY3QpXG59XG5cbi8vIEdFVFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldEFsbFVzZXJzKHtcbiAgbGltaXQsXG4gIHBhZ2UsXG59OiB7XG4gIGxpbWl0PzogbnVtYmVyXG4gIHBhZ2U6IG51bWJlclxufSkge1xuICBjb25zdCB7XG4gICAgY29tbW9uOiB7IHBhZ2VTaXplIH0sXG4gIH0gPSBhd2FpdCBnZXRTZXR0aW5nKClcbiAgbGltaXQgPSBsaW1pdCB8fCBwYWdlU2l6ZVxuICBhd2FpdCBjb25uZWN0VG9EYXRhYmFzZSgpXG5cbiAgY29uc3Qgc2tpcEFtb3VudCA9IChOdW1iZXIocGFnZSkgLSAxKSAqIGxpbWl0XG4gIGNvbnN0IHVzZXJzID0gYXdhaXQgVXNlci5maW5kKClcbiAgICAuc29ydCh7IGNyZWF0ZWRBdDogJ2Rlc2MnIH0pXG4gICAgLnNraXAoc2tpcEFtb3VudClcbiAgICAubGltaXQobGltaXQpXG4gIGNvbnN0IHVzZXJzQ291bnQgPSBhd2FpdCBVc2VyLmNvdW50RG9jdW1lbnRzKClcbiAgcmV0dXJuIHtcbiAgICBkYXRhOiBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHVzZXJzKSkgYXMgSVVzZXJbXSxcbiAgICB0b3RhbFBhZ2VzOiBNYXRoLmNlaWwodXNlcnNDb3VudCAvIGxpbWl0KSxcbiAgfVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0VXNlckJ5SWQodXNlcklkOiBzdHJpbmcpIHtcbiAgYXdhaXQgY29ubmVjdFRvRGF0YWJhc2UoKVxuICBjb25zdCB1c2VyID0gYXdhaXQgVXNlci5maW5kQnlJZCh1c2VySWQpXG4gIGlmICghdXNlcikgdGhyb3cgbmV3IEVycm9yKCdVc2VyIG5vdCBmb3VuZCcpXG4gIHJldHVybiBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHVzZXIpKSBhcyBJVXNlclxufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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