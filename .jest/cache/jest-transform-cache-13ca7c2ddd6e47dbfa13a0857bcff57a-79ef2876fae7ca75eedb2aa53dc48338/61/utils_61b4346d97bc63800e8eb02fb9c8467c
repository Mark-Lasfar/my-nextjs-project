1c06dd153aa8a28f755d9f8585929ff5
"use strict";

/* istanbul ignore next */
function cov_1i3hb13192() {
  var path = "/home/mark/Downloads/nextjs-amazona-main/lib/utils.ts";
  var hash = "ab654c2473c41c98fdcba6ff98c8f23e9ae950a5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/mark/Downloads/nextjs-amazona-main/lib/utils.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 60,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 35
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 33
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 18
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 28
        }
      },
      "8": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 30
        }
      },
      "9": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 30
        }
      },
      "10": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 27
        }
      },
      "11": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 24
        }
      },
      "12": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 28
        }
      },
      "13": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 39
        }
      },
      "14": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 26
        }
      },
      "15": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 28
        }
      },
      "16": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 28
        }
      },
      "17": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 22
        }
      },
      "18": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 33
        }
      },
      "19": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 22
        }
      },
      "20": {
        start: {
          line: 61,
          column: 14
        },
        end: {
          line: 61,
          column: 29
        }
      },
      "21": {
        start: {
          line: 62,
          column: 23
        },
        end: {
          line: 62,
          column: 48
        }
      },
      "22": {
        start: {
          line: 63,
          column: 35
        },
        end: {
          line: 63,
          column: 84
        }
      },
      "23": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 67,
          column: 6
        }
      },
      "24": {
        start: {
          line: 70,
          column: 23
        },
        end: {
          line: 70,
          column: 57
        }
      },
      "25": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 71,
          column: 28
        }
      },
      "26": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 77,
          column: 7
        }
      },
      "27": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 80,
          column: 64
        }
      },
      "28": {
        start: {
          line: 82,
          column: 32
        },
        end: {
          line: 85,
          column: 1
        }
      },
      "29": {
        start: {
          line: 83,
          column: 27
        },
        end: {
          line: 83,
          column: 52
        }
      },
      "30": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 84,
          column: 62
        }
      },
      "31": {
        start: {
          line: 86,
          column: 15
        },
        end: {
          line: 86,
          column: 132
        }
      },
      "32": {
        start: {
          line: 86,
          column: 23
        },
        end: {
          line: 86,
          column: 132
        }
      },
      "33": {
        start: {
          line: 87,
          column: 27
        },
        end: {
          line: 91,
          column: 2
        }
      },
      "34": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 93,
          column: 45
        }
      },
      "35": {
        start: {
          line: 95,
          column: 25
        },
        end: {
          line: 95,
          column: 55
        }
      },
      "36": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 97,
          column: 43
        }
      },
      "37": {
        start: {
          line: 99,
          column: 15
        },
        end: {
          line: 99,
          column: 68
        }
      },
      "38": {
        start: {
          line: 99,
          column: 22
        },
        end: {
          line: 99,
          column: 68
        }
      },
      "39": {
        start: {
          line: 100,
          column: 19
        },
        end: {
          line: 102,
          column: 51
        }
      },
      "40": {
        start: {
          line: 100,
          column: 23
        },
        end: {
          line: 102,
          column: 51
        }
      },
      "41": {
        start: {
          line: 102,
          column: 11
        },
        end: {
          line: 102,
          column: 41
        }
      },
      "42": {
        start: {
          line: 103,
          column: 20
        },
        end: {
          line: 124,
          column: 1
        }
      },
      "43": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 123,
          column: 5
        }
      },
      "44": {
        start: {
          line: 105,
          column: 28
        },
        end: {
          line: 109,
          column: 10
        }
      },
      "45": {
        start: {
          line: 106,
          column: 33
        },
        end: {
          line: 106,
          column: 60
        }
      },
      "46": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 108,
          column: 13
        }
      },
      "47": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 38
        }
      },
      "48": {
        start: {
          line: 111,
          column: 11
        },
        end: {
          line: 123,
          column: 5
        }
      },
      "49": {
        start: {
          line: 112,
          column: 28
        },
        end: {
          line: 115,
          column: 10
        }
      },
      "50": {
        start: {
          line: 113,
          column: 33
        },
        end: {
          line: 113,
          column: 60
        }
      },
      "51": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 32
        }
      },
      "52": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 38
        }
      },
      "53": {
        start: {
          line: 117,
          column: 11
        },
        end: {
          line: 123,
          column: 5
        }
      },
      "54": {
        start: {
          line: 118,
          column: 31
        },
        end: {
          line: 118,
          column: 61
        }
      },
      "55": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 50
        }
      },
      "56": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 97
        }
      },
      "57": {
        start: {
          line: 126,
          column: 24
        },
        end: {
          line: 126,
          column: 34
        }
      },
      "58": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 127,
          column: 54
        }
      },
      "59": {
        start: {
          line: 128,
          column: 4
        },
        end: {
          line: 128,
          column: 23
        }
      },
      "60": {
        start: {
          line: 131,
          column: 26
        },
        end: {
          line: 131,
          column: 58
        }
      },
      "61": {
        start: {
          line: 132,
          column: 17
        },
        end: {
          line: 132,
          column: 42
        }
      },
      "62": {
        start: {
          line: 133,
          column: 22
        },
        end: {
          line: 135,
          column: 6
        }
      },
      "63": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 136,
          column: 26
        }
      },
      "64": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 139,
          column: 5
        }
      },
      "65": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 38
        }
      },
      "66": {
        start: {
          line: 140,
          column: 4
        },
        end: {
          line: 140,
          column: 21
        }
      },
      "67": {
        start: {
          line: 143,
          column: 24
        },
        end: {
          line: 143,
          column: 34
        }
      },
      "68": {
        start: {
          line: 144,
          column: 4
        },
        end: {
          line: 144,
          column: 54
        }
      },
      "69": {
        start: {
          line: 145,
          column: 4
        },
        end: {
          line: 145,
          column: 23
        }
      },
      "70": {
        start: {
          line: 148,
          column: 16
        },
        end: {
          line: 148,
          column: 26
        }
      },
      "71": {
        start: {
          line: 149,
          column: 21
        },
        end: {
          line: 149,
          column: 31
        }
      },
      "72": {
        start: {
          line: 150,
          column: 4
        },
        end: {
          line: 151,
          column: 5
        }
      },
      "73": {
        start: {
          line: 152,
          column: 17
        },
        end: {
          line: 152,
          column: 51
        }
      },
      "74": {
        start: {
          line: 154,
          column: 18
        },
        end: {
          line: 154,
          column: 53
        }
      },
      "75": {
        start: {
          line: 155,
          column: 20
        },
        end: {
          line: 155,
          column: 69
        }
      },
      "76": {
        start: {
          line: 156,
          column: 4
        },
        end: {
          line: 159,
          column: 6
        }
      },
      "77": {
        start: {
          line: 161,
          column: 23
        },
        end: {
          line: 189,
          column: 1
        }
      },
      "78": {
        start: {
          line: 162,
          column: 28
        },
        end: {
          line: 169,
          column: 5
        }
      },
      "79": {
        start: {
          line: 170,
          column: 24
        },
        end: {
          line: 175,
          column: 5
        }
      },
      "80": {
        start: {
          line: 176,
          column: 24
        },
        end: {
          line: 180,
          column: 5
        }
      },
      "81": {
        start: {
          line: 181,
          column: 30
        },
        end: {
          line: 181,
          column: 91
        }
      },
      "82": {
        start: {
          line: 182,
          column: 26
        },
        end: {
          line: 182,
          column: 83
        }
      },
      "83": {
        start: {
          line: 183,
          column: 26
        },
        end: {
          line: 183,
          column: 83
        }
      },
      "84": {
        start: {
          line: 184,
          column: 4
        },
        end: {
          line: 188,
          column: 6
        }
      },
      "85": {
        start: {
          line: 191,
          column: 4
        },
        end: {
          line: 191,
          column: 46
        }
      },
      "86": {
        start: {
          line: 193,
          column: 21
        },
        end: {
          line: 204,
          column: 1
        }
      },
      "87": {
        start: {
          line: 194,
          column: 22
        },
        end: {
          line: 196,
          column: 5
        }
      },
      "88": {
        start: {
          line: 197,
          column: 4
        },
        end: {
          line: 197,
          column: 48
        }
      },
      "89": {
        start: {
          line: 197,
          column: 18
        },
        end: {
          line: 197,
          column: 48
        }
      },
      "90": {
        start: {
          line: 198,
          column: 4
        },
        end: {
          line: 198,
          column: 41
        }
      },
      "91": {
        start: {
          line: 198,
          column: 13
        },
        end: {
          line: 198,
          column: 41
        }
      },
      "92": {
        start: {
          line: 199,
          column: 4
        },
        end: {
          line: 199,
          column: 39
        }
      },
      "93": {
        start: {
          line: 199,
          column: 15
        },
        end: {
          line: 199,
          column: 39
        }
      },
      "94": {
        start: {
          line: 200,
          column: 4
        },
        end: {
          line: 200,
          column: 42
        }
      },
      "95": {
        start: {
          line: 200,
          column: 16
        },
        end: {
          line: 200,
          column: 42
        }
      },
      "96": {
        start: {
          line: 201,
          column: 4
        },
        end: {
          line: 201,
          column: 36
        }
      },
      "97": {
        start: {
          line: 201,
          column: 14
        },
        end: {
          line: 201,
          column: 36
        }
      },
      "98": {
        start: {
          line: 202,
          column: 4
        },
        end: {
          line: 202,
          column: 36
        }
      },
      "99": {
        start: {
          line: 202,
          column: 14
        },
        end: {
          line: 202,
          column: 36
        }
      },
      "100": {
        start: {
          line: 203,
          column: 4
        },
        end: {
          line: 203,
          column: 66
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 25
          },
          end: {
            line: 12,
            column: 26
          }
        },
        loc: {
          start: {
            line: 12,
            column: 36
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 23
          },
          end: {
            line: 15,
            column: 24
          }
        },
        loc: {
          start: {
            line: 15,
            column: 34
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 18,
            column: 9
          }
        },
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 18
          },
          end: {
            line: 21,
            column: 19
          }
        },
        loc: {
          start: {
            line: 21,
            column: 29
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 24,
            column: 20
          },
          end: {
            line: 24,
            column: 21
          }
        },
        loc: {
          start: {
            line: 24,
            column: 31
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 27,
            column: 20
          },
          end: {
            line: 27,
            column: 21
          }
        },
        loc: {
          start: {
            line: 27,
            column: 31
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 30,
            column: 17
          },
          end: {
            line: 30,
            column: 18
          }
        },
        loc: {
          start: {
            line: 30,
            column: 28
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 33,
            column: 14
          },
          end: {
            line: 33,
            column: 15
          }
        },
        loc: {
          start: {
            line: 33,
            column: 25
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 36,
            column: 18
          },
          end: {
            line: 36,
            column: 19
          }
        },
        loc: {
          start: {
            line: 36,
            column: 29
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 39,
            column: 29
          },
          end: {
            line: 39,
            column: 30
          }
        },
        loc: {
          start: {
            line: 39,
            column: 40
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 39
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 42,
            column: 17
          }
        },
        loc: {
          start: {
            line: 42,
            column: 27
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 42
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 45,
            column: 18
          },
          end: {
            line: 45,
            column: 19
          }
        },
        loc: {
          start: {
            line: 45,
            column: 29
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 45
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 48,
            column: 18
          },
          end: {
            line: 48,
            column: 19
          }
        },
        loc: {
          start: {
            line: 48,
            column: 29
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 48
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 51,
            column: 13
          }
        },
        loc: {
          start: {
            line: 51,
            column: 23
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 51
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 54,
            column: 23
          },
          end: {
            line: 54,
            column: 24
          }
        },
        loc: {
          start: {
            line: 54,
            column: 34
          },
          end: {
            line: 56,
            column: 5
          }
        },
        line: 54
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 57,
            column: 13
          }
        },
        loc: {
          start: {
            line: 57,
            column: 23
          },
          end: {
            line: 59,
            column: 5
          }
        },
        line: 57
      },
      "17": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 64,
            column: 9
          },
          end: {
            line: 64,
            column: 33
          }
        },
        loc: {
          start: {
            line: 64,
            column: 39
          },
          end: {
            line: 68,
            column: 1
          }
        },
        line: 64
      },
      "18": {
        name: "formUrlQuery",
        decl: {
          start: {
            line: 69,
            column: 9
          },
          end: {
            line: 69,
            column: 21
          }
        },
        loc: {
          start: {
            line: 69,
            column: 46
          },
          end: {
            line: 78,
            column: 1
          }
        },
        line: 69
      },
      "19": {
        name: "cn",
        decl: {
          start: {
            line: 79,
            column: 9
          },
          end: {
            line: 79,
            column: 11
          }
        },
        loc: {
          start: {
            line: 79,
            column: 23
          },
          end: {
            line: 81,
            column: 1
          }
        },
        line: 79
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 82,
            column: 32
          },
          end: {
            line: 82,
            column: 33
          }
        },
        loc: {
          start: {
            line: 82,
            column: 39
          },
          end: {
            line: 85,
            column: 1
          }
        },
        line: 82
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 86,
            column: 15
          },
          end: {
            line: 86,
            column: 16
          }
        },
        loc: {
          start: {
            line: 86,
            column: 23
          },
          end: {
            line: 86,
            column: 132
          }
        },
        line: 86
      },
      "22": {
        name: "formatCurrency",
        decl: {
          start: {
            line: 92,
            column: 9
          },
          end: {
            line: 92,
            column: 23
          }
        },
        loc: {
          start: {
            line: 92,
            column: 32
          },
          end: {
            line: 94,
            column: 1
          }
        },
        line: 92
      },
      "23": {
        name: "formatNumber",
        decl: {
          start: {
            line: 96,
            column: 9
          },
          end: {
            line: 96,
            column: 21
          }
        },
        loc: {
          start: {
            line: 96,
            column: 30
          },
          end: {
            line: 98,
            column: 1
          }
        },
        line: 96
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 99,
            column: 15
          },
          end: {
            line: 99,
            column: 16
          }
        },
        loc: {
          start: {
            line: 99,
            column: 22
          },
          end: {
            line: 99,
            column: 68
          }
        },
        line: 99
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 100,
            column: 19
          },
          end: {
            line: 100,
            column: 20
          }
        },
        loc: {
          start: {
            line: 100,
            column: 23
          },
          end: {
            line: 102,
            column: 51
          }
        },
        line: 100
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 102,
            column: 7
          },
          end: {
            line: 102,
            column: 8
          }
        },
        loc: {
          start: {
            line: 102,
            column: 11
          },
          end: {
            line: 102,
            column: 41
          }
        },
        line: 102
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 103,
            column: 20
          },
          end: {
            line: 103,
            column: 21
          }
        },
        loc: {
          start: {
            line: 103,
            column: 29
          },
          end: {
            line: 124,
            column: 1
          }
        },
        line: 103
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 105,
            column: 58
          },
          end: {
            line: 105,
            column: 59
          }
        },
        loc: {
          start: {
            line: 105,
            column: 67
          },
          end: {
            line: 109,
            column: 9
          }
        },
        line: 105
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 112,
            column: 58
          },
          end: {
            line: 112,
            column: 59
          }
        },
        loc: {
          start: {
            line: 112,
            column: 67
          },
          end: {
            line: 115,
            column: 9
          }
        },
        line: 112
      },
      "30": {
        name: "calculateFutureDate",
        decl: {
          start: {
            line: 125,
            column: 9
          },
          end: {
            line: 125,
            column: 28
          }
        },
        loc: {
          start: {
            line: 125,
            column: 35
          },
          end: {
            line: 129,
            column: 1
          }
        },
        line: 125
      },
      "31": {
        name: "getMonthName",
        decl: {
          start: {
            line: 130,
            column: 9
          },
          end: {
            line: 130,
            column: 21
          }
        },
        loc: {
          start: {
            line: 130,
            column: 33
          },
          end: {
            line: 141,
            column: 1
          }
        },
        line: 130
      },
      "32": {
        name: "calculatePastDate",
        decl: {
          start: {
            line: 142,
            column: 9
          },
          end: {
            line: 142,
            column: 26
          }
        },
        loc: {
          start: {
            line: 142,
            column: 33
          },
          end: {
            line: 146,
            column: 1
          }
        },
        line: 142
      },
      "33": {
        name: "timeUntilMidnight",
        decl: {
          start: {
            line: 147,
            column: 9
          },
          end: {
            line: 147,
            column: 26
          }
        },
        loc: {
          start: {
            line: 147,
            column: 29
          },
          end: {
            line: 160,
            column: 1
          }
        },
        line: 147
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 161,
            column: 23
          },
          end: {
            line: 161,
            column: 24
          }
        },
        loc: {
          start: {
            line: 161,
            column: 37
          },
          end: {
            line: 189,
            column: 1
          }
        },
        line: 161
      },
      "35": {
        name: "formatId",
        decl: {
          start: {
            line: 190,
            column: 9
          },
          end: {
            line: 190,
            column: 17
          }
        },
        loc: {
          start: {
            line: 190,
            column: 22
          },
          end: {
            line: 192,
            column: 1
          }
        },
        line: 190
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 193,
            column: 21
          },
          end: {
            line: 193,
            column: 22
          }
        },
        loc: {
          start: {
            line: 193,
            column: 77
          },
          end: {
            line: 204,
            column: 1
          }
        },
        line: 193
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 65,
            column: 11
          },
          end: {
            line: 67,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 65,
            column: 35
          },
          end: {
            line: 65,
            column: 38
          }
        }, {
          start: {
            line: 65,
            column: 41
          },
          end: {
            line: 67,
            column: 5
          }
        }],
        line: 65
      },
      "1": {
        loc: {
          start: {
            line: 65,
            column: 11
          },
          end: {
            line: 65,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 11
          },
          end: {
            line: 65,
            column: 14
          }
        }, {
          start: {
            line: 65,
            column: 18
          },
          end: {
            line: 65,
            column: 32
          }
        }],
        line: 65
      },
      "2": {
        loc: {
          start: {
            line: 84,
            column: 11
          },
          end: {
            line: 84,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 84,
            column: 21
          },
          end: {
            line: 84,
            column: 55
          }
        }, {
          start: {
            line: 84,
            column: 58
          },
          end: {
            line: 84,
            column: 61
          }
        }],
        line: 84
      },
      "3": {
        loc: {
          start: {
            line: 104,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        }, {
          start: {
            line: 111,
            column: 11
          },
          end: {
            line: 123,
            column: 5
          }
        }],
        line: 104
      },
      "4": {
        loc: {
          start: {
            line: 111,
            column: 11
          },
          end: {
            line: 123,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 11
          },
          end: {
            line: 123,
            column: 5
          }
        }, {
          start: {
            line: 117,
            column: 11
          },
          end: {
            line: 123,
            column: 5
          }
        }],
        line: 111
      },
      "5": {
        loc: {
          start: {
            line: 117,
            column: 11
          },
          end: {
            line: 123,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 11
          },
          end: {
            line: 123,
            column: 5
          }
        }, {
          start: {
            line: 120,
            column: 11
          },
          end: {
            line: 123,
            column: 5
          }
        }],
        line: 117
      },
      "6": {
        loc: {
          start: {
            line: 122,
            column: 15
          },
          end: {
            line: 122,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 122,
            column: 51
          },
          end: {
            line: 122,
            column: 64
          }
        }, {
          start: {
            line: 122,
            column: 67
          },
          end: {
            line: 122,
            column: 96
          }
        }],
        line: 122
      },
      "7": {
        loc: {
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 137
      },
      "8": {
        loc: {
          start: {
            line: 137,
            column: 8
          },
          end: {
            line: 137,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 137,
            column: 8
          },
          end: {
            line: 137,
            column: 34
          }
        }, {
          start: {
            line: 137,
            column: 38
          },
          end: {
            line: 137,
            column: 66
          }
        }],
        line: 137
      },
      "9": {
        loc: {
          start: {
            line: 197,
            column: 4
          },
          end: {
            line: 197,
            column: 48
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 4
          },
          end: {
            line: 197,
            column: 48
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 197
      },
      "10": {
        loc: {
          start: {
            line: 198,
            column: 4
          },
          end: {
            line: 198,
            column: 41
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 4
          },
          end: {
            line: 198,
            column: 41
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 198
      },
      "11": {
        loc: {
          start: {
            line: 199,
            column: 4
          },
          end: {
            line: 199,
            column: 39
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 4
          },
          end: {
            line: 199,
            column: 39
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 199
      },
      "12": {
        loc: {
          start: {
            line: 200,
            column: 4
          },
          end: {
            line: 200,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 4
          },
          end: {
            line: 200,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 200
      },
      "13": {
        loc: {
          start: {
            line: 201,
            column: 4
          },
          end: {
            line: 201,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 201,
            column: 4
          },
          end: {
            line: 201,
            column: 36
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 201
      },
      "14": {
        loc: {
          start: {
            line: 202,
            column: 4
          },
          end: {
            line: 202,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 202,
            column: 4
          },
          end: {
            line: 202,
            column: 36
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 202
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/mark/Downloads/nextjs-amazona-main/lib/utils.ts"],
      sourcesContent: ["import { clsx, type ClassValue } from 'clsx'\nimport { twMerge } from 'tailwind-merge'\n\nimport qs from 'query-string'\n\nexport function formUrlQuery({\n  params,\n  key,\n  value,\n}: {\n  params: string\n  key: string\n  value: string | null\n}) {\n  const currentUrl = qs.parse(params)\n\n  currentUrl[key] = value\n\n  return qs.stringifyUrl(\n    {\n      url: window.location.pathname,\n      query: currentUrl,\n    },\n    { skipNull: true }\n  )\n}\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\nexport const formatNumberWithDecimal = (num: number): string => {\n  const [int, decimal] = num.toString().split('.')\n  return decimal ? `${int}.${decimal.padEnd(2, '0')}` : int\n}\n// PROMPT: [ChatGTP] create toSlug ts arrow function that convert text to lowercase, remove non-word,\n// non-whitespace, non-hyphen characters, replace whitespace, trim leading hyphens and trim trailing hyphens\n\nexport const toSlug = (text: string): string =>\n  text\n    .toLowerCase()\n    .replace(/[^\\w\\s-]+/g, '')\n    .replace(/\\s+/g, '-')\n    .replace(/^-+|-+$/g, '')\n    .replace(/-+/g, '-')\n\nconst CURRENCY_FORMATTER = new Intl.NumberFormat('en-US', {\n  currency: 'USD',\n  style: 'currency',\n  minimumFractionDigits: 2,\n})\nexport function formatCurrency(amount: number) {\n  return CURRENCY_FORMATTER.format(amount)\n}\n\nconst NUMBER_FORMATTER = new Intl.NumberFormat('en-US')\nexport function formatNumber(number: number) {\n  return NUMBER_FORMATTER.format(number)\n}\n\nexport const round2 = (num: number) =>\n  Math.round((num + Number.EPSILON) * 100) / 100\n\nexport const generateId = () =>\n  Array.from({ length: 24 }, () => Math.floor(Math.random() * 10)).join('')\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const formatError = (error: any): string => {\n  if (error.name === 'ZodError') {\n    const fieldErrors = Object.keys(error.errors).map((field) => {\n      const errorMessage = error.errors[field].message\n      return `${error.errors[field].path}: ${errorMessage}` // field: errorMessage\n    })\n    return fieldErrors.join('. ')\n  } else if (error.name === 'ValidationError') {\n    const fieldErrors = Object.keys(error.errors).map((field) => {\n      const errorMessage = error.errors[field].message\n      return errorMessage\n    })\n    return fieldErrors.join('. ')\n  } else if (error.code === 11000) {\n    const duplicateField = Object.keys(error.keyValue)[0]\n    return `${duplicateField} already exists`\n  } else {\n    // return 'Something went wrong. please try again'\n    return typeof error.message === 'string'\n      ? error.message\n      : JSON.stringify(error.message)\n  }\n}\n\nexport function calculateFutureDate(days: number) {\n  const currentDate = new Date()\n  currentDate.setDate(currentDate.getDate() + days)\n  return currentDate\n}\nexport function getMonthName(yearMonth: string): string {\n  const [year, month] = yearMonth.split('-').map(Number)\n  const date = new Date(year, month - 1)\n  const monthName = date.toLocaleString('default', { month: 'long' })\n  const now = new Date()\n\n  if (year === now.getFullYear() && month === now.getMonth() + 1) {\n    return `${monthName} Ongoing`\n  }\n  return monthName\n}\nexport function calculatePastDate(days: number) {\n  const currentDate = new Date()\n  currentDate.setDate(currentDate.getDate() - days)\n  return currentDate\n}\nexport function timeUntilMidnight(): { hours: number; minutes: number } {\n  const now = new Date()\n  const midnight = new Date()\n  midnight.setHours(24, 0, 0, 0) // Set to 12:00 AM (next day)\n\n  const diff = midnight.getTime() - now.getTime() // Difference in milliseconds\n  const hours = Math.floor(diff / (1000 * 60 * 60))\n  const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60))\n\n  return { hours, minutes }\n}\n\nexport const formatDateTime = (dateString: Date) => {\n  const dateTimeOptions: Intl.DateTimeFormatOptions = {\n    month: 'short', // abbreviated month name (e.g., 'Oct')\n    year: 'numeric', // abbreviated month name (e.g., 'Oct')\n    day: 'numeric', // numeric day of the month (e.g., '25')\n    hour: 'numeric', // numeric hour (e.g., '8')\n    minute: 'numeric', // numeric minute (e.g., '30')\n    hour12: true, // use 12-hour clock (true) or 24-hour clock (false)\n  }\n  const dateOptions: Intl.DateTimeFormatOptions = {\n    // weekday: 'short', // abbreviated weekday name (e.g., 'Mon')\n    month: 'short', // abbreviated month name (e.g., 'Oct')\n    year: 'numeric', // numeric year (e.g., '2023')\n    day: 'numeric', // numeric day of the month (e.g., '25')\n  }\n  const timeOptions: Intl.DateTimeFormatOptions = {\n    hour: 'numeric', // numeric hour (e.g., '8')\n    minute: 'numeric', // numeric minute (e.g., '30')\n    hour12: true, // use 12-hour clock (true) or 24-hour clock (false)\n  }\n  const formattedDateTime: string = new Date(dateString).toLocaleString(\n    'en-US',\n    dateTimeOptions\n  )\n  const formattedDate: string = new Date(dateString).toLocaleString(\n    'en-US',\n    dateOptions\n  )\n  const formattedTime: string = new Date(dateString).toLocaleString(\n    'en-US',\n    timeOptions\n  )\n  return {\n    dateTime: formattedDateTime,\n    dateOnly: formattedDate,\n    timeOnly: formattedTime,\n  }\n}\n\nexport function formatId(id: string) {\n  return `..${id.substring(id.length - 6)}`\n}\n\nexport const getFilterUrl = ({\n  params,\n  category,\n  tag,\n  sort,\n  price,\n  rating,\n  page,\n}: {\n  params: {\n    q?: string\n    category?: string\n    tag?: string\n    price?: string\n    rating?: string\n    sort?: string\n    page?: string\n  }\n  tag?: string\n  category?: string\n  sort?: string\n  price?: string\n  rating?: string\n  page?: string\n}) => {\n  const newParams = { ...params }\n  if (category) newParams.category = category\n  if (tag) newParams.tag = toSlug(tag)\n  if (price) newParams.price = price\n  if (rating) newParams.rating = rating\n  if (page) newParams.page = page\n  if (sort) newParams.sort = sort\n  return `/search?${new URLSearchParams(newParams).toString()}`\n}\n"],
      names: ["calculateFutureDate", "calculatePastDate", "cn", "formUrlQuery", "formatCurrency", "formatDateTime", "formatError", "formatId", "formatNumber", "formatNumberWithDecimal", "generateId", "getFilterUrl", "getMonthName", "round2", "timeUntilMidnight", "toSlug", "params", "key", "value", "currentUrl", "qs", "parse", "stringifyUrl", "url", "window", "location", "pathname", "query", "skipNull", "inputs", "twMerge", "clsx", "num", "int", "decimal", "toString", "split", "padEnd", "text", "toLowerCase", "replace", "CURRENCY_FORMATTER", "Intl", "NumberFormat", "currency", "style", "minimumFractionDigits", "amount", "format", "NUMBER_FORMATTER", "number", "Math", "round", "Number", "EPSILON", "Array", "from", "length", "floor", "random", "join", "error", "name", "fieldErrors", "Object", "keys", "errors", "map", "field", "errorMessage", "message", "path", "code", "duplicateField", "keyValue", "JSON", "stringify", "days", "currentDate", "Date", "setDate", "getDate", "yearMonth", "year", "month", "date", "monthName", "toLocaleString", "now", "getFullYear", "getMonth", "midnight", "setHours", "diff", "getTime", "hours", "minutes", "dateString", "dateTimeOptions", "day", "hour", "minute", "hour12", "dateOptions", "timeOptions", "formattedDateTime", "formattedDate", "formattedTime", "dateTime", "dateOnly", "timeOnly", "id", "substring", "category", "tag", "sort", "price", "rating", "page", "newParams", "URLSearchParams"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ab654c2473c41c98fdcba6ff98c8f23e9ae950a5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1i3hb13192 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1i3hb13192();
cov_1i3hb13192().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1i3hb13192().f[0]++;
  cov_1i3hb13192().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1i3hb13192().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1i3hb13192().s[3]++;
_export(exports, {
  calculateFutureDate: function () {
    /* istanbul ignore next */
    cov_1i3hb13192().f[1]++;
    cov_1i3hb13192().s[4]++;
    return calculateFutureDate;
  },
  calculatePastDate: function () {
    /* istanbul ignore next */
    cov_1i3hb13192().f[2]++;
    cov_1i3hb13192().s[5]++;
    return calculatePastDate;
  },
  cn: function () {
    /* istanbul ignore next */
    cov_1i3hb13192().f[3]++;
    cov_1i3hb13192().s[6]++;
    return cn;
  },
  formUrlQuery: function () {
    /* istanbul ignore next */
    cov_1i3hb13192().f[4]++;
    cov_1i3hb13192().s[7]++;
    return formUrlQuery;
  },
  formatCurrency: function () {
    /* istanbul ignore next */
    cov_1i3hb13192().f[5]++;
    cov_1i3hb13192().s[8]++;
    return formatCurrency;
  },
  formatDateTime: function () {
    /* istanbul ignore next */
    cov_1i3hb13192().f[6]++;
    cov_1i3hb13192().s[9]++;
    return formatDateTime;
  },
  formatError: function () {
    /* istanbul ignore next */
    cov_1i3hb13192().f[7]++;
    cov_1i3hb13192().s[10]++;
    return formatError;
  },
  formatId: function () {
    /* istanbul ignore next */
    cov_1i3hb13192().f[8]++;
    cov_1i3hb13192().s[11]++;
    return formatId;
  },
  formatNumber: function () {
    /* istanbul ignore next */
    cov_1i3hb13192().f[9]++;
    cov_1i3hb13192().s[12]++;
    return formatNumber;
  },
  formatNumberWithDecimal: function () {
    /* istanbul ignore next */
    cov_1i3hb13192().f[10]++;
    cov_1i3hb13192().s[13]++;
    return formatNumberWithDecimal;
  },
  generateId: function () {
    /* istanbul ignore next */
    cov_1i3hb13192().f[11]++;
    cov_1i3hb13192().s[14]++;
    return generateId;
  },
  getFilterUrl: function () {
    /* istanbul ignore next */
    cov_1i3hb13192().f[12]++;
    cov_1i3hb13192().s[15]++;
    return getFilterUrl;
  },
  getMonthName: function () {
    /* istanbul ignore next */
    cov_1i3hb13192().f[13]++;
    cov_1i3hb13192().s[16]++;
    return getMonthName;
  },
  round2: function () {
    /* istanbul ignore next */
    cov_1i3hb13192().f[14]++;
    cov_1i3hb13192().s[17]++;
    return round2;
  },
  timeUntilMidnight: function () {
    /* istanbul ignore next */
    cov_1i3hb13192().f[15]++;
    cov_1i3hb13192().s[18]++;
    return timeUntilMidnight;
  },
  toSlug: function () {
    /* istanbul ignore next */
    cov_1i3hb13192().f[16]++;
    cov_1i3hb13192().s[19]++;
    return toSlug;
  }
});
const _clsx =
/* istanbul ignore next */
(cov_1i3hb13192().s[20]++, require("clsx"));
const _tailwindmerge =
/* istanbul ignore next */
(cov_1i3hb13192().s[21]++, require("tailwind-merge"));
const _querystring =
/* istanbul ignore next */
(/*#__PURE__*/cov_1i3hb13192().s[22]++, _interop_require_default(require("query-string")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1i3hb13192().f[17]++;
  cov_1i3hb13192().s[23]++;
  return /* istanbul ignore next */(cov_1i3hb13192().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1i3hb13192().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1i3hb13192().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1i3hb13192().b[0][1]++, {
    default: obj
  });
}
function formUrlQuery({
  params,
  key,
  value
}) {
  /* istanbul ignore next */
  cov_1i3hb13192().f[18]++;
  const currentUrl =
  /* istanbul ignore next */
  (cov_1i3hb13192().s[24]++, _querystring.default.parse(params));
  /* istanbul ignore next */
  cov_1i3hb13192().s[25]++;
  currentUrl[key] = value;
  /* istanbul ignore next */
  cov_1i3hb13192().s[26]++;
  return _querystring.default.stringifyUrl({
    url: window.location.pathname,
    query: currentUrl
  }, {
    skipNull: true
  });
}
function cn(...inputs) {
  /* istanbul ignore next */
  cov_1i3hb13192().f[19]++;
  cov_1i3hb13192().s[27]++;
  return (0, _tailwindmerge.twMerge)((0, _clsx.clsx)(inputs));
}
/* istanbul ignore next */
cov_1i3hb13192().s[28]++;
const formatNumberWithDecimal = num => {
  /* istanbul ignore next */
  cov_1i3hb13192().f[20]++;
  const [int, decimal] =
  /* istanbul ignore next */
  (cov_1i3hb13192().s[29]++, num.toString().split('.'));
  /* istanbul ignore next */
  cov_1i3hb13192().s[30]++;
  return decimal ?
  /* istanbul ignore next */
  (cov_1i3hb13192().b[2][0]++, `${int}.${decimal.padEnd(2, '0')}`) :
  /* istanbul ignore next */
  (cov_1i3hb13192().b[2][1]++, int);
};
/* istanbul ignore next */
cov_1i3hb13192().s[31]++;
const toSlug = text => {
  /* istanbul ignore next */
  cov_1i3hb13192().f[21]++;
  cov_1i3hb13192().s[32]++;
  return text.toLowerCase().replace(/[^\w\s-]+/g, '').replace(/\s+/g, '-').replace(/^-+|-+$/g, '').replace(/-+/g, '-');
};
const CURRENCY_FORMATTER =
/* istanbul ignore next */
(cov_1i3hb13192().s[33]++, new Intl.NumberFormat('en-US', {
  currency: 'USD',
  style: 'currency',
  minimumFractionDigits: 2
}));
function formatCurrency(amount) {
  /* istanbul ignore next */
  cov_1i3hb13192().f[22]++;
  cov_1i3hb13192().s[34]++;
  return CURRENCY_FORMATTER.format(amount);
}
const NUMBER_FORMATTER =
/* istanbul ignore next */
(cov_1i3hb13192().s[35]++, new Intl.NumberFormat('en-US'));
function formatNumber(number) {
  /* istanbul ignore next */
  cov_1i3hb13192().f[23]++;
  cov_1i3hb13192().s[36]++;
  return NUMBER_FORMATTER.format(number);
}
/* istanbul ignore next */
cov_1i3hb13192().s[37]++;
const round2 = num => {
  /* istanbul ignore next */
  cov_1i3hb13192().f[24]++;
  cov_1i3hb13192().s[38]++;
  return Math.round((num + Number.EPSILON) * 100) / 100;
};
/* istanbul ignore next */
cov_1i3hb13192().s[39]++;
const generateId = () => {
  /* istanbul ignore next */
  cov_1i3hb13192().f[25]++;
  cov_1i3hb13192().s[40]++;
  return Array.from({
    length: 24
  }, () => {
    /* istanbul ignore next */
    cov_1i3hb13192().f[26]++;
    cov_1i3hb13192().s[41]++;
    return Math.floor(Math.random() * 10);
  }).join('');
};
/* istanbul ignore next */
cov_1i3hb13192().s[42]++;
const formatError = error => {
  /* istanbul ignore next */
  cov_1i3hb13192().f[27]++;
  cov_1i3hb13192().s[43]++;
  if (error.name === 'ZodError') {
    /* istanbul ignore next */
    cov_1i3hb13192().b[3][0]++;
    const fieldErrors =
    /* istanbul ignore next */
    (cov_1i3hb13192().s[44]++, Object.keys(error.errors).map(field => {
      /* istanbul ignore next */
      cov_1i3hb13192().f[28]++;
      const errorMessage =
      /* istanbul ignore next */
      (cov_1i3hb13192().s[45]++, error.errors[field].message);
      /* istanbul ignore next */
      cov_1i3hb13192().s[46]++;
      return `${error.errors[field].path}: ${errorMessage}` // field: errorMessage
      ;
    }));
    /* istanbul ignore next */
    cov_1i3hb13192().s[47]++;
    return fieldErrors.join('. ');
  } else {
    /* istanbul ignore next */
    cov_1i3hb13192().b[3][1]++;
    cov_1i3hb13192().s[48]++;
    if (error.name === 'ValidationError') {
      /* istanbul ignore next */
      cov_1i3hb13192().b[4][0]++;
      const fieldErrors =
      /* istanbul ignore next */
      (cov_1i3hb13192().s[49]++, Object.keys(error.errors).map(field => {
        /* istanbul ignore next */
        cov_1i3hb13192().f[29]++;
        const errorMessage =
        /* istanbul ignore next */
        (cov_1i3hb13192().s[50]++, error.errors[field].message);
        /* istanbul ignore next */
        cov_1i3hb13192().s[51]++;
        return errorMessage;
      }));
      /* istanbul ignore next */
      cov_1i3hb13192().s[52]++;
      return fieldErrors.join('. ');
    } else {
      /* istanbul ignore next */
      cov_1i3hb13192().b[4][1]++;
      cov_1i3hb13192().s[53]++;
      if (error.code === 11000) {
        /* istanbul ignore next */
        cov_1i3hb13192().b[5][0]++;
        const duplicateField =
        /* istanbul ignore next */
        (cov_1i3hb13192().s[54]++, Object.keys(error.keyValue)[0]);
        /* istanbul ignore next */
        cov_1i3hb13192().s[55]++;
        return `${duplicateField} already exists`;
      } else {
        /* istanbul ignore next */
        cov_1i3hb13192().b[5][1]++;
        cov_1i3hb13192().s[56]++;
        // return 'Something went wrong. please try again'
        return typeof error.message === 'string' ?
        /* istanbul ignore next */
        (cov_1i3hb13192().b[6][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1i3hb13192().b[6][1]++, JSON.stringify(error.message));
      }
    }
  }
};
function calculateFutureDate(days) {
  /* istanbul ignore next */
  cov_1i3hb13192().f[30]++;
  const currentDate =
  /* istanbul ignore next */
  (cov_1i3hb13192().s[57]++, new Date());
  /* istanbul ignore next */
  cov_1i3hb13192().s[58]++;
  currentDate.setDate(currentDate.getDate() + days);
  /* istanbul ignore next */
  cov_1i3hb13192().s[59]++;
  return currentDate;
}
function getMonthName(yearMonth) {
  /* istanbul ignore next */
  cov_1i3hb13192().f[31]++;
  const [year, month] =
  /* istanbul ignore next */
  (cov_1i3hb13192().s[60]++, yearMonth.split('-').map(Number));
  const date =
  /* istanbul ignore next */
  (cov_1i3hb13192().s[61]++, new Date(year, month - 1));
  const monthName =
  /* istanbul ignore next */
  (cov_1i3hb13192().s[62]++, date.toLocaleString('default', {
    month: 'long'
  }));
  const now =
  /* istanbul ignore next */
  (cov_1i3hb13192().s[63]++, new Date());
  /* istanbul ignore next */
  cov_1i3hb13192().s[64]++;
  if (
  /* istanbul ignore next */
  (cov_1i3hb13192().b[8][0]++, year === now.getFullYear()) &&
  /* istanbul ignore next */
  (cov_1i3hb13192().b[8][1]++, month === now.getMonth() + 1)) {
    /* istanbul ignore next */
    cov_1i3hb13192().b[7][0]++;
    cov_1i3hb13192().s[65]++;
    return `${monthName} Ongoing`;
  } else
  /* istanbul ignore next */
  {
    cov_1i3hb13192().b[7][1]++;
  }
  cov_1i3hb13192().s[66]++;
  return monthName;
}
function calculatePastDate(days) {
  /* istanbul ignore next */
  cov_1i3hb13192().f[32]++;
  const currentDate =
  /* istanbul ignore next */
  (cov_1i3hb13192().s[67]++, new Date());
  /* istanbul ignore next */
  cov_1i3hb13192().s[68]++;
  currentDate.setDate(currentDate.getDate() - days);
  /* istanbul ignore next */
  cov_1i3hb13192().s[69]++;
  return currentDate;
}
function timeUntilMidnight() {
  /* istanbul ignore next */
  cov_1i3hb13192().f[33]++;
  const now =
  /* istanbul ignore next */
  (cov_1i3hb13192().s[70]++, new Date());
  const midnight =
  /* istanbul ignore next */
  (cov_1i3hb13192().s[71]++, new Date());
  /* istanbul ignore next */
  cov_1i3hb13192().s[72]++;
  midnight.setHours(24, 0, 0, 0) // Set to 12:00 AM (next day)
  ;
  const diff =
  /* istanbul ignore next */
  (cov_1i3hb13192().s[73]++, midnight.getTime() - now.getTime()) // Difference in milliseconds
  ;
  const hours =
  /* istanbul ignore next */
  (cov_1i3hb13192().s[74]++, Math.floor(diff / (1000 * 60 * 60)));
  const minutes =
  /* istanbul ignore next */
  (cov_1i3hb13192().s[75]++, Math.floor(diff % (1000 * 60 * 60) / (1000 * 60)));
  /* istanbul ignore next */
  cov_1i3hb13192().s[76]++;
  return {
    hours,
    minutes
  };
}
/* istanbul ignore next */
cov_1i3hb13192().s[77]++;
const formatDateTime = dateString => {
  /* istanbul ignore next */
  cov_1i3hb13192().f[34]++;
  const dateTimeOptions =
  /* istanbul ignore next */
  (cov_1i3hb13192().s[78]++, {
    month: 'short',
    year: 'numeric',
    day: 'numeric',
    hour: 'numeric',
    minute: 'numeric',
    hour12: true
  });
  const dateOptions =
  /* istanbul ignore next */
  (cov_1i3hb13192().s[79]++, {
    // weekday: 'short', // abbreviated weekday name (e.g., 'Mon')
    month: 'short',
    year: 'numeric',
    day: 'numeric'
  });
  const timeOptions =
  /* istanbul ignore next */
  (cov_1i3hb13192().s[80]++, {
    hour: 'numeric',
    minute: 'numeric',
    hour12: true
  });
  const formattedDateTime =
  /* istanbul ignore next */
  (cov_1i3hb13192().s[81]++, new Date(dateString).toLocaleString('en-US', dateTimeOptions));
  const formattedDate =
  /* istanbul ignore next */
  (cov_1i3hb13192().s[82]++, new Date(dateString).toLocaleString('en-US', dateOptions));
  const formattedTime =
  /* istanbul ignore next */
  (cov_1i3hb13192().s[83]++, new Date(dateString).toLocaleString('en-US', timeOptions));
  /* istanbul ignore next */
  cov_1i3hb13192().s[84]++;
  return {
    dateTime: formattedDateTime,
    dateOnly: formattedDate,
    timeOnly: formattedTime
  };
};
function formatId(id) {
  /* istanbul ignore next */
  cov_1i3hb13192().f[35]++;
  cov_1i3hb13192().s[85]++;
  return `..${id.substring(id.length - 6)}`;
}
/* istanbul ignore next */
cov_1i3hb13192().s[86]++;
const getFilterUrl = ({
  params,
  category,
  tag,
  sort,
  price,
  rating,
  page
}) => {
  /* istanbul ignore next */
  cov_1i3hb13192().f[36]++;
  const newParams =
  /* istanbul ignore next */
  (cov_1i3hb13192().s[87]++, {
    ...params
  });
  /* istanbul ignore next */
  cov_1i3hb13192().s[88]++;
  if (category) {
    /* istanbul ignore next */
    cov_1i3hb13192().b[9][0]++;
    cov_1i3hb13192().s[89]++;
    newParams.category = category;
  } else
  /* istanbul ignore next */
  {
    cov_1i3hb13192().b[9][1]++;
  }
  cov_1i3hb13192().s[90]++;
  if (tag) {
    /* istanbul ignore next */
    cov_1i3hb13192().b[10][0]++;
    cov_1i3hb13192().s[91]++;
    newParams.tag = toSlug(tag);
  } else
  /* istanbul ignore next */
  {
    cov_1i3hb13192().b[10][1]++;
  }
  cov_1i3hb13192().s[92]++;
  if (price) {
    /* istanbul ignore next */
    cov_1i3hb13192().b[11][0]++;
    cov_1i3hb13192().s[93]++;
    newParams.price = price;
  } else
  /* istanbul ignore next */
  {
    cov_1i3hb13192().b[11][1]++;
  }
  cov_1i3hb13192().s[94]++;
  if (rating) {
    /* istanbul ignore next */
    cov_1i3hb13192().b[12][0]++;
    cov_1i3hb13192().s[95]++;
    newParams.rating = rating;
  } else
  /* istanbul ignore next */
  {
    cov_1i3hb13192().b[12][1]++;
  }
  cov_1i3hb13192().s[96]++;
  if (page) {
    /* istanbul ignore next */
    cov_1i3hb13192().b[13][0]++;
    cov_1i3hb13192().s[97]++;
    newParams.page = page;
  } else
  /* istanbul ignore next */
  {
    cov_1i3hb13192().b[13][1]++;
  }
  cov_1i3hb13192().s[98]++;
  if (sort) {
    /* istanbul ignore next */
    cov_1i3hb13192().b[14][0]++;
    cov_1i3hb13192().s[99]++;
    newParams.sort = sort;
  } else
  /* istanbul ignore next */
  {
    cov_1i3hb13192().b[14][1]++;
  }
  cov_1i3hb13192().s[100]++;
  return `/search?${new URLSearchParams(newParams).toString()}`;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,