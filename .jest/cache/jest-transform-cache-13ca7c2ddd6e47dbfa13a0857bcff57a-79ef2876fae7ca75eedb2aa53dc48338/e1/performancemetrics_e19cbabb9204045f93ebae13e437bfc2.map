{"version":3,"names":["cov_2y3qql9pa","actualCoverage","s","PerformanceMetrics","f","_react","useEffect","reportWebVitals","metric","console","log","cls","fid","lcp","b","window","PerformanceObserver","entryList","entry","getEntries","entryType","value","name","observe","type","buffered","processingStart","startTime","error"],"sources":["/home/mark/Downloads/nextjs-amazona-main/components/performance-metrics.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect } from 'react'\n\ninterface PerformanceMetric {\n  name: string\n  value: number\n  id?: string\n  startTime?: number\n  processingStart?: number\n  entryType?: string\n}\n\ninterface LayoutShift extends PerformanceEntry {\n  value: number\n}\n\ninterface PerformanceEventTiming extends PerformanceEntry {\n  processingStart: number\n}\n\nexport default function PerformanceMetrics() {\n  useEffect(() => {\n    const reportWebVitals = (metric: PerformanceMetric) => {\n      console.log(metric)\n    }\n\n    let cls = 0\n    let fid = 0\n    let lcp = 0\n\n    if (typeof window !== 'undefined' && 'PerformanceObserver' in window) {\n      try {\n        new PerformanceObserver((entryList) => {\n          for (const entry of entryList.getEntries()) {\n            if (entry.entryType === 'layout-shift') {\n              cls += (entry as LayoutShift).value\n            }\n          }\n          reportWebVitals({ name: 'CLS', value: cls })\n        }).observe({ type: 'layout-shift', buffered: true })\n\n        new PerformanceObserver((entryList) => {\n          for (const entry of entryList.getEntries()) {\n            if (entry.entryType === 'first-input') {\n              fid =\n                (entry as PerformanceEventTiming).processingStart -\n                entry.startTime\n            }\n          }\n          reportWebVitals({ name: 'FID', value: fid })\n        }).observe({ type: 'first-input', buffered: true })\n\n        new PerformanceObserver((entryList) => {\n          for (const entry of entryList.getEntries()) {\n            if (entry.entryType === 'largest-contentful-paint') {\n              lcp = entry.startTime\n            }\n          }\n          reportWebVitals({ name: 'LCP', value: lcp })\n        }).observe({ type: 'largest-contentful-paint', buffered: true })\n      } catch (error) {\n        console.error('Performance monitoring error:', error)\n      }\n    }\n\n    // Cleanup function\n    return () => {\n      // Clean up observers if needed\n    }\n  }, [])\n\n  return null\n}\n"],"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","ignoreList":[]}