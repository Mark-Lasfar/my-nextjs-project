c1e695266310a82c2c0493f965a6b64d
"use strict";

/* istanbul ignore next */
function cov_13fi2whkxp() {
  var path = "/home/mark/Downloads/nextjs-amazona-main/lib/db/models/setting.model.ts";
  var hash = "b8e171f5aa92342b7fb8ee522b9198144d474ffc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/mark/Downloads/nextjs-amazona-main/lib/db/models/setting.model.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "3": {
        start: {
          line: 11,
          column: 18
        },
        end: {
          line: 11,
          column: 37
        }
      },
      "4": {
        start: {
          line: 12,
          column: 22
        },
        end: {
          line: 193,
          column: 2
        }
      },
      "5": {
        start: {
          line: 112,
          column: 30
        },
        end: {
          line: 112,
          column: 65
        }
      },
      "6": {
        start: {
          line: 129,
          column: 30
        },
        end: {
          line: 129,
          column: 65
        }
      },
      "7": {
        start: {
          line: 142,
          column: 30
        },
        end: {
          line: 142,
          column: 65
        }
      },
      "8": {
        start: {
          line: 194,
          column: 16
        },
        end: {
          line: 194,
          column: 90
        }
      },
      "9": {
        start: {
          line: 195,
          column: 17
        },
        end: {
          line: 195,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 112,
            column: 21
          },
          end: {
            line: 112,
            column: 22
          }
        },
        loc: {
          start: {
            line: 112,
            column: 30
          },
          end: {
            line: 112,
            column: 65
          }
        },
        line: 112
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 129,
            column: 21
          },
          end: {
            line: 129,
            column: 22
          }
        },
        loc: {
          start: {
            line: 129,
            column: 30
          },
          end: {
            line: 129,
            column: 65
          }
        },
        line: 129
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 142,
            column: 21
          },
          end: {
            line: 142,
            column: 22
          }
        },
        loc: {
          start: {
            line: 142,
            column: 30
          },
          end: {
            line: 142,
            column: 65
          }
        },
        line: 142
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 194,
            column: 16
          },
          end: {
            line: 194,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 194,
            column: 16
          },
          end: {
            line: 194,
            column: 40
          }
        }, {
          start: {
            line: 194,
            column: 44
          },
          end: {
            line: 194,
            column: 90
          }
        }],
        line: 194
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/mark/Downloads/nextjs-amazona-main/lib/db/models/setting.model.ts"],
      sourcesContent: ["import { ISettingInput } from '@/types'\nimport { Document, Model, model, models, Schema } from 'mongoose'\n\nexport interface ISetting extends Document, ISettingInput {\n  _id: string\n  createdAt: Date\n  updatedAt: Date\n}\n\nconst settingSchema = new Schema<ISetting>(\n  {\n    common: {\n      pageSize: { type: Number, required: true, default: 9 },\n      isMaintenanceMode: { type: Boolean, required: true, default: false },\n      freeShippingMinPrice: { type: Number, required: true, default: 0 },\n      defaultTheme: { type: String, required: true, default: 'light' },\n      defaultColor: { type: String, required: true, default: 'gold' },\n    },\n    site: {\n      name: { type: String, required: true },\n      url: { type: String, required: true },\n      logo: { type: String, required: true },\n      slogan: { type: String, required: true },\n      description: { type: String, required: true },\n      keywords: { type: String, required: true },\n      email: { type: String, required: true },\n      phone: { type: String, required: true },\n      author: { type: String, required: true },\n      copyright: { type: String, required: true },\n      address: { type: String, required: true },\n    },\n    carousels: [\n      {\n        title: {\n          type: String,\n          required: true,\n        },\n        url: {\n          type: String,\n          required: true,\n          unique: true,\n        },\n        image: {\n          type: String,\n          required: true,\n        },\n        buttonCaption: {\n          type: String,\n          required: true,\n        },\n      },\n    ],\n    availableLanguages: [\n      {\n        name: {\n          type: String,\n          required: true,\n          set: (value: string) => Buffer.from(value).toString('utf8'),\n        },\n        code: { type: String, required: true },\n      },\n    ],\n    defaultLanguage: { type: String, required: true },\n    availableCurrencies: [\n      {\n        name: {\n          type: String,\n          required: true,\n          set: (value: string) => Buffer.from(value).toString('utf8'),\n        },\n        code: { type: String, required: true },\n        convertRate: { type: Number, required: true },\n        symbol: {\n          type: String,\n          required: true,\n          set: (value: string) => Buffer.from(value).toString('utf8'),\n        },\n      },\n    ],\n    defaultCurrency: { type: String, required: true },\n    availablePaymentMethods: [\n      {\n        name: { type: String, required: true },\n        commission: { type: Number, required: true, default: 0 },\n      },\n    ],\n    defaultPaymentMethod: { type: String, required: true },\n    availableDeliveryDates: [\n      {\n        name: { type: String, required: true },\n        daysToDeliver: { type: Number, required: true },\n        shippingPrice: { type: Number, required: true },\n        freeShippingMinPrice: { type: Number, required: true },\n      },\n    ],\n    defaultDeliveryDate: { type: String, required: true },\n  },\n  {\n    timestamps: true,\n  }\n)\n\nconst Setting =\n  (models.Setting as Model<ISetting>) ||\n  model<ISetting>('Setting', settingSchema)\n\nexport default Setting\n"],
      names: ["settingSchema", "Schema", "common", "pageSize", "type", "Number", "required", "default", "isMaintenanceMode", "Boolean", "freeShippingMinPrice", "defaultTheme", "String", "defaultColor", "site", "name", "url", "logo", "slogan", "description", "keywords", "email", "phone", "author", "copyright", "address", "carousels", "title", "unique", "image", "buttonCaption", "availableLanguages", "set", "value", "Buffer", "from", "toString", "code", "defaultLanguage", "availableCurrencies", "convertRate", "symbol", "defaultCurrency", "availablePaymentMethods", "commission", "defaultPaymentMethod", "availableDeliveryDates", "daysToDeliver", "shippingPrice", "defaultDeliveryDate", "timestamps", "Setting", "models", "model"],
      mappings: ";;;;+BA0GA;;;eAAA;;;0BAzGuD;AAQvD,MAAMA,gBAAgB,IAAIC,gBAAM,CAC9B;IACEC,QAAQ;QACNC,UAAU;YAAEC,MAAMC;YAAQC,UAAU;YAAMC,SAAS;QAAE;QACrDC,mBAAmB;YAAEJ,MAAMK;YAASH,UAAU;YAAMC,SAAS;QAAM;QACnEG,sBAAsB;YAAEN,MAAMC;YAAQC,UAAU;YAAMC,SAAS;QAAE;QACjEI,cAAc;YAAEP,MAAMQ;YAAQN,UAAU;YAAMC,SAAS;QAAQ;QAC/DM,cAAc;YAAET,MAAMQ;YAAQN,UAAU;YAAMC,SAAS;QAAO;IAChE;IACAO,MAAM;QACJC,MAAM;YAAEX,MAAMQ;YAAQN,UAAU;QAAK;QACrCU,KAAK;YAAEZ,MAAMQ;YAAQN,UAAU;QAAK;QACpCW,MAAM;YAAEb,MAAMQ;YAAQN,UAAU;QAAK;QACrCY,QAAQ;YAAEd,MAAMQ;YAAQN,UAAU;QAAK;QACvCa,aAAa;YAAEf,MAAMQ;YAAQN,UAAU;QAAK;QAC5Cc,UAAU;YAAEhB,MAAMQ;YAAQN,UAAU;QAAK;QACzCe,OAAO;YAAEjB,MAAMQ;YAAQN,UAAU;QAAK;QACtCgB,OAAO;YAAElB,MAAMQ;YAAQN,UAAU;QAAK;QACtCiB,QAAQ;YAAEnB,MAAMQ;YAAQN,UAAU;QAAK;QACvCkB,WAAW;YAAEpB,MAAMQ;YAAQN,UAAU;QAAK;QAC1CmB,SAAS;YAAErB,MAAMQ;YAAQN,UAAU;QAAK;IAC1C;IACAoB,WAAW;QACT;YACEC,OAAO;gBACLvB,MAAMQ;gBACNN,UAAU;YACZ;YACAU,KAAK;gBACHZ,MAAMQ;gBACNN,UAAU;gBACVsB,QAAQ;YACV;YACAC,OAAO;gBACLzB,MAAMQ;gBACNN,UAAU;YACZ;YACAwB,eAAe;gBACb1B,MAAMQ;gBACNN,UAAU;YACZ;QACF;KACD;IACDyB,oBAAoB;QAClB;YACEhB,MAAM;gBACJX,MAAMQ;gBACNN,UAAU;gBACV0B,KAAK,CAACC,QAAkBC,OAAOC,IAAI,CAACF,OAAOG,QAAQ,CAAC;YACtD;YACAC,MAAM;gBAAEjC,MAAMQ;gBAAQN,UAAU;YAAK;QACvC;KACD;IACDgC,iBAAiB;QAAElC,MAAMQ;QAAQN,UAAU;IAAK;IAChDiC,qBAAqB;QACnB;YACExB,MAAM;gBACJX,MAAMQ;gBACNN,UAAU;gBACV0B,KAAK,CAACC,QAAkBC,OAAOC,IAAI,CAACF,OAAOG,QAAQ,CAAC;YACtD;YACAC,MAAM;gBAAEjC,MAAMQ;gBAAQN,UAAU;YAAK;YACrCkC,aAAa;gBAAEpC,MAAMC;gBAAQC,UAAU;YAAK;YAC5CmC,QAAQ;gBACNrC,MAAMQ;gBACNN,UAAU;gBACV0B,KAAK,CAACC,QAAkBC,OAAOC,IAAI,CAACF,OAAOG,QAAQ,CAAC;YACtD;QACF;KACD;IACDM,iBAAiB;QAAEtC,MAAMQ;QAAQN,UAAU;IAAK;IAChDqC,yBAAyB;QACvB;YACE5B,MAAM;gBAAEX,MAAMQ;gBAAQN,UAAU;YAAK;YACrCsC,YAAY;gBAAExC,MAAMC;gBAAQC,UAAU;gBAAMC,SAAS;YAAE;QACzD;KACD;IACDsC,sBAAsB;QAAEzC,MAAMQ;QAAQN,UAAU;IAAK;IACrDwC,wBAAwB;QACtB;YACE/B,MAAM;gBAAEX,MAAMQ;gBAAQN,UAAU;YAAK;YACrCyC,eAAe;gBAAE3C,MAAMC;gBAAQC,UAAU;YAAK;YAC9C0C,eAAe;gBAAE5C,MAAMC;gBAAQC,UAAU;YAAK;YAC9CI,sBAAsB;gBAAEN,MAAMC;gBAAQC,UAAU;YAAK;QACvD;KACD;IACD2C,qBAAqB;QAAE7C,MAAMQ;QAAQN,UAAU;IAAK;AACtD,GACA;IACE4C,YAAY;AACd;AAGF,MAAMC,UACJ,AAACC,gBAAM,CAACD,OAAO,IACfE,IAAAA,eAAK,EAAW,WAAWrD;MAE7B,WAAemD"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b8e171f5aa92342b7fb8ee522b9198144d474ffc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_13fi2whkxp = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_13fi2whkxp();
cov_13fi2whkxp().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_13fi2whkxp().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_13fi2whkxp().f[0]++;
    cov_13fi2whkxp().s[2]++;
    return _default;
  }
});
const _mongoose =
/* istanbul ignore next */
(cov_13fi2whkxp().s[3]++, require("mongoose"));
const settingSchema =
/* istanbul ignore next */
(cov_13fi2whkxp().s[4]++, new _mongoose.Schema({
  common: {
    pageSize: {
      type: Number,
      required: true,
      default: 9
    },
    isMaintenanceMode: {
      type: Boolean,
      required: true,
      default: false
    },
    freeShippingMinPrice: {
      type: Number,
      required: true,
      default: 0
    },
    defaultTheme: {
      type: String,
      required: true,
      default: 'light'
    },
    defaultColor: {
      type: String,
      required: true,
      default: 'gold'
    }
  },
  site: {
    name: {
      type: String,
      required: true
    },
    url: {
      type: String,
      required: true
    },
    logo: {
      type: String,
      required: true
    },
    slogan: {
      type: String,
      required: true
    },
    description: {
      type: String,
      required: true
    },
    keywords: {
      type: String,
      required: true
    },
    email: {
      type: String,
      required: true
    },
    phone: {
      type: String,
      required: true
    },
    author: {
      type: String,
      required: true
    },
    copyright: {
      type: String,
      required: true
    },
    address: {
      type: String,
      required: true
    }
  },
  carousels: [{
    title: {
      type: String,
      required: true
    },
    url: {
      type: String,
      required: true,
      unique: true
    },
    image: {
      type: String,
      required: true
    },
    buttonCaption: {
      type: String,
      required: true
    }
  }],
  availableLanguages: [{
    name: {
      type: String,
      required: true,
      set: value => {
        /* istanbul ignore next */
        cov_13fi2whkxp().f[1]++;
        cov_13fi2whkxp().s[5]++;
        return Buffer.from(value).toString('utf8');
      }
    },
    code: {
      type: String,
      required: true
    }
  }],
  defaultLanguage: {
    type: String,
    required: true
  },
  availableCurrencies: [{
    name: {
      type: String,
      required: true,
      set: value => {
        /* istanbul ignore next */
        cov_13fi2whkxp().f[2]++;
        cov_13fi2whkxp().s[6]++;
        return Buffer.from(value).toString('utf8');
      }
    },
    code: {
      type: String,
      required: true
    },
    convertRate: {
      type: Number,
      required: true
    },
    symbol: {
      type: String,
      required: true,
      set: value => {
        /* istanbul ignore next */
        cov_13fi2whkxp().f[3]++;
        cov_13fi2whkxp().s[7]++;
        return Buffer.from(value).toString('utf8');
      }
    }
  }],
  defaultCurrency: {
    type: String,
    required: true
  },
  availablePaymentMethods: [{
    name: {
      type: String,
      required: true
    },
    commission: {
      type: Number,
      required: true,
      default: 0
    }
  }],
  defaultPaymentMethod: {
    type: String,
    required: true
  },
  availableDeliveryDates: [{
    name: {
      type: String,
      required: true
    },
    daysToDeliver: {
      type: Number,
      required: true
    },
    shippingPrice: {
      type: Number,
      required: true
    },
    freeShippingMinPrice: {
      type: Number,
      required: true
    }
  }],
  defaultDeliveryDate: {
    type: String,
    required: true
  }
}, {
  timestamps: true
}));
const Setting =
/* istanbul ignore next */
(cov_13fi2whkxp().s[8]++,
/* istanbul ignore next */
(cov_13fi2whkxp().b[0][0]++, _mongoose.models.Setting) ||
/* istanbul ignore next */
(cov_13fi2whkxp().b[0][1]++, (0, _mongoose.model)('Setting', settingSchema)));
const _default =
/* istanbul ignore next */
(cov_13fi2whkxp().s[9]++, Setting);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,