{"version":3,"names":["GET","cov_xgsxswaur","f","s","site","url","_settingactions","getSetting","baseUrl","b","startsWith","replace","nowIso","Date","toISOString","imagesDir","_path","default","join","process","cwd","mediaDir","getImagesFromDir","dir","urlPrefix","_fs","existsSync","readdirSync","filter","test","map","loc","updatedAt","images","xml","img","_server","NextResponse","headers","error","console","status"],"sources":["/home/mark/Downloads/nextjs-amazona-main/app/sitemap-images.xml/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\nimport { getSetting } from '@/lib/actions/setting.actions'\nimport fs from 'fs'\nimport path from 'path'\n\nexport async function GET() {\n  try {\n    const { site: { url } } = await getSetting()\n    // Only allow the official domain, fallback to the correct one\n    const baseUrl = (url && url.startsWith('https://hager-zon.vercel.app'))\n      ? url.replace(/\\/+$/, '')\n      : 'https://hager-zon.vercel.app'\n    const nowIso = new Date().toISOString()\n\n    const imagesDir = path.join(process.cwd(), 'public', 'images')\n    const mediaDir = path.join(process.cwd(), 'public', 'media')\n\n    function getImagesFromDir(dir: string, urlPrefix: string): { loc: string; updatedAt: string }[] {\n      if (!fs.existsSync(dir)) return []\n      return fs\n        .readdirSync(dir)\n        .filter((f) =>\n          /\\.(jpe?g|png|gif|webp|svg|bmp|ico|tiff?)$/i.test(f)\n        )\n        .map((f) => ({\n          loc: `${baseUrl}/${urlPrefix}/${f}`,\n          updatedAt: nowIso, \n        }))\n    }\n\n    const images = [\n      ...getImagesFromDir(imagesDir, 'images'),\n      ...getImagesFromDir(mediaDir, 'media'),\n    ]\n\n    const xml = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">\n  ${images\n    .map(\n      (img) => `\n    <url>\n      <loc>${img.loc}</loc>\n      <lastmod>${img.updatedAt}</lastmod>\n      <changefreq>monthly</changefreq>\n      <priority>0.6</priority>\n    </url>`\n    )\n    .join('\\n')}\n</urlset>`\n\n    return new NextResponse(xml, {\n      headers: {\n        'Content-Type': 'application/xml'\n      }\n    })\n  } catch (error) {\n    console.error('Error generating images sitemap:', error)\n    return new NextResponse('Error generating sitemap', { status: 500 })\n  }\n}   "],"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","ignoreList":[]}