{"version":3,"names":["CartPage","cov_v5pmeq6h1","f","cart","items","itemsPrice","updateItem","removeItem","s","_usecartstore","default","router","_navigation","useRouter","setting","site","common","freeShippingMinPrice","_usesettingstore","t","_nextintl","useTranslations","_jsxruntime","jsxs","jsx","className","length","b","_card","Card","CardHeader","CardContent","rich","name","home","chunks","_link","href","Fragment","map","item","slug","_image","src","image","alt","fill","sizes","style","objectFit","color","size","_select","Select","value","quantity","toString","onValueChange","Number","SelectTrigger","SelectValue","SelectContent","position","Array","from","countInStock","_","i","SelectItem","_button","Button","variant","onClick","_productprice","price","plain","clientId","reduce","acc","push","_browsinghistorylist"],"sources":["/home/mark/Downloads/nextjs-amazona-main/app/[locale]/(root)/cart/page.tsx"],"sourcesContent":["'use client'\nimport BrowsingHistoryList from '@/components/shared/browsing-history-list'\nimport ProductPrice from '@/components/shared/product/product-price'\nimport { Button } from '@/components/ui/button'\nimport { Card, CardContent, CardHeader } from '@/components/ui/card'\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select'\nimport useCartStore from '@/hooks/use-cart-store'\nimport useSettingStore from '@/hooks/use-setting-store'\nimport { useTranslations } from 'next-intl'\nimport Image from 'next/image'\nimport Link from 'next/link'\nimport { useRouter } from 'next/navigation'\nimport React from 'react'\n\nexport default function CartPage() {\n  const {\n    cart: { items, itemsPrice },\n    updateItem,\n    removeItem,\n  } = useCartStore()\n  const router = useRouter()\n  const {\n    setting: {\n      site,\n      common: { freeShippingMinPrice },\n    },\n  } = useSettingStore()\n\n  const t = useTranslations()\n  return (\n    <div>\n      <div className=\"grid grid-cols-1 md:grid-cols-4  md:gap-4\">\n        {items.length === 0 ? (\n          <Card className=\"col-span-4 rounded-none\">\n            <CardHeader className=\"text-3xl  \">\n              {t('Cart.Your Shopping Cart is empty')}\n            </CardHeader>\n            <CardContent>\n              {t.rich('Cart.Continue shopping on', {\n                name: site.name,\n                home: (chunks) => <Link href=\"/\">{chunks}</Link>,\n              })}\n            </CardContent>\n          </Card>\n        ) : (\n          <>\n            <div className=\"col-span-3\">\n              <Card className=\"rounded-none\">\n                <CardHeader className=\"text-3xl pb-0\">\n                  {t('Cart.Shopping Cart')}\n                </CardHeader>\n                <CardContent className=\"p-4\">\n                  <div className=\"flex justify-end border-b mb-4\">\n                    {t('Cart.Price')}\n                  </div>\n\n                  {items.map((item) => (\n                    <div\n                      key={item.clientId}\n                      className=\"flex flex-col md:flex-row justify-between py-4 border-b gap-4\"\n                    >\n                      <Link href={`/product/${item.slug}`}>\n                        <div className=\"relative w-40 h-40\">\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fill\n                            sizes=\"20vw\"\n                            style={{\n                              objectFit: 'contain',\n                            }}\n                          />\n                        </div>\n                      </Link>\n\n                      <div className=\"flex-1 space-y-4\">\n                        <Link\n                          href={`/product/${item.slug}`}\n                          className=\"text-lg hover:no-underline  \"\n                        >\n                          {item.name}\n                        </Link>\n                        <div>\n                          <p className=\"text-sm\">\n                            <span className=\"font-bold\">\n                              {' '}\n                              {t('Cart.Color')}:{' '}\n                            </span>{' '}\n                            {item.color}\n                          </p>\n                          <p className=\"text-sm\">\n                            <span className=\"font-bold\">\n                              {' '}\n                              {t('Cart.Size')}:{' '}\n                            </span>{' '}\n                            {item.size}\n                          </p>\n                        </div>\n                        <div className=\"flex gap-2 items-center\">\n                          <Select\n                            value={item.quantity.toString()}\n                            onValueChange={(value) =>\n                              updateItem(item, Number(value))\n                            }\n                          >\n                            <SelectTrigger className=\"w-auto\">\n                              <SelectValue>\n                                {t('Cart.Quantity')}: {item.quantity}\n                              </SelectValue>\n                            </SelectTrigger>\n                            <SelectContent position=\"popper\">\n                              {Array.from({\n                                length: item.countInStock,\n                              }).map((_, i) => (\n                                <SelectItem key={i + 1} value={`${i + 1}`}>\n                                  {i + 1}\n                                </SelectItem>\n                              ))}\n                            </SelectContent>\n                          </Select>\n                          <Button\n                            variant={'outline'}\n                            onClick={() => removeItem(item)}\n                          >\n                            {t('Cart.Delete')}\n                          </Button>\n                        </div>\n                      </div>\n                      <div>\n                        <p className=\"text-right\">\n                          {item.quantity > 1 && (\n                            <>\n                              {item.quantity} x\n                              <ProductPrice price={item.price} plain />\n                              <br />\n                            </>\n                          )}\n\n                          <span className=\"font-bold text-lg\">\n                            <ProductPrice\n                              price={item.price * item.quantity}\n                              plain\n                            />\n                          </span>\n                        </p>\n                      </div>\n                    </div>\n                  ))}\n\n                  <div className=\"flex justify-end text-lg my-2\">\n                    {t('Cart.Subtotal')} (\n                    {items.reduce((acc, item) => acc + item.quantity, 0)}{' '}\n                    {t('Cart.Items')}):{' '}\n                    <span className=\"font-bold ml-1\">\n                      <ProductPrice price={itemsPrice} plain />\n                    </span>{' '}\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n            <div>\n              <Card className=\"rounded-none\">\n                <CardContent className=\"py-4 space-y-4\">\n                  {itemsPrice < freeShippingMinPrice ? (\n                    <div className=\"flex-1\">\n                      {t('Cart.Add')}{' '}\n                      <span className=\"text-green-700\">\n                        <ProductPrice\n                          price={freeShippingMinPrice - itemsPrice}\n                          plain\n                        />\n                      </span>{' '}\n                      {t(\n                        'Cart.of eligible items to your order to qualify for FREE Shipping'\n                      )}\n                    </div>\n                  ) : (\n                    <div className=\"flex-1\">\n                      <span className=\"text-green-700\">\n                        {t('Cart.Your order qualifies for FREE Shipping')}\n                      </span>{' '}\n                      {t('Cart.Choose this option at checkout')}\n                    </div>\n                  )}\n                  <div className=\"text-lg\">\n                    {t('Cart.Subtotal')} (\n                    {items.reduce((acc, item) => acc + item.quantity, 0)}{' '}\n                    {t('Cart.items')}):{' '}\n                    <span className=\"font-bold\">\n                      <ProductPrice price={itemsPrice} plain />\n                    </span>{' '}\n                  </div>\n                  <Button\n                    onClick={() => router.push('/checkout')}\n                    className=\"rounded-full w-full\"\n                  >\n                    {t('Cart.Proceed to Checkout')}\n                  </Button>\n                </CardContent>\n              </Card>\n            </div>\n          </>\n        )}\n      </div>\n      <BrowsingHistoryList className=\"mt-10\" />\n    </div>\n  )\n}\n"],"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","ignoreList":[]}