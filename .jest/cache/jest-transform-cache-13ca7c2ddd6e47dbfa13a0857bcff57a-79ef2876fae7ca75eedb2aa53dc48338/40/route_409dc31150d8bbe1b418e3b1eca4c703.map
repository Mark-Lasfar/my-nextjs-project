{"version":3,"names":["cov_u96tpownv","actualCoverage","s","GET","f","site","url","_settingactions","getSetting","baseUrl","b","nowIso","Date","toISOString","blogs","slug","updatedAt","xml","map","blog","join","_server","NextResponse","headers","error","console","status"],"sources":["/home/mark/Downloads/nextjs-amazona-main/app/sitemap-blog.xml/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\nimport { getSetting } from '@/lib/actions/setting.actions'\n\nexport async function GET() {\n  try {\n    const { site: { url } } = await getSetting()\n    const baseUrl = url || 'https://hager-zon.vercel.app'\n    const nowIso = new Date().toISOString()\n\n    // Example blog entries.\n    const blogs = [\n      {\n        slug: 'first-blog-post',\n        updatedAt: nowIso,\n      },\n      {\n        slug: 'another-blog-post',\n        updatedAt: nowIso,\n      }\n    ]\n\n    const xml = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">\n  ${blogs\n    .map(\n      (blog) => `\n    <url>\n      <loc>${baseUrl}/blog/${blog.slug}</loc>\n      <lastmod>${new Date(blog.updatedAt).toISOString()}</lastmod>\n      <changefreq>weekly</changefreq>\n      <priority>0.7</priority>\n    </url>`\n    )\n    .join('\\n')}\n</urlset>`\n\n    return new NextResponse(xml, {\n      headers: {\n        'Content-Type': 'application/xml'\n      }\n    })\n  } catch (error) {\n    console.error('Error generating blog sitemap:', error)\n    return new NextResponse('Error generating sitemap', { status: 500 })\n  }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAMI;IAAAA,aAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,aAAA;AAAAA,aAAA,GAAAE,CAAA;;;;;;+BAHkB;;;;;;WAAAC,GAAA;;;;;iCAHO;;;iCACF;AAEpB,eAAeA,IAAA;EAAA;EAAAH,aAAA,GAAAI,CAAA;EAAAJ,aAAA,GAAAE,CAAA;EACpB,IAAI;IACF,MAAM;MAAEG,IAAA,EAAM;QAAEC;MAAG;IAAE,CAAE;IAAA;IAAA,CAAAN,aAAA,GAAAE,CAAA,OAAG,MAAM,IAAAK,eAAA,CAAAC,UAAU;IAC1C,MAAMC,OAAA;IAAA;IAAA,CAAAT,aAAA,GAAAE,CAAA;IAAU;IAAA,CAAAF,aAAA,GAAAU,CAAA,UAAAJ,GAAA;IAAA;IAAA,CAAAN,aAAA,GAAAU,CAAA,UAAO;IACvB,MAAMC,MAAA;IAAA;IAAA,CAAAX,aAAA,GAAAE,CAAA,OAAS,IAAIU,IAAA,GAAOC,WAAW;IAErC;IACA,MAAMC,KAAA;IAAA;IAAA,CAAAd,aAAA,GAAAE,CAAA,OAAQ,CACZ;MACEa,IAAA,EAAM;MACNC,SAAA,EAAWL;IACb,GACA;MACEI,IAAA,EAAM;MACNC,SAAA,EAAWL;IACb,EACD;IAED,MAAMM,GAAA;IAAA;IAAA,CAAAjB,aAAA,GAAAE,CAAA,QAAM;;IAEZY,KAAA,CACCI,GAAG,CACDC,IAAA,IAAS;MAAA;MAAAnB,aAAA,GAAAI,CAAA;MAAAJ,aAAA,GAAAE,CAAA;MAAA;;aAEHO,OAAA,SAAgBU,IAAA,CAAKJ,IAAI;iBACrB,IAAIH,IAAA,CAAKO,IAAA,CAAKH,SAAS,EAAEH,WAAW;;;WAG1C;IAAD,CAAC,EAENO,IAAI,CAAC;UACA;IAAA;IAAApB,aAAA,GAAAE,CAAA;IAEN,OAAO,IAAImB,OAAA,CAAAC,YAAY,CAACL,GAAA,EAAK;MAC3BM,OAAA,EAAS;QACP,gBAAgB;MAClB;IACF;EACF,EAAE,OAAOC,KAAA,EAAO;IAAA;IAAAxB,aAAA,GAAAE,CAAA;IACduB,OAAA,CAAQD,KAAK,CAAC,kCAAkCA,KAAA;IAAA;IAAAxB,aAAA,GAAAE,CAAA;IAChD,OAAO,IAAImB,OAAA,CAAAC,YAAY,CAAC,4BAA4B;MAAEI,MAAA,EAAQ;IAAI;EACpE;AACF","ignoreList":[]}