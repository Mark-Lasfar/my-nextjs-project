{"version":3,"sources":["/home/mark/Downloads/nextjs-amazona-main/__tests__/components/settings/currency-form.test.tsx"],"sourcesContent":["import { render, screen, fireEvent } from '@testing-library/react'\nimport CurrencyForm from '@/app/[locale]/admin/settings/currency-form'\nimport { useForm } from 'react-hook-form'\nimport { ISettingInput } from '@/types'\n\n// Mock useFieldArray\njest.mock('react-hook-form', () => ({\n  ...jest.requireActual('react-hook-form'),\n  useFieldArray: () => ({\n    fields: [\n      {\n        name: 'US Dollar',\n        code: 'USD',\n        symbol: '$',\n        convertRate: 1,\n      },\n    ],\n    append: jest.fn(),\n    remove: jest.fn(),\n  }),\n}))\n\n// Wrap component with form provider\nconst CurrencyFormWithProvider = ({ defaultValues = {} }) => {\n  const form = useForm<ISettingInput>({\n    defaultValues: defaultValues || {\n      availableCurrencies: [\n        {\n          name: 'US Dollar',\n          code: 'USD',\n          symbol: '$',\n          convertRate: 1,\n        },\n      ],\n      defaultCurrency: 'USD',\n    },\n  })\n  return <CurrencyForm form={form} id=\"currency-form\" />\n}\n\ndescribe('CurrencyForm', () => {\n  it('renders currency form fields', () => {\n    const defaultValues = {\n      availableCurrencies: [\n        {\n          name: 'US Dollar',\n          code: 'USD',\n          symbol: '$',\n          convertRate: 1,\n        },\n      ],\n      defaultCurrency: 'USD',\n    }\n\n    render(<CurrencyFormWithProvider defaultValues={defaultValues} />)\n\n    // Check if form fields are rendered\n    expect(screen.getByPlaceholderText('Currency Name')).toBeInTheDocument()\n    expect(screen.getByPlaceholderText('USD')).toBeInTheDocument()\n    expect(screen.getByPlaceholderText('$')).toBeInTheDocument()\n    expect(screen.getByPlaceholderText('1.0000')).toBeInTheDocument()\n  })\n\n  it('allows adding new currency', () => {\n    render(<CurrencyFormWithProvider />)\n    \n    const addButton = screen.getByText('Add New Currency')\n    fireEvent.click(addButton)\n\n    // Check if new fields are added\n    const currencyNameInputs = screen.getAllByPlaceholderText('Currency Name')\n    expect(currencyNameInputs).toHaveLength(2)\n  })\n\n  it('prevents removing last currency', () => {\n    render(<CurrencyFormWithProvider />)\n    \n    const removeButton = screen.getByTitle('Cannot remove last currency')\n    expect(removeButton).toBeDisabled()\n  })\n\n  it('allows selecting default currency', () => {\n    const defaultValues = {\n      availableCurrencies: [\n        {\n          name: 'US Dollar',\n          code: 'USD',\n          symbol: '$',\n          convertRate: 1,\n        },\n      ],\n      defaultCurrency: '',\n    }\n\n    render(<CurrencyFormWithProvider defaultValues={defaultValues} />)\n    \n    const select = screen.getByRole('combobox', { name: /default currency/i })\n    expect(select).toBeInTheDocument()\n  })\n})\n\n// Current Date and Time (UTC): 2025-04-20 22:25:42\n// Current User's Login: ibrahim-lasfar"],"names":["jest","mock","requireActual","useFieldArray","fields","name","code","symbol","convertRate","append","fn","remove","CurrencyFormWithProvider","defaultValues","form","useForm","availableCurrencies","defaultCurrency","CurrencyForm","id","describe","it","render","expect","screen","getByPlaceholderText","toBeInTheDocument","addButton","getByText","fireEvent","click","currencyNameInputs","getAllByPlaceholderText","toHaveLength","removeButton","getByTitle","toBeDisabled","select","getByRole"],"mappings":";AAKA,qBAAqB;AACrBA,KAAKC,IAAI,CAAC,mBAAmB,IAAO,CAAA;QAClC,GAAGD,KAAKE,aAAa,CAAC,kBAAkB;QACxCC,eAAe,IAAO,CAAA;gBACpBC,QAAQ;oBACN;wBACEC,MAAM;wBACNC,MAAM;wBACNC,QAAQ;wBACRC,aAAa;oBACf;iBACD;gBACDC,QAAQT,KAAKU,EAAE;gBACfC,QAAQX,KAAKU,EAAE;YACjB,CAAA;IACF,CAAA;;;;;uBApB0C;qEACjB;+BACD;;;;;;AAoBxB,oCAAoC;AACpC,MAAME,2BAA2B,CAAC,EAAEC,gBAAgB,CAAC,CAAC,EAAE;IACtD,MAAMC,OAAOC,IAAAA,sBAAO,EAAgB;QAClCF,eAAeA,iBAAiB;YAC9BG,qBAAqB;gBACnB;oBACEX,MAAM;oBACNC,MAAM;oBACNC,QAAQ;oBACRC,aAAa;gBACf;aACD;YACDS,iBAAiB;QACnB;IACF;IACA,qBAAO,qBAACC,qBAAY;QAACJ,MAAMA;QAAMK,IAAG;;AACtC;AAEAC,SAAS,gBAAgB;IACvBC,GAAG,gCAAgC;QACjC,MAAMR,gBAAgB;YACpBG,qBAAqB;gBACnB;oBACEX,MAAM;oBACNC,MAAM;oBACNC,QAAQ;oBACRC,aAAa;gBACf;aACD;YACDS,iBAAiB;QACnB;QAEAK,IAAAA,aAAM,gBAAC,qBAACV;YAAyBC,eAAeA;;QAEhD,oCAAoC;QACpCU,OAAOC,aAAM,CAACC,oBAAoB,CAAC,kBAAkBC,iBAAiB;QACtEH,OAAOC,aAAM,CAACC,oBAAoB,CAAC,QAAQC,iBAAiB;QAC5DH,OAAOC,aAAM,CAACC,oBAAoB,CAAC,MAAMC,iBAAiB;QAC1DH,OAAOC,aAAM,CAACC,oBAAoB,CAAC,WAAWC,iBAAiB;IACjE;IAEAL,GAAG,8BAA8B;QAC/BC,IAAAA,aAAM,gBAAC,qBAACV;QAER,MAAMe,YAAYH,aAAM,CAACI,SAAS,CAAC;QACnCC,gBAAS,CAACC,KAAK,CAACH;QAEhB,gCAAgC;QAChC,MAAMI,qBAAqBP,aAAM,CAACQ,uBAAuB,CAAC;QAC1DT,OAAOQ,oBAAoBE,YAAY,CAAC;IAC1C;IAEAZ,GAAG,mCAAmC;QACpCC,IAAAA,aAAM,gBAAC,qBAACV;QAER,MAAMsB,eAAeV,aAAM,CAACW,UAAU,CAAC;QACvCZ,OAAOW,cAAcE,YAAY;IACnC;IAEAf,GAAG,qCAAqC;QACtC,MAAMR,gBAAgB;YACpBG,qBAAqB;gBACnB;oBACEX,MAAM;oBACNC,MAAM;oBACNC,QAAQ;oBACRC,aAAa;gBACf;aACD;YACDS,iBAAiB;QACnB;QAEAK,IAAAA,aAAM,gBAAC,qBAACV;YAAyBC,eAAeA;;QAEhD,MAAMwB,SAASb,aAAM,CAACc,SAAS,CAAC,YAAY;YAAEjC,MAAM;QAAoB;QACxEkB,OAAOc,QAAQX,iBAAiB;IAClC;AACF,GAEA,mDAAmD;CACnD,uCAAuC"}