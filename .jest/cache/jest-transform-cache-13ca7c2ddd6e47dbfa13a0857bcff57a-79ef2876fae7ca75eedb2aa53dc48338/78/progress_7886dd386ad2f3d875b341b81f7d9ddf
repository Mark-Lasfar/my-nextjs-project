9b75af2f5e3015a344e2bc86c8a61322
'use client';
"use strict";

/* istanbul ignore next */
function cov_2ksbt9opg6() {
  var path = "/home/mark/Downloads/nextjs-amazona-main/components/ui/progress.tsx";
  var hash = "d14bb4093fc54ee6d7dbdf9ee4839ade945ef9f9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/mark/Downloads/nextjs-amazona-main/components/ui/progress.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 24
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 37
        },
        end: {
          line: 14,
          column: 99
        }
      },
      "6": {
        start: {
          line: 15,
          column: 15
        },
        end: {
          line: 15,
          column: 41
        }
      },
      "7": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 51
        }
      },
      "8": {
        start: {
          line: 17,
          column: 39
        },
        end: {
          line: 17,
          column: 51
        }
      },
      "9": {
        start: {
          line: 18,
          column: 28
        },
        end: {
          line: 18,
          column: 41
        }
      },
      "10": {
        start: {
          line: 19,
          column: 27
        },
        end: {
          line: 19,
          column: 40
        }
      },
      "11": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 22,
          column: 20
        }
      },
      "12": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 66
        }
      },
      "13": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 27,
          column: 5
        }
      },
      "14": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 19
        }
      },
      "15": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "16": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 31,
          column: 10
        }
      },
      "17": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 33,
          column: 53
        }
      },
      "18": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "19": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 30
        }
      },
      "20": {
        start: {
          line: 37,
          column: 17
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "21": {
        start: {
          line: 40,
          column: 32
        },
        end: {
          line: 40,
          column: 88
        }
      },
      "22": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "23": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "24": {
        start: {
          line: 43,
          column: 23
        },
        end: {
          line: 43,
          column: 95
        }
      },
      "25": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 48,
          column: 13
        }
      },
      "26": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 57
        }
      },
      "27": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 39
        }
      },
      "28": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 25
        }
      },
      "29": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "30": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 31
        }
      },
      "31": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 18
        }
      },
      "32": {
        start: {
          line: 57,
          column: 31
        },
        end: {
          line: 67,
          column: 7
        }
      },
      "33": {
        start: {
          line: 57,
          column: 102
        },
        end: {
          line: 67,
          column: 6
        }
      },
      "34": {
        start: {
          line: 68,
          column: 0
        },
        end: {
          line: 68,
          column: 55
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 16,
            column: 9
          },
          end: {
            line: 16,
            column: 33
          }
        },
        loc: {
          start: {
            line: 16,
            column: 47
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 39
          },
          end: {
            line: 20,
            column: 40
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 24,
            column: 9
          },
          end: {
            line: 24,
            column: 34
          }
        },
        loc: {
          start: {
            line: 24,
            column: 53
          },
          end: {
            line: 56,
            column: 1
          }
        },
        line: 24
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 57,
            column: 49
          },
          end: {
            line: 57,
            column: 50
          }
        },
        loc: {
          start: {
            line: 57,
            column: 102
          },
          end: {
            line: 67,
            column: 6
          }
        },
        line: 57
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 15
          },
          end: {
            line: 21,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 21,
            column: 29
          },
          end: {
            line: 21,
            column: 45
          }
        }, {
          start: {
            line: 21,
            column: 48
          },
          end: {
            line: 21,
            column: 65
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "3": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 25,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 25,
            column: 20
          }
        }, {
          start: {
            line: 25,
            column: 24
          },
          end: {
            line: 25,
            column: 27
          }
        }, {
          start: {
            line: 25,
            column: 31
          },
          end: {
            line: 25,
            column: 45
          }
        }],
        line: 25
      },
      "4": {
        loc: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "5": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 20
          }
        }, {
          start: {
            line: 28,
            column: 24
          },
          end: {
            line: 28,
            column: 47
          }
        }, {
          start: {
            line: 28,
            column: 51
          },
          end: {
            line: 28,
            column: 76
          }
        }],
        line: 28
      },
      "6": {
        loc: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "7": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 13
          }
        }, {
          start: {
            line: 34,
            column: 17
          },
          end: {
            line: 34,
            column: 31
          }
        }],
        line: 34
      },
      "8": {
        loc: {
          start: {
            line: 40,
            column: 32
          },
          end: {
            line: 40,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 32
          },
          end: {
            line: 40,
            column: 53
          }
        }, {
          start: {
            line: 40,
            column: 57
          },
          end: {
            line: 40,
            column: 88
          }
        }],
        line: 40
      },
      "9": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "10": {
        loc: {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 42,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 42,
            column: 29
          }
        }, {
          start: {
            line: 42,
            column: 33
          },
          end: {
            line: 42,
            column: 79
          }
        }],
        line: 42
      },
      "11": {
        loc: {
          start: {
            line: 43,
            column: 23
          },
          end: {
            line: 43,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 43,
            column: 47
          },
          end: {
            line: 43,
            column: 88
          }
        }, {
          start: {
            line: 43,
            column: 91
          },
          end: {
            line: 43,
            column: 95
          }
        }],
        line: 43
      },
      "12": {
        loc: {
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 48,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 48,
            column: 13
          }
        }, {
          start: {
            line: 46,
            column: 19
          },
          end: {
            line: 48,
            column: 13
          }
        }],
        line: 44
      },
      "13": {
        loc: {
          start: {
            line: 44,
            column: 16
          },
          end: {
            line: 44,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 16
          },
          end: {
            line: 44,
            column: 20
          }
        }, {
          start: {
            line: 44,
            column: 25
          },
          end: {
            line: 44,
            column: 33
          }
        }, {
          start: {
            line: 44,
            column: 37
          },
          end: {
            line: 44,
            column: 45
          }
        }],
        line: 44
      },
      "14": {
        loc: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "15": {
        loc: {
          start: {
            line: 64,
            column: 49
          },
          end: {
            line: 64,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 49
          },
          end: {
            line: 64,
            column: 54
          }
        }, {
          start: {
            line: 64,
            column: 58
          },
          end: {
            line: 64,
            column: 59
          }
        }],
        line: 64
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/mark/Downloads/nextjs-amazona-main/components/ui/progress.tsx"],
      sourcesContent: ["'use client'\n\nimport * as React from 'react'\nimport * as ProgressPrimitive from '@radix-ui/react-progress'\n\nimport { cn } from '@/lib/utils'\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      'relative h-2 w-full overflow-hidden rounded-full bg-primary/20',\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n"],
      names: ["Progress", "React", "forwardRef", "className", "value", "props", "ref", "ProgressPrimitive", "Root", "cn", "Indicator", "style", "transform", "displayName"],
      mappings: "AAAA;;;;;+BA2BSA;;;eAAAA;;;;+DAzBc;uEACY;uBAEhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEnB,MAAMA,yBAAWC,OAAMC,UAAU,CAG/B,CAAC,EAAEC,SAAS,EAAEC,KAAK,EAAE,GAAGC,OAAO,EAAEC,oBACjC,qBAACC,eAAkBC,IAAI;QACrBF,KAAKA;QACLH,WAAWM,IAAAA,SAAE,EACX,kEACAN;QAED,GAAGE,KAAK;kBAET,cAAA,qBAACE,eAAkBG,SAAS;YAC1BP,WAAU;YACVQ,OAAO;gBAAEC,WAAW,CAAC,YAAY,EAAE,MAAOR,CAAAA,SAAS,CAAA,EAAG,EAAE,CAAC;YAAC;;;AAIhEJ,SAASa,WAAW,GAAGN,eAAkBC,IAAI,CAACK,WAAW"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d14bb4093fc54ee6d7dbdf9ee4839ade945ef9f9"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2ksbt9opg6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2ksbt9opg6();
cov_2ksbt9opg6().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2ksbt9opg6().s[1]++;
Object.defineProperty(exports, "Progress", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2ksbt9opg6().f[0]++;
    cov_2ksbt9opg6().s[2]++;
    return Progress;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2ksbt9opg6().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_2ksbt9opg6().s[4]++, _interop_require_wildcard(require("react")));
const _reactprogress =
/* istanbul ignore next */
(/*#__PURE__*/cov_2ksbt9opg6().s[5]++, _interop_require_wildcard(require("@radix-ui/react-progress")));
const _utils =
/* istanbul ignore next */
(cov_2ksbt9opg6().s[6]++, require("../../lib/utils"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_2ksbt9opg6().f[1]++;
  cov_2ksbt9opg6().s[7]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_2ksbt9opg6().b[0][0]++;
    cov_2ksbt9opg6().s[8]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_2ksbt9opg6().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_2ksbt9opg6().s[9]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_2ksbt9opg6().s[10]++, new WeakMap());
  /* istanbul ignore next */
  cov_2ksbt9opg6().s[11]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_2ksbt9opg6().f[2]++;
    cov_2ksbt9opg6().s[12]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_2ksbt9opg6().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_2ksbt9opg6().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_2ksbt9opg6().f[3]++;
  cov_2ksbt9opg6().s[13]++;
  if (
  /* istanbul ignore next */
  (cov_2ksbt9opg6().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_2ksbt9opg6().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_2ksbt9opg6().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_2ksbt9opg6().b[2][0]++;
    cov_2ksbt9opg6().s[14]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_2ksbt9opg6().b[2][1]++;
  }
  cov_2ksbt9opg6().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_2ksbt9opg6().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_2ksbt9opg6().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_2ksbt9opg6().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_2ksbt9opg6().b[4][0]++;
    cov_2ksbt9opg6().s[16]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_2ksbt9opg6().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_2ksbt9opg6().s[17]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_2ksbt9opg6().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_2ksbt9opg6().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_2ksbt9opg6().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_2ksbt9opg6().b[6][0]++;
    cov_2ksbt9opg6().s[19]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_2ksbt9opg6().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_2ksbt9opg6().s[20]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_2ksbt9opg6().s[21]++,
  /* istanbul ignore next */
  (cov_2ksbt9opg6().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_2ksbt9opg6().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_2ksbt9opg6().s[22]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_2ksbt9opg6().s[23]++;
    if (
    /* istanbul ignore next */
    (cov_2ksbt9opg6().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_2ksbt9opg6().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_2ksbt9opg6().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_2ksbt9opg6().s[24]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_2ksbt9opg6().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_2ksbt9opg6().b[11][1]++, null));
      /* istanbul ignore next */
      cov_2ksbt9opg6().s[25]++;
      if (
      /* istanbul ignore next */
      (cov_2ksbt9opg6().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_2ksbt9opg6().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_2ksbt9opg6().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_2ksbt9opg6().b[12][0]++;
        cov_2ksbt9opg6().s[26]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_2ksbt9opg6().b[12][1]++;
        cov_2ksbt9opg6().s[27]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_2ksbt9opg6().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_2ksbt9opg6().s[28]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_2ksbt9opg6().s[29]++;
  if (cache) {
    /* istanbul ignore next */
    cov_2ksbt9opg6().b[14][0]++;
    cov_2ksbt9opg6().s[30]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_2ksbt9opg6().b[14][1]++;
  }
  cov_2ksbt9opg6().s[31]++;
  return newObj;
}
const Progress =
/* istanbul ignore next */
(/*#__PURE__*/cov_2ksbt9opg6().s[32]++, _react.forwardRef(({
  className,
  value,
  ...props
}, ref) => {
  /* istanbul ignore next */
  cov_2ksbt9opg6().f[4]++;
  cov_2ksbt9opg6().s[33]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_reactprogress.Root, {
    ref: ref,
    className: (0, _utils.cn)('relative h-2 w-full overflow-hidden rounded-full bg-primary/20', className),
    ...props,
    children: /*#__PURE__*/(0, _jsxruntime.jsx)(_reactprogress.Indicator, {
      className: "h-full w-full flex-1 bg-primary transition-all",
      style: {
        transform: `translateX(-${100 - (
        /* istanbul ignore next */
        (cov_2ksbt9opg6().b[15][0]++, value) ||
        /* istanbul ignore next */
        (cov_2ksbt9opg6().b[15][1]++, 0))}%)`
      }
    })
  });
}));
/* istanbul ignore next */
cov_2ksbt9opg6().s[34]++;
Progress.displayName = _reactprogress.Root.displayName;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQcm9ncmVzcyIsImNvdl8ya3NidDlvcGc2IiwicyIsIl9yZWFjdCIsImZvcndhcmRSZWYiLCJjbGFzc05hbWUiLCJ2YWx1ZSIsInByb3BzIiwicmVmIiwiZiIsIl9qc3hydW50aW1lIiwianN4IiwiX3JlYWN0cHJvZ3Jlc3MiLCJSb290IiwiX3V0aWxzIiwiY24iLCJJbmRpY2F0b3IiLCJzdHlsZSIsInRyYW5zZm9ybSIsImIiLCJkaXNwbGF5TmFtZSJdLCJzb3VyY2VzIjpbIi9ob21lL21hcmsvRG93bmxvYWRzL25leHRqcy1hbWF6b25hLW1haW4vY29tcG9uZW50cy91aS9wcm9ncmVzcy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnXG5cbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0ICogYXMgUHJvZ3Jlc3NQcmltaXRpdmUgZnJvbSAnQHJhZGl4LXVpL3JlYWN0LXByb2dyZXNzJ1xuXG5pbXBvcnQgeyBjbiB9IGZyb20gJ0AvbGliL3V0aWxzJ1xuXG5jb25zdCBQcm9ncmVzcyA9IFJlYWN0LmZvcndhcmRSZWY8XG4gIFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIFByb2dyZXNzUHJpbWl0aXZlLlJvb3Q+LFxuICBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIFByb2dyZXNzUHJpbWl0aXZlLlJvb3Q+XG4+KCh7IGNsYXNzTmFtZSwgdmFsdWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKFxuICA8UHJvZ3Jlc3NQcmltaXRpdmUuUm9vdFxuICAgIHJlZj17cmVmfVxuICAgIGNsYXNzTmFtZT17Y24oXG4gICAgICAncmVsYXRpdmUgaC0yIHctZnVsbCBvdmVyZmxvdy1oaWRkZW4gcm91bmRlZC1mdWxsIGJnLXByaW1hcnkvMjAnLFxuICAgICAgY2xhc3NOYW1lXG4gICAgKX1cbiAgICB7Li4ucHJvcHN9XG4gID5cbiAgICA8UHJvZ3Jlc3NQcmltaXRpdmUuSW5kaWNhdG9yXG4gICAgICBjbGFzc05hbWU9XCJoLWZ1bGwgdy1mdWxsIGZsZXgtMSBiZy1wcmltYXJ5IHRyYW5zaXRpb24tYWxsXCJcbiAgICAgIHN0eWxlPXt7IHRyYW5zZm9ybTogYHRyYW5zbGF0ZVgoLSR7MTAwIC0gKHZhbHVlIHx8IDApfSUpYCB9fVxuICAgIC8+XG4gIDwvUHJvZ3Jlc3NQcmltaXRpdmUuUm9vdD5cbikpXG5Qcm9ncmVzcy5kaXNwbGF5TmFtZSA9IFByb2dyZXNzUHJpbWl0aXZlLlJvb3QuZGlzcGxheU5hbWVcblxuZXhwb3J0IHsgUHJvZ3Jlc3MgfVxuIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytCQTJCUzs7Ozs7O1dBQUFBLFFBQUE7Ozs7Ozs7O3lFQXpCYzs7O3lFQUNZOzs7a0NBRWhCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRW5CLE1BQU1BLFFBQUE7QUFBQTtBQUFBLGNBQUFDLGNBQUEsR0FBQUMsQ0FBQSxRQUFXQyxNQUFBLENBQU1DLFVBQVUsQ0FHL0IsQ0FBQztFQUFFQyxTQUFTO0VBQUVDLEtBQUs7RUFBRSxHQUFHQztBQUFBLENBQU8sRUFBRUMsR0FBQSxLQUNqQztFQUFBO0VBQUFQLGNBQUEsR0FBQVEsQ0FBQTtFQUFBUixjQUFBLEdBQUFDLENBQUE7RUFBQSxPQURpQyxhQUNqQyxJQUFBUSxXQUFBLENBQUFDLEdBQUEsRUFBQ0MsY0FBQSxDQUFrQkMsSUFBSTtJQUNyQkwsR0FBQSxFQUFLQSxHQUFBO0lBQ0xILFNBQUEsRUFBVyxJQUFBUyxNQUFBLENBQUFDLEVBQUUsRUFDWCxrRUFDQVYsU0FBQTtJQUVELEdBQUdFLEtBQUs7Y0FFVCxpQkFBQUcsV0FBQSxDQUFBQyxHQUFBLEVBQUNDLGNBQUEsQ0FBa0JJLFNBQVM7TUFDMUJYLFNBQUEsRUFBVTtNQUNWWSxLQUFBLEVBQU87UUFBRUMsU0FBQSxFQUFXLGVBQWU7UUFBTztRQUFBLENBQUFqQixjQUFBLEdBQUFrQixDQUFBLFdBQUFiLEtBQUE7UUFBQTtRQUFBLENBQUFMLGNBQUEsR0FBQWtCLENBQUEsV0FBUztNQUFPOzs7Ozs7QUFJaEVuQixRQUFBLENBQVNvQixXQUFXLEdBQUdSLGNBQUEsQ0FBa0JDLElBQUksQ0FBQ08sV0FBVyIsImlnbm9yZUxpc3QiOltdfQ==