{"version":3,"sources":["/home/mark/Downloads/nextjs-amazona-main/__tests__/components/settings/currency-form.test.tsx"],"sourcesContent":["import { render, screen, fireEvent } from '@testing-library/react'\nimport CurrencyForm from '@/app/[locale]/admin/settings/currency-form'\nimport { FormProvider, useForm } from 'react-hook-form'\nimport { ISettingInput } from '@/types'\n\n// Explicitly mock getValues to return available currencies\nconst mockGetValues = jest.fn().mockReturnValue({\n  availableCurrencies: [\n    {\n      name: 'US Dollar',\n      code: 'USD',\n      symbol: '$',\n      convertRate: 1,\n    }\n  ],\n  defaultCurrency: 'USD',\n})\n\n// Mock form context\njest.mock('react-hook-form', () => ({\n  ...jest.requireActual('react-hook-form'),\n  useFormContext: () => ({\n    getFieldState: jest.fn(() => ({ error: null })),\n    formState: { errors: {} },\n    watch: jest.fn(),\n    setValue: jest.fn(),\n    register: jest.fn(),\n    getValues: mockGetValues,\n    control: {}\n  }),\n  useForm: () => ({\n    control: {},\n    register: jest.fn(),\n    handleSubmit: jest.fn(),\n    formState: { errors: {} },\n    watch: jest.fn(),\n    setValue: jest.fn(),\n    getValues: mockGetValues,\n  }),\n  useFieldArray: () => ({\n    fields: [\n      {\n        id: '1',\n        name: 'US Dollar',\n        code: 'USD',\n        symbol: '$',\n        convertRate: 1,\n      }\n    ],\n    append: jest.fn(),\n    remove: jest.fn(),\n  }),\n}))\n\n// Test component wrapper\nconst TestComponent = ({ defaultValues = {} }) => {\n  const form = useForm<ISettingInput>({\n    defaultValues: defaultValues || {\n      availableCurrencies: [\n        {\n          name: 'US Dollar',\n          code: 'USD',\n          symbol: '$',\n          convertRate: 1,\n        }\n      ],\n      defaultCurrency: 'USD',\n    },\n  })\n\n  return (\n    <FormProvider {...form}>\n      <CurrencyForm form={form} id=\"currency-form\" />\n    </FormProvider>\n  )\n}\n\ndescribe('CurrencyForm', () => {\n  beforeEach(() => {\n    jest.clearAllMocks()\n  })\n\n  it('renders currency form fields', () => {\n    render(<TestComponent />)\n\n    // Check if form fields are rendered\n    expect(screen.getByText(/Currency Name/i)).toBeInTheDocument()\n    expect(screen.getByText(/Currency Code/i)).toBeInTheDocument()\n    expect(screen.getByText(/Currency Symbol/i)).toBeInTheDocument()\n    expect(screen.getByText(/Conversion Rate/i)).toBeInTheDocument()\n  })\n\n  it('allows adding new currency', () => {\n    render(<TestComponent />)\n    \n    const addButton = screen.getByText('Add New Currency')\n    fireEvent.click(addButton)\n  })\n\n  it('prevents removing last currency', () => {\n    render(<TestComponent />)\n    \n    const removeButton = screen.getByTitle('Cannot remove last currency')\n    expect(removeButton).toBeDisabled()\n  })\n\n  it('allows selecting default currency', () => {\n    render(<TestComponent />)\n    \n    const select = screen.getByRole('combobox', { name: /Default Currency/i })\n    expect(select).toBeInTheDocument()\n  })\n})\n\n// Current Date and Time (UTC): 2025-04-20 22:58:03\n// Current User's Login: ibrahim-lasfar"],"names":["jest","mock","requireActual","useFormContext","getFieldState","fn","error","formState","errors","watch","setValue","register","getValues","mockGetValues","control","useForm","handleSubmit","useFieldArray","fields","id","name","code","symbol","convertRate","append","remove","mockReturnValue","availableCurrencies","defaultCurrency","TestComponent","defaultValues","form","FormProvider","CurrencyForm","describe","beforeEach","clearAllMocks","it","render","expect","screen","getByText","toBeInTheDocument","addButton","fireEvent","click","removeButton","getByTitle","toBeDisabled","select","getByRole"],"mappings":";AAkBA,oBAAoB;AACpBA,KAAKC,IAAI,CAAC,mBAAmB,IAAO,CAAA;QAClC,GAAGD,KAAKE,aAAa,CAAC,kBAAkB;QACxCC,gBAAgB,IAAO,CAAA;gBACrBC,eAAeJ,KAAKK,EAAE,CAAC,IAAO,CAAA;wBAAEC,OAAO;oBAAK,CAAA;gBAC5CC,WAAW;oBAAEC,QAAQ,CAAC;gBAAE;gBACxBC,OAAOT,KAAKK,EAAE;gBACdK,UAAUV,KAAKK,EAAE;gBACjBM,UAAUX,KAAKK,EAAE;gBACjBO,WAAWC;gBACXC,SAAS,CAAC;YACZ,CAAA;QACAC,SAAS,IAAO,CAAA;gBACdD,SAAS,CAAC;gBACVH,UAAUX,KAAKK,EAAE;gBACjBW,cAAchB,KAAKK,EAAE;gBACrBE,WAAW;oBAAEC,QAAQ,CAAC;gBAAE;gBACxBC,OAAOT,KAAKK,EAAE;gBACdK,UAAUV,KAAKK,EAAE;gBACjBO,WAAWC;YACb,CAAA;QACAI,eAAe,IAAO,CAAA;gBACpBC,QAAQ;oBACN;wBACEC,IAAI;wBACJC,MAAM;wBACNC,MAAM;wBACNC,QAAQ;wBACRC,aAAa;oBACf;iBACD;gBACDC,QAAQxB,KAAKK,EAAE;gBACfoB,QAAQzB,KAAKK,EAAE;YACjB,CAAA;IACF,CAAA;;;;;uBApD0C;qEACjB;+BACa;;;;;;AAGtC,2DAA2D;AAC3D,MAAMQ,gBAAgBb,KAAKK,EAAE,GAAGqB,eAAe,CAAC;IAC9CC,qBAAqB;QACnB;YACEP,MAAM;YACNC,MAAM;YACNC,QAAQ;YACRC,aAAa;QACf;KACD;IACDK,iBAAiB;AACnB;AAsCA,yBAAyB;AACzB,MAAMC,gBAAgB,CAAC,EAAEC,gBAAgB,CAAC,CAAC,EAAE;IAC3C,MAAMC,OAAOhB,IAAAA,sBAAO,EAAgB;QAClCe,eAAeA,iBAAiB;YAC9BH,qBAAqB;gBACnB;oBACEP,MAAM;oBACNC,MAAM;oBACNC,QAAQ;oBACRC,aAAa;gBACf;aACD;YACDK,iBAAiB;QACnB;IACF;IAEA,qBACE,qBAACI,2BAAY;QAAE,GAAGD,IAAI;kBACpB,cAAA,qBAACE,qBAAY;YAACF,MAAMA;YAAMZ,IAAG;;;AAGnC;AAEAe,SAAS,gBAAgB;IACvBC,WAAW;QACTnC,KAAKoC,aAAa;IACpB;IAEAC,GAAG,gCAAgC;QACjCC,IAAAA,aAAM,gBAAC,qBAACT;QAER,oCAAoC;QACpCU,OAAOC,aAAM,CAACC,SAAS,CAAC,mBAAmBC,iBAAiB;QAC5DH,OAAOC,aAAM,CAACC,SAAS,CAAC,mBAAmBC,iBAAiB;QAC5DH,OAAOC,aAAM,CAACC,SAAS,CAAC,qBAAqBC,iBAAiB;QAC9DH,OAAOC,aAAM,CAACC,SAAS,CAAC,qBAAqBC,iBAAiB;IAChE;IAEAL,GAAG,8BAA8B;QAC/BC,IAAAA,aAAM,gBAAC,qBAACT;QAER,MAAMc,YAAYH,aAAM,CAACC,SAAS,CAAC;QACnCG,gBAAS,CAACC,KAAK,CAACF;IAClB;IAEAN,GAAG,mCAAmC;QACpCC,IAAAA,aAAM,gBAAC,qBAACT;QAER,MAAMiB,eAAeN,aAAM,CAACO,UAAU,CAAC;QACvCR,OAAOO,cAAcE,YAAY;IACnC;IAEAX,GAAG,qCAAqC;QACtCC,IAAAA,aAAM,gBAAC,qBAACT;QAER,MAAMoB,SAAST,aAAM,CAACU,SAAS,CAAC,YAAY;YAAE9B,MAAM;QAAoB;QACxEmB,OAAOU,QAAQP,iBAAiB;IAClC;AACF,GAEA,mDAAmD;CACnD,uCAAuC"}