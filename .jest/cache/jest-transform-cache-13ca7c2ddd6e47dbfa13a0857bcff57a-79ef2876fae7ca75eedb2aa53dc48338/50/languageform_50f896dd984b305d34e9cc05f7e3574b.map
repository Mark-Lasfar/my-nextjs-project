{"version":3,"names":["LanguageForm","form","id","cov_2d4j6e80b5","f","fields","append","remove","s","_reacthookform","useFieldArray","control","name","setValue","watch","formState","errors","availableLanguages","defaultLanguage","validLanguageCodes","_react","useMemo","map","lang","code","useEffect","includes","b","_jsxruntime","jsxs","_card","Card","jsx","CardHeader","CardTitle","CardContent","className","field","index","_form","FormField","render","FormItem","FormLabel","FormControl","_input","Input","placeholder","FormMessage","message","_button","Button","type","disabled","length","variant","onClick","_lucidereact","TrashIcon","_select","Select","value","onValueChange","onChange","SelectTrigger","SelectValue","SelectContent","filter","x","SelectItem"],"sources":["/home/mark/Downloads/nextjs-amazona-main/app/[locale]/admin/settings/language-form.tsx"],"sourcesContent":["'use client'\n\nimport { Button } from '@/components/ui/button'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form'\nimport { Input } from '@/components/ui/input'\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select'\nimport { ISettingInput } from '@/types'\nimport { LanguageField, UseFieldArrayProps } from '@/types/form'\nimport { TrashIcon } from 'lucide-react'\nimport React, { useEffect, useMemo } from 'react'\nimport { useFieldArray, UseFormReturn } from 'react-hook-form'\n\nexport default function LanguageForm({\n  form,\n  id,\n}: {\n  form: UseFormReturn<ISettingInput>\n  id: string\n}) {\n  const { fields, append, remove } = useFieldArray<ISettingInput>({\n    control: form.control,\n    name: 'availableLanguages',\n  } as UseFieldArrayProps<ISettingInput>)\n\n  const {\n    setValue,\n    watch,\n    control,\n    formState: { errors },\n  } = form\n\n  const availableLanguages = watch('availableLanguages')\n  const defaultLanguage = watch('defaultLanguage')\n\n  // Memoize the validation of language codes\n  const validLanguageCodes = useMemo(\n    () => availableLanguages.map((lang) => lang.code),\n    [availableLanguages]\n  )\n\n  useEffect(() => {\n    if (!validLanguageCodes.includes(defaultLanguage)) {\n      setValue('defaultLanguage', validLanguageCodes[0] || '')\n    }\n  }, [validLanguageCodes, defaultLanguage, setValue])\n\n  return (\n    <Card id={id}>\n      <CardHeader>\n        <CardTitle>Languages</CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        <div className=\"space-y-4\">\n          {fields.map((field, index) => (\n            <div key={field.id} className=\"flex gap-2\">\n              <FormField\n                control={form.control}\n                name={`availableLanguages.${index}.name`}\n                render={({ field }) => (\n                  <FormItem>\n                    {index === 0 && <FormLabel>Name</FormLabel>}\n                    <FormControl>\n                      <Input {...field} placeholder=\"Name\" />\n                    </FormControl>\n                    <FormMessage>\n                      {errors.availableLanguages?.[index]?.name?.message}\n                    </FormMessage>\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name={`availableLanguages.${index}.code`}\n                render={({ field }) => (\n                  <FormItem>\n                    {index === 0 && <FormLabel>Code</FormLabel>}\n                    <FormControl>\n                      <Input {...field} placeholder=\"Code\" />\n                    </FormControl>\n                    <FormMessage>\n                      {errors.availableLanguages?.[index]?.code?.message}\n                    </FormMessage>\n                  </FormItem>\n                )}\n              />\n\n              <div>\n                {index === 0 && <div>Action</div>}\n                <Button\n                  type=\"button\"\n                  disabled={fields.length === 1}\n                  variant=\"outline\"\n                  className={index === 0 ? 'mt-2' : ''}\n                  onClick={() => remove(index)}\n                >\n                  <TrashIcon className=\"w-4 h-4\" />\n                </Button>\n              </div>\n            </div>\n          ))}\n\n          <Button\n            type=\"button\"\n            variant=\"outline\"\n            onClick={() =>\n              append({\n                name: '',\n                code: '',\n              } as LanguageField)\n            }\n          >\n            Add Language\n          </Button>\n        </div>\n\n        <FormField\n          control={control}\n          name=\"defaultLanguage\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Default Language</FormLabel>\n              <FormControl>\n                <Select\n                  value={field.value || ''}\n                  onValueChange={(value) => field.onChange(value)}\n                >\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Select a language\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {availableLanguages\n                      .filter((x) => x.code)\n                      .map((lang, index) => (\n                        <SelectItem key={index} value={lang.code}>\n                          {lang.name} ({lang.code})\n                        </SelectItem>\n                      ))}\n                  </SelectContent>\n                </Select>\n              </FormControl>\n              <FormMessage>{errors.defaultLanguage?.message}</FormMessage>\n            </FormItem>\n          )}\n        />\n      </CardContent>\n    </Card>\n  )\n}\n\n// Current Date and Time (UTC): 2025-04-21 02:40:17\n// Current User's Login: ibrahim-lasfar"],"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","ignoreList":[]}