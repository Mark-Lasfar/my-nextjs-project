{"version":3,"names":["browsingHistoryStore","cov_62grx8nm0","f","s","default","useBrowsingHistory","initialState","products","_zustand","create","_middleware","persist","name","addItem","product","index","findIndex","p","id","b","splice","unshift","length","pop","setState","clear"],"sources":["/home/mark/Downloads/nextjs-amazona-main/hooks/use-browsing-history.ts"],"sourcesContent":["import { create } from 'zustand'\nimport { persist } from 'zustand/middleware'\ntype BrowsingHistory = {\n  products: { id: string; category: string }[]\n}\nconst initialState: BrowsingHistory = {\n  products: [],\n}\n\nexport const browsingHistoryStore = create<BrowsingHistory>()(\n  persist(() => initialState, {\n    name: 'browsingHistoryStore',\n  })\n)\n\nexport default function useBrowsingHistory() {\n  const { products } = browsingHistoryStore()\n  return {\n    products,\n    addItem: (product: { id: string; category: string }) => {\n      const index = products.findIndex((p) => p.id === product.id)\n      if (index !== -1) products.splice(index, 1) // Remove duplicate if it exists\n      products.unshift(product) // Add id to the start\n\n      if (products.length > 10) products.pop() // Remove excess items if length exceeds 10\n\n      browsingHistoryStore.setState({\n        products,\n      })\n    },\n\n    clear: () => {\n      browsingHistoryStore.setState({\n        products: [],\n      })\n    },\n  }\n}\n"],"mappingsaA,oBAAoB,WAAAA,CAAA;IAAA;IAAAC,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAE,CAAA;WAApBH,oBAAA;;EAMbI,OAsBC,WAAAA,CAAA;IAAA;IAAAH,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAE,CAAA;WAtBuBE,kBAAA;;;;;iCAfD;;;iCACC;AAIxB,MAAMC,YAAA;AAAA;AAAA,CAAAL,aAAA,GAAAE,CAAA,OAAgC;EACpCI,QAAA,EAAU;AACZ;AAEO,MAAMP,oBAAA;AAAA;AAAA,CAAAC,aAAA,GAAAE,CAAA,OAAuB,IAAAK,QAAA,CAAAC,MAAM,IACxC,IAAAC,WAAA,CAAAC,OAAO,EAAC,MAAML;EAAAA;EAAAA,sBAAA;EAAAA,uBAAA;EAAAA,MAAA,CAAAA,YAAA;AAAA,GAAc;EAC1BM,IAAA,EAAM;AACR;AAGa,SAASP,mBAAA;EAAA;EAAAJ,aAAA,GAAAC,CAAA;EACtB,MAAM;IAAEK;EAAQ,CAAE;EAAA;EAAA,CAAAN,aAAA,GAAAE,CAAA,QAAGH,oBAAA;EAAA;EAAAC,aAAA,GAAAE,CAAA;EACrB,OAAO;IACLI,QAAA;IACAM,OAAA,EAAUC,OAAA;MAAA;MAAAb,aAAA,GAAAC,CAAA;MACR,MAAMa,KAAA;MAAA;MAAA,CAAAd,aAAA,GAAAE,CAAA,QAAQI,QAAA,CAASS,SAAS,CAAEC,CAAA,IAAM;QAAA;QAAAhB,aAAA,GAAAC,CAAA;QAAAD,aAAA,GAAAE,CAAA;QAAA,OAAAc,CAAA,CAAEC,EAAE,KAAKJ,OAAA,CAAQI,EAAE;MAAF,CAAE;MAAA;MAAAjB,aAAA,GAAAE,CAAA;MAC3D,IAAIY,KAAA,KAAU,CAAC,GAAG;QAAA;QAAAd,aAAA,GAAAkB,CAAA;QAAAlB,aAAA,GAAAE,CAAA;QAAAI,QAAA,CAASa,MAAM,CAACL,KAAA,EAAO,GAAG;QAAA;;;;;;;MAC5CR,QAAA,CAASc,OAAO,CAACP,OAAA,EAAS;MAAA;;;MAE1B,IAAIP,QAAA,CAASe,MAAM,GAAG,IAAI;QAAA;QAAArB,aAAA,GAAAkB,CAAA;QAAAlB,aAAA,GAAAE,CAAA;QAAAI,QAAA,CAASgB,GAAG,GAAG;QAAA;;;;;;;MAEzCvB,oBAAA,CAAqBwB,QAAQ,CAAC;QAC5BjB;MACF;IACF;IAEAkB,KAAA,EAAOA,CAAA;MAAA;MAAAxB,aAAA,GAAAC,CAAA;MAAAD,aAAA,GAAAE,CAAA;MACLH,oBAAA,CAAqBwB,QAAQ,CAAC;QAC5BjB,QAAA,EAAU;MACZ;IACF;EACF;AACF","ignoreList":[]}