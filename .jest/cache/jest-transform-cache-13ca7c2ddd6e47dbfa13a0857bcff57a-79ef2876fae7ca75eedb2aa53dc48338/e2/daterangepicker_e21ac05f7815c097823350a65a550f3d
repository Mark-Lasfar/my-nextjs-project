cafd74fbbfdfd615957abaea719df435
'use client';
"use strict";

/* istanbul ignore next */
function cov_njo6druni() {
  var path = "/home/mark/Downloads/nextjs-amazona-main/app/[locale]/admin/overview/date-range-picker.tsx";
  var hash = "3a704129c2fd17367409302cf3b3c71ffb62b1bb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/mark/Downloads/nextjs-amazona-main/app/[locale]/admin/overview/date-range-picker.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 39
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 14,
          column: 44
        }
      },
      "6": {
        start: {
          line: 15,
          column: 15
        },
        end: {
          line: 15,
          column: 47
        }
      },
      "7": {
        start: {
          line: 16,
          column: 17
        },
        end: {
          line: 16,
          column: 61
        }
      },
      "8": {
        start: {
          line: 17,
          column: 16
        },
        end: {
          line: 17,
          column: 59
        }
      },
      "9": {
        start: {
          line: 18,
          column: 18
        },
        end: {
          line: 18,
          column: 63
        }
      },
      "10": {
        start: {
          line: 19,
          column: 22
        },
        end: {
          line: 19,
          column: 56
        }
      },
      "11": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 51
        }
      },
      "12": {
        start: {
          line: 21,
          column: 39
        },
        end: {
          line: 21,
          column: 51
        }
      },
      "13": {
        start: {
          line: 22,
          column: 28
        },
        end: {
          line: 22,
          column: 41
        }
      },
      "14": {
        start: {
          line: 23,
          column: 27
        },
        end: {
          line: 23,
          column: 40
        }
      },
      "15": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 26,
          column: 20
        }
      },
      "16": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 66
        }
      },
      "17": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 31,
          column: 5
        }
      },
      "18": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 19
        }
      },
      "19": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "20": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 35,
          column: 10
        }
      },
      "21": {
        start: {
          line: 37,
          column: 16
        },
        end: {
          line: 37,
          column: 53
        }
      },
      "22": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "23": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 30
        }
      },
      "24": {
        start: {
          line: 41,
          column: 17
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "25": {
        start: {
          line: 44,
          column: 32
        },
        end: {
          line: 44,
          column: 88
        }
      },
      "26": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "27": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "28": {
        start: {
          line: 47,
          column: 23
        },
        end: {
          line: 47,
          column: 95
        }
      },
      "29": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 52,
          column: 13
        }
      },
      "30": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 49,
          column: 57
        }
      },
      "31": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 51,
          column: 39
        }
      },
      "32": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 25
        }
      },
      "33": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "34": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 31
        }
      },
      "35": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 18
        }
      },
      "36": {
        start: {
          line: 62,
          column: 44
        },
        end: {
          line: 62,
          column: 72
        }
      },
      "37": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 125,
          column: 7
        }
      },
      "38": {
        start: {
          line: 91,
          column: 42
        },
        end: {
          line: 91,
          column: 70
        }
      },
      "39": {
        start: {
          line: 108,
          column: 53
        },
        end: {
          line: 108,
          column: 74
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 20,
            column: 9
          },
          end: {
            line: 20,
            column: 33
          }
        },
        loc: {
          start: {
            line: 20,
            column: 47
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 24,
            column: 39
          },
          end: {
            line: 24,
            column: 40
          }
        },
        loc: {
          start: {
            line: 24,
            column: 61
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 28,
            column: 9
          },
          end: {
            line: 28,
            column: 34
          }
        },
        loc: {
          start: {
            line: 28,
            column: 53
          },
          end: {
            line: 60,
            column: 1
          }
        },
        line: 28
      },
      "4": {
        name: "CalendarDateRangePicker",
        decl: {
          start: {
            line: 61,
            column: 9
          },
          end: {
            line: 61,
            column: 32
          }
        },
        loc: {
          start: {
            line: 61,
            column: 70
          },
          end: {
            line: 126,
            column: 1
          }
        },
        line: 61
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 91,
            column: 38
          },
          end: {
            line: 91,
            column: 39
          }
        },
        loc: {
          start: {
            line: 91,
            column: 42
          },
          end: {
            line: 91,
            column: 70
          }
        },
        line: 91
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 108,
            column: 49
          },
          end: {
            line: 108,
            column: 50
          }
        },
        loc: {
          start: {
            line: 108,
            column: 53
          },
          end: {
            line: 108,
            column: 74
          }
        },
        line: 108
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 25,
            column: 15
          },
          end: {
            line: 25,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 25,
            column: 29
          },
          end: {
            line: 25,
            column: 45
          }
        }, {
          start: {
            line: 25,
            column: 48
          },
          end: {
            line: 25,
            column: 65
          }
        }],
        line: 25
      },
      "2": {
        loc: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "3": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 20
          }
        }, {
          start: {
            line: 29,
            column: 24
          },
          end: {
            line: 29,
            column: 27
          }
        }, {
          start: {
            line: 29,
            column: 31
          },
          end: {
            line: 29,
            column: 45
          }
        }],
        line: 29
      },
      "4": {
        loc: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "5": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 20
          }
        }, {
          start: {
            line: 32,
            column: 24
          },
          end: {
            line: 32,
            column: 47
          }
        }, {
          start: {
            line: 32,
            column: 51
          },
          end: {
            line: 32,
            column: 76
          }
        }],
        line: 32
      },
      "6": {
        loc: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "7": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 13
          }
        }, {
          start: {
            line: 38,
            column: 17
          },
          end: {
            line: 38,
            column: 31
          }
        }],
        line: 38
      },
      "8": {
        loc: {
          start: {
            line: 44,
            column: 32
          },
          end: {
            line: 44,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 32
          },
          end: {
            line: 44,
            column: 53
          }
        }, {
          start: {
            line: 44,
            column: 57
          },
          end: {
            line: 44,
            column: 88
          }
        }],
        line: 44
      },
      "9": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "10": {
        loc: {
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 46,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 46,
            column: 29
          }
        }, {
          start: {
            line: 46,
            column: 33
          },
          end: {
            line: 46,
            column: 79
          }
        }],
        line: 46
      },
      "11": {
        loc: {
          start: {
            line: 47,
            column: 23
          },
          end: {
            line: 47,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 47,
            column: 47
          },
          end: {
            line: 47,
            column: 88
          }
        }, {
          start: {
            line: 47,
            column: 91
          },
          end: {
            line: 47,
            column: 95
          }
        }],
        line: 47
      },
      "12": {
        loc: {
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 52,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 52,
            column: 13
          }
        }, {
          start: {
            line: 50,
            column: 19
          },
          end: {
            line: 52,
            column: 13
          }
        }],
        line: 48
      },
      "13": {
        loc: {
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 48,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 48,
            column: 20
          }
        }, {
          start: {
            line: 48,
            column: 25
          },
          end: {
            line: 48,
            column: 33
          }
        }, {
          start: {
            line: 48,
            column: 37
          },
          end: {
            line: 48,
            column: 45
          }
        }],
        line: 48
      },
      "14": {
        loc: {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "15": {
        loc: {
          start: {
            line: 72,
            column: 89
          },
          end: {
            line: 72,
            column: 129
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 89
          },
          end: {
            line: 72,
            column: 102
          }
        }, {
          start: {
            line: 72,
            column: 106
          },
          end: {
            line: 72,
            column: 129
          }
        }],
        line: 72
      },
      "16": {
        loc: {
          start: {
            line: 77,
            column: 28
          },
          end: {
            line: 86,
            column: 30
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 77,
            column: 49
          },
          end: {
            line: 84,
            column: 87
          }
        }, {
          start: {
            line: 84,
            column: 104
          },
          end: {
            line: 86,
            column: 30
          }
        }],
        line: 77
      },
      "17": {
        loc: {
          start: {
            line: 77,
            column: 49
          },
          end: {
            line: 84,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 77,
            column: 81
          },
          end: {
            line: 84,
            column: 30
          }
        }, {
          start: {
            line: 84,
            column: 33
          },
          end: {
            line: 84,
            column: 87
          }
        }],
        line: 77
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/mark/Downloads/nextjs-amazona-main/app/[locale]/admin/overview/date-range-picker.tsx"],
      sourcesContent: ["'use client'\n\nimport * as React from 'react'\nimport { CalendarIcon } from 'lucide-react'\nimport { DateRange } from 'react-day-picker'\n\nimport { cn, formatDateTime } from '@/lib/utils'\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from '@/components/ui/popover'\nimport { Button } from '@/components/ui/button'\nimport { Calendar } from '@/components/ui/calendar'\nimport { PopoverClose } from '@radix-ui/react-popover'\n\nexport function CalendarDateRangePicker({\n  defaultDate,\n  setDate,\n  className,\n}: {\n  defaultDate?: DateRange\n  setDate: React.Dispatch<React.SetStateAction<DateRange | undefined>>\n  className?: string\n}) {\n  const [calendarDate, setCalendarDate] = React.useState<DateRange | undefined>(\n    defaultDate\n  )\n\n  return (\n    <div className={cn('grid gap-2', className)}>\n      <Popover>\n        <PopoverTrigger asChild>\n          <Button\n            id=\"date\"\n            variant={'outline'}\n            className={cn(\n              'justify-start text-left font-normal',\n              !calendarDate && 'text-muted-foreground'\n            )}\n          >\n            <CalendarIcon className=\"mr-0 h-4 w-4\" />\n            {calendarDate?.from ? (\n              calendarDate.to ? (\n                <>\n                  {formatDateTime(calendarDate.from).dateOnly} -{' '}\n                  {formatDateTime(calendarDate.to).dateOnly}\n                </>\n              ) : (\n                formatDateTime(calendarDate.from).dateOnly\n              )\n            ) : (\n              <span>Pick a date</span>\n            )}\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent\n          onCloseAutoFocus={() => setCalendarDate(defaultDate)}\n          className=\"w-auto p-0\"\n          align=\"end\"\n        >\n          <Calendar\n            mode=\"range\"\n            defaultMonth={defaultDate?.from}\n            selected={calendarDate}\n            onSelect={setCalendarDate}\n            numberOfMonths={2}\n          />\n          <div className=\"flex gap-4 p-4 pt-0\">\n            <PopoverClose asChild>\n              <Button onClick={() => setDate(calendarDate)}>Apply</Button>\n            </PopoverClose>\n            <PopoverClose asChild>\n              <Button variant={'outline'}>Cancel</Button>\n            </PopoverClose>\n          </div>\n        </PopoverContent>\n      </Popover>\n    </div>\n  )\n}\n"],
      names: ["CalendarDateRangePicker", "defaultDate", "setDate", "className", "calendarDate", "setCalendarDate", "React", "useState", "div", "cn", "Popover", "PopoverTrigger", "asChild", "Button", "id", "variant", "CalendarIcon", "from", "to", "formatDateTime", "dateOnly", "span", "PopoverContent", "onCloseAutoFocus", "align", "Calendar", "mode", "defaultMonth", "selected", "onSelect", "numberOfMonths", "PopoverClose", "onClick"],
      mappings: "AAAA;;;;;+BAgBgBA;;;eAAAA;;;;+DAdO;6BACM;uBAGM;yBAK5B;wBACgB;0BACE;8BACI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEtB,SAASA,wBAAwB,EACtCC,WAAW,EACXC,OAAO,EACPC,SAAS,EAKV;IACC,MAAM,CAACC,cAAcC,gBAAgB,GAAGC,OAAMC,QAAQ,CACpDN;IAGF,qBACE,qBAACO;QAAIL,WAAWM,IAAAA,SAAE,EAAC,cAAcN;kBAC/B,cAAA,sBAACO,gBAAO;;8BACN,qBAACC,uBAAc;oBAACC,OAAO;8BACrB,cAAA,sBAACC,cAAM;wBACLC,IAAG;wBACHC,SAAS;wBACTZ,WAAWM,IAAAA,SAAE,EACX,uCACA,CAACL,gBAAgB;;0CAGnB,qBAACY,yBAAY;gCAACb,WAAU;;4BACvBC,cAAca,OACbb,aAAac,EAAE,iBACb;;oCACGC,IAAAA,qBAAc,EAACf,aAAaa,IAAI,EAAEG,QAAQ;oCAAC;oCAAG;oCAC9CD,IAAAA,qBAAc,EAACf,aAAac,EAAE,EAAEE,QAAQ;;iCAG3CD,IAAAA,qBAAc,EAACf,aAAaa,IAAI,EAAEG,QAAQ,iBAG5C,qBAACC;0CAAK;;;;;8BAIZ,sBAACC,uBAAc;oBACbC,kBAAkB,IAAMlB,gBAAgBJ;oBACxCE,WAAU;oBACVqB,OAAM;;sCAEN,qBAACC,kBAAQ;4BACPC,MAAK;4BACLC,cAAc1B,aAAagB;4BAC3BW,UAAUxB;4BACVyB,UAAUxB;4BACVyB,gBAAgB;;sCAElB,sBAACtB;4BAAIL,WAAU;;8CACb,qBAAC4B,0BAAY;oCAACnB,OAAO;8CACnB,cAAA,qBAACC,cAAM;wCAACmB,SAAS,IAAM9B,QAAQE;kDAAe;;;8CAEhD,qBAAC2B,0BAAY;oCAACnB,OAAO;8CACnB,cAAA,qBAACC,cAAM;wCAACE,SAAS;kDAAW;;;;;;;;;;AAO1C"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3a704129c2fd17367409302cf3b3c71ffb62b1bb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_njo6druni = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_njo6druni();
cov_njo6druni().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_njo6druni().s[1]++;
Object.defineProperty(exports, "CalendarDateRangePicker", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_njo6druni().f[0]++;
    cov_njo6druni().s[2]++;
    return CalendarDateRangePicker;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_njo6druni().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_njo6druni().s[4]++, _interop_require_wildcard(require("react")));
const _lucidereact =
/* istanbul ignore next */
(cov_njo6druni().s[5]++, require("lucide-react"));
const _utils =
/* istanbul ignore next */
(cov_njo6druni().s[6]++, require("../../../../lib/utils"));
const _popover =
/* istanbul ignore next */
(cov_njo6druni().s[7]++, require("../../../../components/ui/popover"));
const _button =
/* istanbul ignore next */
(cov_njo6druni().s[8]++, require("../../../../components/ui/button"));
const _calendar =
/* istanbul ignore next */
(cov_njo6druni().s[9]++, require("../../../../components/ui/calendar"));
const _reactpopover =
/* istanbul ignore next */
(cov_njo6druni().s[10]++, require("@radix-ui/react-popover"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_njo6druni().f[1]++;
  cov_njo6druni().s[11]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_njo6druni().b[0][0]++;
    cov_njo6druni().s[12]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_njo6druni().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_njo6druni().s[13]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_njo6druni().s[14]++, new WeakMap());
  /* istanbul ignore next */
  cov_njo6druni().s[15]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_njo6druni().f[2]++;
    cov_njo6druni().s[16]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_njo6druni().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_njo6druni().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_njo6druni().f[3]++;
  cov_njo6druni().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_njo6druni().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_njo6druni().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_njo6druni().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_njo6druni().b[2][0]++;
    cov_njo6druni().s[18]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_njo6druni().b[2][1]++;
  }
  cov_njo6druni().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_njo6druni().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_njo6druni().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_njo6druni().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_njo6druni().b[4][0]++;
    cov_njo6druni().s[20]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_njo6druni().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_njo6druni().s[21]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_njo6druni().s[22]++;
  if (
  /* istanbul ignore next */
  (cov_njo6druni().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_njo6druni().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_njo6druni().b[6][0]++;
    cov_njo6druni().s[23]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_njo6druni().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_njo6druni().s[24]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_njo6druni().s[25]++,
  /* istanbul ignore next */
  (cov_njo6druni().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_njo6druni().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_njo6druni().s[26]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_njo6druni().s[27]++;
    if (
    /* istanbul ignore next */
    (cov_njo6druni().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_njo6druni().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_njo6druni().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_njo6druni().s[28]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_njo6druni().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_njo6druni().b[11][1]++, null));
      /* istanbul ignore next */
      cov_njo6druni().s[29]++;
      if (
      /* istanbul ignore next */
      (cov_njo6druni().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_njo6druni().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_njo6druni().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_njo6druni().b[12][0]++;
        cov_njo6druni().s[30]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_njo6druni().b[12][1]++;
        cov_njo6druni().s[31]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_njo6druni().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_njo6druni().s[32]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_njo6druni().s[33]++;
  if (cache) {
    /* istanbul ignore next */
    cov_njo6druni().b[14][0]++;
    cov_njo6druni().s[34]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_njo6druni().b[14][1]++;
  }
  cov_njo6druni().s[35]++;
  return newObj;
}
function CalendarDateRangePicker({
  defaultDate,
  setDate,
  className
}) {
  /* istanbul ignore next */
  cov_njo6druni().f[4]++;
  const [calendarDate, setCalendarDate] =
  /* istanbul ignore next */
  (cov_njo6druni().s[36]++, _react.useState(defaultDate));
  /* istanbul ignore next */
  cov_njo6druni().s[37]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: (0, _utils.cn)('grid gap-2', className),
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_popover.Popover, {
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_popover.PopoverTrigger, {
        asChild: true,
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
          id: "date",
          variant: 'outline',
          className: (0, _utils.cn)('justify-start text-left font-normal',
          /* istanbul ignore next */
          (cov_njo6druni().b[15][0]++, !calendarDate) &&
          /* istanbul ignore next */
          (cov_njo6druni().b[15][1]++, 'text-muted-foreground')),
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.CalendarIcon, {
            className: "mr-0 h-4 w-4"
          }), calendarDate?.from ?
          /* istanbul ignore next */
          (cov_njo6druni().b[16][0]++, calendarDate.to ?
          /* istanbul ignore next */
          (/*#__PURE__*/cov_njo6druni().b[17][0]++, (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
            children: [(0, _utils.formatDateTime)(calendarDate.from).dateOnly, " -", ' ', (0, _utils.formatDateTime)(calendarDate.to).dateOnly]
          })) :
          /* istanbul ignore next */
          (cov_njo6druni().b[17][1]++, (0, _utils.formatDateTime)(calendarDate.from).dateOnly)) :
          /* istanbul ignore next */
          (/*#__PURE__*/cov_njo6druni().b[16][1]++, (0, _jsxruntime.jsx)("span", {
            children: "Pick a date"
          }))]
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_popover.PopoverContent, {
        onCloseAutoFocus: () => {
          /* istanbul ignore next */
          cov_njo6druni().f[5]++;
          cov_njo6druni().s[38]++;
          return setCalendarDate(defaultDate);
        },
        className: "w-auto p-0",
        align: "end",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_calendar.Calendar, {
          mode: "range",
          defaultMonth: defaultDate?.from,
          selected: calendarDate,
          onSelect: setCalendarDate,
          numberOfMonths: 2
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex gap-4 p-4 pt-0",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_reactpopover.PopoverClose, {
            asChild: true,
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
              onClick: () => {
                /* istanbul ignore next */
                cov_njo6druni().f[6]++;
                cov_njo6druni().s[39]++;
                return setDate(calendarDate);
              },
              children: "Apply"
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_reactpopover.PopoverClose, {
            asChild: true,
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
              variant: 'outline',
              children: "Cancel"
            })
          })]
        })]
      })]
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,