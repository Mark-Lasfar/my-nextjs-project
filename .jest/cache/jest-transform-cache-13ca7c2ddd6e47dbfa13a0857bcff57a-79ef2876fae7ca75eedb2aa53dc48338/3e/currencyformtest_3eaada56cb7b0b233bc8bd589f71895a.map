{"version":3,"sources":["/home/mark/Downloads/nextjs-amazona-main/__tests__/components/settings/currency-form.test.tsx"],"sourcesContent":["import { render, screen, fireEvent } from '@testing-library/react'\nimport CurrencyForm from '@/app/[locale]/admin/settings/currency-form'\nimport { FormProvider, useForm } from 'react-hook-form'\nimport { ISettingInput } from '@/types'\nimport * as React from 'react'\n\nconst mockDefaultValues = {\n  availableCurrencies: [\n    {\n      name: 'US Dollar',\n      code: 'USD',\n      symbol: '$',\n      convertRate: 1,\n    }\n  ],\n  defaultCurrency: 'USD',\n  site: {\n    name: 'Test Store',\n  },\n}\n\n// Mock form context\nconst mockForm = {\n  control: { array: true },  // Added array property\n  register: jest.fn(),\n  setValue: jest.fn(),\n  getValues: jest.fn().mockReturnValue(mockDefaultValues),\n  watch: jest.fn().mockReturnValue(mockDefaultValues.availableCurrencies),\n  formState: { errors: {} },\n  handleSubmit: jest.fn(),\n}\n\nconst mockFieldArray = {\n  fields: mockDefaultValues.availableCurrencies,\n  append: jest.fn(),\n  remove: jest.fn(),\n}\n\njest.mock('react-hook-form', () => ({\n  ...jest.requireActual('react-hook-form'),\n  useForm: () => mockForm,\n  useFormContext: () => ({\n    ...mockForm,\n    getFieldState: jest.fn(() => ({ error: null })),\n  }),\n  useFieldArray: () => mockFieldArray,\n}))\n\njest.mock('react', () => ({\n  ...jest.requireActual('react'),\n  useState: jest.fn().mockImplementation((initial) => [initial, jest.fn()]),\n  useMemo: jest.fn().mockImplementation((fn) => fn()),\n}))\n\n// Test component wrapper\nfunction TestComponent() {\n  return <CurrencyForm form={mockForm} id=\"currency-form\" />\n}\n\ndescribe('CurrencyForm', () => {\n  beforeEach(() => {\n    jest.clearAllMocks()\n    mockFieldArray.append.mockClear()\n    mockFieldArray.remove.mockClear()\n  })\n\n  it('renders currency form fields', () => {\n    render(<TestComponent />)\n    expect(screen.getByText('Currency Settings')).toBeInTheDocument()\n    expect(screen.getByLabelText(/Currency Name/i)).toBeInTheDocument()\n    expect(screen.getByLabelText(/Currency Code/i)).toBeInTheDocument()\n    expect(screen.getByLabelText(/Currency Symbol/i)).toBeInTheDocument()\n    expect(screen.getByLabelText(/Conversion Rate/i)).toBeInTheDocument()\n  })\n\n  it('allows adding new currency', () => {\n    render(<TestComponent />)\n    const addButton = screen.getByText('Add New Currency')\n    fireEvent.click(addButton)\n    expect(mockFieldArray.append).toHaveBeenCalled()\n  })\n\n  it('prevents removing last currency', () => {\n    render(<TestComponent />)\n    const removeButton = screen.getByTitle('Cannot remove last currency')\n    expect(removeButton).toBeDisabled()\n  })\n\n  it('allows selecting default currency', () => {\n    render(<TestComponent />)\n    const select = screen.getByRole('combobox', { name: /Default Currency/i })\n    expect(select).toBeInTheDocument()\n  })\n\n  it('displays currency settings header', () => {\n    render(<TestComponent />)\n    expect(screen.getByText('Currency Settings')).toBeInTheDocument()\n  })\n\n  it('has correct currency code input constraints', () => {\n    render(<TestComponent />)\n    const codeInput = screen.getByLabelText(/Currency Code/i)\n    expect(codeInput).toHaveAttribute('maxLength', '3')\n  })\n\n  it('has correct conversion rate input constraints', () => {\n    render(<TestComponent />)\n    const rateInput = screen.getByLabelText(/Conversion Rate/i)\n    expect(rateInput).toHaveAttribute('type', 'number')\n    expect(rateInput).toHaveAttribute('min', '0')\n    expect(rateInput).toHaveAttribute('step', '0.0001')\n  })\n})\n\n// Current Date and Time (UTC - YYYY-MM-DD HH:MM:SS formatted): 2025-04-21 00:48:07\n// Current User's Login: ibrahim-lasfar"],"names":["jest","mock","requireActual","useForm","mockForm","useFormContext","getFieldState","fn","error","useFieldArray","mockFieldArray","useState","mockImplementation","initial","useMemo","mockDefaultValues","availableCurrencies","name","code","symbol","convertRate","defaultCurrency","site","control","array","register","setValue","getValues","mockReturnValue","watch","formState","errors","handleSubmit","fields","append","remove","TestComponent","CurrencyForm","form","id","describe","beforeEach","clearAllMocks","mockClear","it","render","expect","screen","getByText","toBeInTheDocument","getByLabelText","addButton","fireEvent","click","toHaveBeenCalled","removeButton","getByTitle","toBeDisabled","select","getByRole","codeInput","toHaveAttribute","rateInput"],"mappings":"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"}