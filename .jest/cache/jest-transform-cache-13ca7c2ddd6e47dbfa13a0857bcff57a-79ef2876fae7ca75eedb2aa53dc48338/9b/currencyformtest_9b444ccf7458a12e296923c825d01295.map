{"version":3,"sources":["/home/mark/Downloads/nextjs-amazona-main/__tests__/components/settings/currency-form.test.tsx"],"sourcesContent":["import { render, screen, fireEvent } from '@testing-library/react'\nimport CurrencyForm from '@/app/[locale]/admin/settings/currency-form'\nimport { FormProvider, useForm } from 'react-hook-form'\nimport { ISettingInput } from '@/types'\n\nconst mockDefaultValues = {\n  availableCurrencies: [\n    {\n      name: 'US Dollar',\n      code: 'USD',\n      symbol: '$',\n      convertRate: 1,\n    }\n  ],\n  defaultCurrency: 'USD',\n  site: {\n    name: 'Test Store',\n  },\n}\n\nconst mockWatchValue = [\n  {\n    name: 'US Dollar',\n    code: 'USD',\n    symbol: '$',\n    convertRate: 1,\n  }\n]\n\n// Mock form context\nconst mockForm = {\n  register: jest.fn(),\n  setValue: jest.fn(),\n  getValues: jest.fn().mockReturnValue(mockDefaultValues),\n  watch: jest.fn().mockReturnValue(mockWatchValue),\n  formState: { errors: {} },\n  control: {},\n  handleSubmit: jest.fn(),\n}\n\njest.mock('react-hook-form', () => ({\n  ...jest.requireActual('react-hook-form'),\n  useForm: () => mockForm,\n  useFormContext: () => ({\n    ...mockForm,\n    getFieldState: jest.fn(() => ({ error: null })),\n  }),\n  useFieldArray: () => ({\n    fields: mockWatchValue,\n    append: jest.fn(),\n    remove: jest.fn(),\n  }),\n}))\n\njest.mock('react', () => ({\n  ...jest.requireActual('react'),\n  useState: jest.fn().mockImplementation((initial) => [initial, jest.fn()]),\n  useMemo: jest.fn().mockImplementation((fn) => fn()),\n}))\n\n// Test component wrapper\nfunction TestComponent() {\n  const form = useForm<ISettingInput>({\n    defaultValues: mockDefaultValues,\n  })\n\n  return (\n    <FormProvider {...form}>\n      <CurrencyForm form={form} id=\"currency-form\" />\n    </FormProvider>\n  )\n}\n\ndescribe('CurrencyForm', () => {\n  beforeEach(() => {\n    jest.clearAllMocks()\n  })\n\n  it('renders currency form fields', () => {\n    render(<TestComponent />)\n\n    expect(screen.getByText('Currency Settings')).toBeInTheDocument()\n    expect(screen.getByText(/Currency Name/i)).toBeInTheDocument()\n    expect(screen.getByText(/Currency Code/i)).toBeInTheDocument()\n    expect(screen.getByText(/Currency Symbol/i)).toBeInTheDocument()\n    expect(screen.getByText(/Conversion Rate/i)).toBeInTheDocument()\n  })\n\n  it('allows adding new currency', () => {\n    render(<TestComponent />)\n    \n    const addButton = screen.getByText('Add New Currency')\n    expect(addButton).toBeInTheDocument()\n    fireEvent.click(addButton)\n  })\n\n  it('prevents removing last currency', () => {\n    render(<TestComponent />)\n    \n    const removeButton = screen.getByTitle('Cannot remove last currency')\n    expect(removeButton).toBeDisabled()\n  })\n\n  it('allows selecting default currency', () => {\n    render(<TestComponent />)\n    \n    const select = screen.getByRole('combobox', { name: /Default Currency/i })\n    expect(select).toBeInTheDocument()\n  })\n\n  it('displays currency settings header', () => {\n    render(<TestComponent />)\n    expect(screen.getByText('Currency Settings')).toBeInTheDocument()\n  })\n\n  it('has correct currency code input constraints', () => {\n    render(<TestComponent />)\n    const inputs = screen.getAllByRole('textbox')\n    const codeInput = inputs.find(input => input.getAttribute('name')?.includes('code'))\n    expect(codeInput).toHaveAttribute('maxLength', '3')\n  })\n\n  it('has correct conversion rate input constraints', () => {\n    render(<TestComponent />)\n    const rateInput = screen.getByRole('spinbutton')\n    expect(rateInput).toHaveAttribute('type', 'number')\n    expect(rateInput).toHaveAttribute('min', '0')\n    expect(rateInput).toHaveAttribute('step', '0.0001')\n  })\n})\n\n// Current Date and Time (UTC): 2025-04-20 23:04:28\n// Current User's Login: ibrahim-lasfar"],"names":["jest","mock","requireActual","useForm","mockForm","useFormContext","getFieldState","fn","error","useFieldArray","fields","mockWatchValue","append","remove","useState","mockImplementation","initial","useMemo","mockDefaultValues","availableCurrencies","name","code","symbol","convertRate","defaultCurrency","site","register","setValue","getValues","mockReturnValue","watch","formState","errors","control","handleSubmit","TestComponent","form","defaultValues","FormProvider","CurrencyForm","id","describe","beforeEach","clearAllMocks","it","render","expect","screen","getByText","toBeInTheDocument","addButton","fireEvent","click","removeButton","getByTitle","toBeDisabled","select","getByRole","inputs","getAllByRole","codeInput","find","input","getAttribute","includes","toHaveAttribute","rateInput"],"mappings":";AAwCAA,KAAKC,IAAI,CAAC,mBAAmB,IAAO,CAAA;QAClC,GAAGD,KAAKE,aAAa,CAAC,kBAAkB;QACxCC,SAAS,IAAMC;QACfC,gBAAgB,IAAO,CAAA;gBACrB,GAAGD,QAAQ;gBACXE,eAAeN,KAAKO,EAAE,CAAC,IAAO,CAAA;wBAAEC,OAAO;oBAAK,CAAA;YAC9C,CAAA;QACAC,eAAe,IAAO,CAAA;gBACpBC,QAAQC;gBACRC,QAAQZ,KAAKO,EAAE;gBACfM,QAAQb,KAAKO,EAAE;YACjB,CAAA;IACF,CAAA;AAEAP,KAAKC,IAAI,CAAC,SAAS,IAAO,CAAA;QACxB,GAAGD,KAAKE,aAAa,CAAC,QAAQ;QAC9BY,UAAUd,KAAKO,EAAE,GAAGQ,kBAAkB,CAAC,CAACC,UAAY;gBAACA;gBAAShB,KAAKO,EAAE;aAAG;QACxEU,SAASjB,KAAKO,EAAE,GAAGQ,kBAAkB,CAAC,CAACR,KAAOA;IAChD,CAAA;;;;;uBA1D0C;qEACjB;+BACa;;;;;;AAGtC,MAAMW,oBAAoB;IACxBC,qBAAqB;QACnB;YACEC,MAAM;YACNC,MAAM;YACNC,QAAQ;YACRC,aAAa;QACf;KACD;IACDC,iBAAiB;IACjBC,MAAM;QACJL,MAAM;IACR;AACF;AAEA,MAAMT,iBAAiB;IACrB;QACES,MAAM;QACNC,MAAM;QACNC,QAAQ;QACRC,aAAa;IACf;CACD;AAED,oBAAoB;AACpB,MAAMnB,WAAW;IACfsB,UAAU1B,KAAKO,EAAE;IACjBoB,UAAU3B,KAAKO,EAAE;IACjBqB,WAAW5B,KAAKO,EAAE,GAAGsB,eAAe,CAACX;IACrCY,OAAO9B,KAAKO,EAAE,GAAGsB,eAAe,CAAClB;IACjCoB,WAAW;QAAEC,QAAQ,CAAC;IAAE;IACxBC,SAAS,CAAC;IACVC,cAAclC,KAAKO,EAAE;AACvB;AAsBA,yBAAyB;AACzB,SAAS4B;IACP,MAAMC,OAAOjC,IAAAA,sBAAO,EAAgB;QAClCkC,eAAenB;IACjB;IAEA,qBACE,qBAACoB,2BAAY;QAAE,GAAGF,IAAI;kBACpB,cAAA,qBAACG,qBAAY;YAACH,MAAMA;YAAMI,IAAG;;;AAGnC;AAEAC,SAAS,gBAAgB;IACvBC,WAAW;QACT1C,KAAK2C,aAAa;IACpB;IAEAC,GAAG,gCAAgC;QACjCC,IAAAA,aAAM,gBAAC,qBAACV;QAERW,OAAOC,aAAM,CAACC,SAAS,CAAC,sBAAsBC,iBAAiB;QAC/DH,OAAOC,aAAM,CAACC,SAAS,CAAC,mBAAmBC,iBAAiB;QAC5DH,OAAOC,aAAM,CAACC,SAAS,CAAC,mBAAmBC,iBAAiB;QAC5DH,OAAOC,aAAM,CAACC,SAAS,CAAC,qBAAqBC,iBAAiB;QAC9DH,OAAOC,aAAM,CAACC,SAAS,CAAC,qBAAqBC,iBAAiB;IAChE;IAEAL,GAAG,8BAA8B;QAC/BC,IAAAA,aAAM,gBAAC,qBAACV;QAER,MAAMe,YAAYH,aAAM,CAACC,SAAS,CAAC;QACnCF,OAAOI,WAAWD,iBAAiB;QACnCE,gBAAS,CAACC,KAAK,CAACF;IAClB;IAEAN,GAAG,mCAAmC;QACpCC,IAAAA,aAAM,gBAAC,qBAACV;QAER,MAAMkB,eAAeN,aAAM,CAACO,UAAU,CAAC;QACvCR,OAAOO,cAAcE,YAAY;IACnC;IAEAX,GAAG,qCAAqC;QACtCC,IAAAA,aAAM,gBAAC,qBAACV;QAER,MAAMqB,SAAST,aAAM,CAACU,SAAS,CAAC,YAAY;YAAErC,MAAM;QAAoB;QACxE0B,OAAOU,QAAQP,iBAAiB;IAClC;IAEAL,GAAG,qCAAqC;QACtCC,IAAAA,aAAM,gBAAC,qBAACV;QACRW,OAAOC,aAAM,CAACC,SAAS,CAAC,sBAAsBC,iBAAiB;IACjE;IAEAL,GAAG,+CAA+C;QAChDC,IAAAA,aAAM,gBAAC,qBAACV;QACR,MAAMuB,SAASX,aAAM,CAACY,YAAY,CAAC;QACnC,MAAMC,YAAYF,OAAOG,IAAI,CAACC,CAAAA,QAASA,MAAMC,YAAY,CAAC,SAASC,SAAS;QAC5ElB,OAAOc,WAAWK,eAAe,CAAC,aAAa;IACjD;IAEArB,GAAG,iDAAiD;QAClDC,IAAAA,aAAM,gBAAC,qBAACV;QACR,MAAM+B,YAAYnB,aAAM,CAACU,SAAS,CAAC;QACnCX,OAAOoB,WAAWD,eAAe,CAAC,QAAQ;QAC1CnB,OAAOoB,WAAWD,eAAe,CAAC,OAAO;QACzCnB,OAAOoB,WAAWD,eAAe,CAAC,QAAQ;IAC5C;AACF,GAEA,mDAAmD;CACnD,uCAAuC"}