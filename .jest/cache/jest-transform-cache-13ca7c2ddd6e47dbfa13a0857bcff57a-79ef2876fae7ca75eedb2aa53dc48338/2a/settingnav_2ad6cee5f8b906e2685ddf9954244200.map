{"version":3,"names":["cov_p299qn0ws","actualCoverage","s","_default","SettingNav","f","active","setActive","_react","useState","useEffect","sections","document","querySelectorAll","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","b","target","id","threshold","rootMargin","section","observe","disconnect","handleScroll","getElementById","top","offsetTop","window","scrollTo","behavior","_jsxruntime","jsxs","jsx","className","name","hash","icon","_lucidereact","Info","SettingsIcon","ImageIcon","Languages","Currency","CreditCard","Package","map","item","_button","Button","onClick","variant"],"sources":["/home/mark/Downloads/nextjs-amazona-main/app/[locale]/admin/settings/setting-nav.tsx"],"sourcesContent":["'use client'\nimport { Button } from '@/components/ui/button'\nimport {\n  CreditCard,\n  Currency,\n  ImageIcon,\n  Info,\n  Languages,\n  Package,\n  SettingsIcon,\n} from 'lucide-react'\n\nimport { useEffect, useState } from 'react'\n\nconst SettingNav = () => {\n  const [active, setActive] = useState('')\n\n  useEffect(() => {\n    const sections = document.querySelectorAll('div[id^=\"setting-\"]')\n\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            setActive(entry.target.id)\n          }\n        })\n      },\n      { threshold: 0.6, rootMargin: '0px 0px -40% 0px' }\n    )\n    sections.forEach((section) => observer.observe(section))\n    return () => observer.disconnect()\n  }, [])\n  const handleScroll = (id: string) => {\n    const section = document.getElementById(id)\n    if (section) {\n      const top = section.offsetTop - 16 // 20px above the section\n      window.scrollTo({ top, behavior: 'smooth' })\n    }\n  }\n\n  return (\n    <div>\n      <h1 className=\"h1-bold\">Setting</h1>\n      <nav className=\"flex md:flex-col gap-2 md:fixed mt-4 flex-wrap\">\n        {[\n          { name: 'Site Info', hash: 'setting-site-info', icon: <Info /> },\n          {\n            name: 'Common Settings',\n            hash: 'setting-common',\n            icon: <SettingsIcon />,\n          },\n          {\n            name: 'Carousels',\n            hash: 'setting-carousels',\n            icon: <ImageIcon />,\n          },\n          { name: 'Languages', hash: 'setting-languages', icon: <Languages /> },\n          {\n            name: 'Currencies',\n            hash: 'setting-currencies',\n            icon: <Currency />,\n          },\n          {\n            name: 'Payment Methods',\n            hash: 'setting-payment-methods',\n            icon: <CreditCard />,\n          },\n          {\n            name: 'Delivery Dates',\n            hash: 'setting-delivery-dates',\n            icon: <Package />,\n          },\n        ].map((item) => (\n          <Button\n            onClick={() => handleScroll(item.hash)}\n            key={item.hash}\n            variant={active === item.hash ? 'outline' : 'ghost'}\n            className={`justify-start ${\n              active === item.hash ? '' : 'border border-transparent'\n            }`}\n          >\n            {item.icon}\n            {item.name}\n          </Button>\n        ))}\n      </nav>\n    </div>\n  )\n}\n\nexport default SettingNav\n"],"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","ignoreList":[]}