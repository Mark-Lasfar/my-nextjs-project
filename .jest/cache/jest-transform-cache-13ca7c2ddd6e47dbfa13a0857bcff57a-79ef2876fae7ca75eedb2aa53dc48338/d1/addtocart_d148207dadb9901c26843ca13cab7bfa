30b79ae6e19a608824733723831b17cc
/* eslint-disable @typescript-eslint/no-explicit-any */'use client';
"use strict";

/* istanbul ignore next */
function cov_wnl5v25cp() {
  var path = "/home/mark/Downloads/nextjs-amazona-main/components/shared/product/add-to-cart.tsx";
  var hash = "d11c5f4a067dcb9d26a98a80f4ccfe451a1b5591";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/mark/Downloads/nextjs-amazona-main/components/shared/product/add-to-cart.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 25
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 16
        },
        end: {
          line: 13,
          column: 42
        }
      },
      "5": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 14,
          column: 42
        }
      },
      "6": {
        start: {
          line: 15,
          column: 36
        },
        end: {
          line: 15,
          column: 102
        }
      },
      "7": {
        start: {
          line: 16,
          column: 18
        },
        end: {
          line: 16,
          column: 53
        }
      },
      "8": {
        start: {
          line: 17,
          column: 18
        },
        end: {
          line: 17,
          column: 38
        }
      },
      "9": {
        start: {
          line: 18,
          column: 20
        },
        end: {
          line: 18,
          column: 46
        }
      },
      "10": {
        start: {
          line: 19,
          column: 15
        },
        end: {
          line: 19,
          column: 31
        }
      },
      "11": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 23,
          column: 6
        }
      },
      "12": {
        start: {
          line: 26,
          column: 19
        },
        end: {
          line: 26,
          column: 47
        }
      },
      "13": {
        start: {
          line: 27,
          column: 22
        },
        end: {
          line: 27,
          column: 47
        }
      },
      "14": {
        start: {
          line: 28,
          column: 24
        },
        end: {
          line: 28,
          column: 52
        }
      },
      "15": {
        start: {
          line: 30,
          column: 36
        },
        end: {
          line: 30,
          column: 59
        }
      },
      "16": {
        start: {
          line: 31,
          column: 14
        },
        end: {
          line: 31,
          column: 46
        }
      },
      "17": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 115,
          column: 7
        }
      },
      "18": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 51,
          column: 13
        }
      },
      "19": {
        start: {
          line: 36,
          column: 16
        },
        end: {
          line: 36,
          column: 33
        }
      },
      "20": {
        start: {
          line: 37,
          column: 16
        },
        end: {
          line: 45,
          column: 19
        }
      },
      "21": {
        start: {
          line: 41,
          column: 28
        },
        end: {
          line: 41,
          column: 49
        }
      },
      "22": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 50,
          column: 19
        }
      },
      "23": {
        start: {
          line: 59,
          column: 36
        },
        end: {
          line: 59,
          column: 58
        }
      },
      "24": {
        start: {
          line: 75,
          column: 53
        },
        end: {
          line: 78,
          column: 37
        }
      },
      "25": {
        start: {
          line: 86,
          column: 20
        },
        end: {
          line: 94,
          column: 21
        }
      },
      "26": {
        start: {
          line: 87,
          column: 39
        },
        end: {
          line: 87,
          column: 68
        }
      },
      "27": {
        start: {
          line: 88,
          column: 24
        },
        end: {
          line: 88,
          column: 55
        }
      },
      "28": {
        start: {
          line: 90,
          column: 24
        },
        end: {
          line: 93,
          column: 27
        }
      },
      "29": {
        start: {
          line: 101,
          column: 20
        },
        end: {
          line: 109,
          column: 21
        }
      },
      "30": {
        start: {
          line: 102,
          column: 24
        },
        end: {
          line: 102,
          column: 48
        }
      },
      "31": {
        start: {
          line: 103,
          column: 24
        },
        end: {
          line: 103,
          column: 49
        }
      },
      "32": {
        start: {
          line: 105,
          column: 24
        },
        end: {
          line: 108,
          column: 27
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 20,
            column: 9
          },
          end: {
            line: 20,
            column: 33
          }
        },
        loc: {
          start: {
            line: 20,
            column: 39
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 20
      },
      "2": {
        name: "AddToCart",
        decl: {
          start: {
            line: 25,
            column: 9
          },
          end: {
            line: 25,
            column: 18
          }
        },
        loc: {
          start: {
            line: 25,
            column: 46
          },
          end: {
            line: 116,
            column: 1
          }
        },
        line: 25
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 34,
            column: 17
          },
          end: {
            line: 34,
            column: 18
          }
        },
        loc: {
          start: {
            line: 34,
            column: 21
          },
          end: {
            line: 52,
            column: 9
          }
        },
        line: 34
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 40,
            column: 33
          },
          end: {
            line: 40,
            column: 34
          }
        },
        loc: {
          start: {
            line: 40,
            column: 37
          },
          end: {
            line: 42,
            column: 25
          }
        },
        line: 40
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 59,
            column: 31
          },
          end: {
            line: 59,
            column: 32
          }
        },
        loc: {
          start: {
            line: 59,
            column: 36
          },
          end: {
            line: 59,
            column: 58
          }
        },
        line: 59
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 75,
            column: 31
          },
          end: {
            line: 75,
            column: 32
          }
        },
        loc: {
          start: {
            line: 75,
            column: 53
          },
          end: {
            line: 78,
            column: 37
          }
        },
        line: 75
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 85,
            column: 25
          },
          end: {
            line: 85,
            column: 26
          }
        },
        loc: {
          start: {
            line: 85,
            column: 35
          },
          end: {
            line: 95,
            column: 17
          }
        },
        line: 85
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 100,
            column: 25
          },
          end: {
            line: 100,
            column: 26
          }
        },
        loc: {
          start: {
            line: 100,
            column: 29
          },
          end: {
            line: 110,
            column: 17
          }
        },
        line: 100
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 11
          },
          end: {
            line: 23,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 21,
            column: 35
          },
          end: {
            line: 21,
            column: 38
          }
        }, {
          start: {
            line: 21,
            column: 41
          },
          end: {
            line: 23,
            column: 5
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 11
          },
          end: {
            line: 21,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 11
          },
          end: {
            line: 21,
            column: 14
          }
        }, {
          start: {
            line: 21,
            column: 18
          },
          end: {
            line: 21,
            column: 32
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 25,
            column: 27
          },
          end: {
            line: 25,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 25,
            column: 37
          },
          end: {
            line: 25,
            column: 42
          }
        }],
        line: 25
      },
      "3": {
        loc: {
          start: {
            line: 32,
            column: 11
          },
          end: {
            line: 115,
            column: 6
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 32,
            column: 35
          },
          end: {
            line: 54,
            column: 6
          }
        }, {
          start: {
            line: 54,
            column: 23
          },
          end: {
            line: 115,
            column: 6
          }
        }],
        line: 32
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/mark/Downloads/nextjs-amazona-main/components/shared/product/add-to-cart.tsx"],
      sourcesContent: ["/* eslint-disable @typescript-eslint/no-explicit-any */\n'use client'\n\nimport { Button } from '@/components/ui/button'\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select'\nimport useCartStore from '@/hooks/use-cart-store'\nimport { useToast } from '@/hooks/use-toast'\nimport { OrderItem } from '@/types'\nimport { useTranslations } from 'next-intl'\nimport { useRouter } from 'next/navigation'\nimport { useState } from 'react'\n\nexport default function AddToCart({\n  item,\n  minimal = false,\n}: {\n  item: OrderItem\n  minimal?: boolean\n}) {\n  const router = useRouter()\n  const { toast } = useToast()\n\n  const { addItem } = useCartStore()\n\n  //PROMPT: add quantity state\n  const [quantity, setQuantity] = useState(1)\n\n  const t = useTranslations()\n\n  return minimal ? (\n    <Button\n      className=\"rounded-full w-auto\"\n      onClick={() => {\n        try {\n          addItem(item, 1)\n          toast({\n            description: t('Product.Added to Cart'),\n            action: (\n              <Button\n                onClick={() => {\n                  router.push('/cart')\n                }}\n              >\n                {t('Product.Go to Cart')}\n              </Button>\n            ),\n          })\n        } catch (error: any) {\n          toast({\n            variant: 'destructive',\n            description: error.message,\n          })\n        }\n      }}\n    >\n      {t('Product.Add to Cart')}\n    </Button>\n  ) : (\n    <div className=\"w-full space-y-2\">\n      <Select\n        value={quantity.toString()}\n        onValueChange={(i) => setQuantity(Number(i))}\n      >\n        <SelectTrigger className=\"\">\n          <SelectValue>\n            {t('Product.Quantity')}: {quantity}\n          </SelectValue>\n        </SelectTrigger>\n        <SelectContent position=\"popper\">\n          {Array.from({ length: item.countInStock }).map((_, i) => (\n            <SelectItem key={i + 1} value={`${i + 1}`}>\n              {i + 1}\n            </SelectItem>\n          ))}\n        </SelectContent>\n      </Select>\n\n      <Button\n        className=\"rounded-full w-full\"\n        type=\"button\"\n        onClick={async () => {\n          try {\n            const itemId = await addItem(item, quantity)\n            router.push(`/cart/${itemId}`)\n          } catch (error: any) {\n            toast({\n              variant: 'destructive',\n              description: error.message,\n            })\n          }\n        }}\n      >\n        {t('Product.Add to Cart')}\n      </Button>\n      <Button\n        variant=\"secondary\"\n        onClick={() => {\n          try {\n            addItem(item, quantity)\n            router.push(`/checkout`)\n          } catch (error: any) {\n            toast({\n              variant: 'destructive',\n              description: error.message,\n            })\n          }\n        }}\n        className=\"w-full rounded-full \"\n      >\n        {t('Product.Buy Now')}\n      </Button>\n    </div>\n  )\n}\n"],
      names: ["AddToCart", "item", "minimal", "router", "useRouter", "toast", "useToast", "addItem", "useCartStore", "quantity", "setQuantity", "useState", "t", "useTranslations", "Button", "className", "onClick", "description", "action", "push", "error", "variant", "message", "div", "Select", "value", "toString", "onValueChange", "i", "Number", "SelectTrigger", "SelectValue", "SelectContent", "position", "Array", "from", "length", "countInStock", "map", "_", "SelectItem", "type", "itemId"],
      mappings: "AAAA,qDAAqD,GACrD;;;;;+BAiBA;;;eAAwBA;;;;wBAfD;wBAOhB;qEACkB;0BACA;0BAEO;4BACN;uBACD;;;;;;AAEV,SAASA,UAAU,EAChCC,IAAI,EACJC,UAAU,KAAK,EAIhB;IACC,MAAMC,SAASC,IAAAA,qBAAS;IACxB,MAAM,EAAEC,KAAK,EAAE,GAAGC,IAAAA,kBAAQ;IAE1B,MAAM,EAAEC,OAAO,EAAE,GAAGC,IAAAA,qBAAY;IAEhC,4BAA4B;IAC5B,MAAM,CAACC,UAAUC,YAAY,GAAGC,IAAAA,eAAQ,EAAC;IAEzC,MAAMC,IAAIC,IAAAA,yBAAe;IAEzB,OAAOX,wBACL,qBAACY,cAAM;QACLC,WAAU;QACVC,SAAS;YACP,IAAI;gBACFT,QAAQN,MAAM;gBACdI,MAAM;oBACJY,aAAaL,EAAE;oBACfM,sBACE,qBAACJ,cAAM;wBACLE,SAAS;4BACPb,OAAOgB,IAAI,CAAC;wBACd;kCAECP,EAAE;;gBAGT;YACF,EAAE,OAAOQ,OAAY;gBACnBf,MAAM;oBACJgB,SAAS;oBACTJ,aAAaG,MAAME,OAAO;gBAC5B;YACF;QACF;kBAECV,EAAE;uBAGL,sBAACW;QAAIR,WAAU;;0BACb,sBAACS,cAAM;gBACLC,OAAOhB,SAASiB,QAAQ;gBACxBC,eAAe,CAACC,IAAMlB,YAAYmB,OAAOD;;kCAEzC,qBAACE,qBAAa;wBAACf,WAAU;kCACvB,cAAA,sBAACgB,mBAAW;;gCACTnB,EAAE;gCAAoB;gCAAGH;;;;kCAG9B,qBAACuB,qBAAa;wBAACC,UAAS;kCACrBC,MAAMC,IAAI,CAAC;4BAAEC,QAAQnC,KAAKoC,YAAY;wBAAC,GAAGC,GAAG,CAAC,CAACC,GAAGX,kBACjD,qBAACY,kBAAU;gCAAaf,OAAO,GAAGG,IAAI,GAAG;0CACtCA,IAAI;+BADUA,IAAI;;;;0BAO3B,qBAACd,cAAM;gBACLC,WAAU;gBACV0B,MAAK;gBACLzB,SAAS;oBACP,IAAI;wBACF,MAAM0B,SAAS,MAAMnC,QAAQN,MAAMQ;wBACnCN,OAAOgB,IAAI,CAAC,CAAC,MAAM,EAAEuB,QAAQ;oBAC/B,EAAE,OAAOtB,OAAY;wBACnBf,MAAM;4BACJgB,SAAS;4BACTJ,aAAaG,MAAME,OAAO;wBAC5B;oBACF;gBACF;0BAECV,EAAE;;0BAEL,qBAACE,cAAM;gBACLO,SAAQ;gBACRL,SAAS;oBACP,IAAI;wBACFT,QAAQN,MAAMQ;wBACdN,OAAOgB,IAAI,CAAC,CAAC,SAAS,CAAC;oBACzB,EAAE,OAAOC,OAAY;wBACnBf,MAAM;4BACJgB,SAAS;4BACTJ,aAAaG,MAAME,OAAO;wBAC5B;oBACF;gBACF;gBACAP,WAAU;0BAETH,EAAE;;;;AAIX"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d11c5f4a067dcb9d26a98a80f4ccfe451a1b5591"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_wnl5v25cp = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_wnl5v25cp();
cov_wnl5v25cp().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_wnl5v25cp().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_wnl5v25cp().f[0]++;
    cov_wnl5v25cp().s[2]++;
    return AddToCart;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_wnl5v25cp().s[3]++, require("react/jsx-runtime"));
const _button =
/* istanbul ignore next */
(cov_wnl5v25cp().s[4]++, require("../../ui/button"));
const _select =
/* istanbul ignore next */
(cov_wnl5v25cp().s[5]++, require("../../ui/select"));
const _usecartstore =
/* istanbul ignore next */
(/*#__PURE__*/cov_wnl5v25cp().s[6]++, _interop_require_default(require("../../../hooks/use-cart-store")));
const _usetoast =
/* istanbul ignore next */
(cov_wnl5v25cp().s[7]++, require("../../../hooks/use-toast"));
const _nextintl =
/* istanbul ignore next */
(cov_wnl5v25cp().s[8]++, require("next-intl"));
const _navigation =
/* istanbul ignore next */
(cov_wnl5v25cp().s[9]++, require("next/navigation"));
const _react =
/* istanbul ignore next */
(cov_wnl5v25cp().s[10]++, require("react"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_wnl5v25cp().f[1]++;
  cov_wnl5v25cp().s[11]++;
  return /* istanbul ignore next */(cov_wnl5v25cp().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_wnl5v25cp().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_wnl5v25cp().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_wnl5v25cp().b[0][1]++, {
    default: obj
  });
}
function AddToCart({
  item,
  minimal =
  /* istanbul ignore next */
  (cov_wnl5v25cp().b[2][0]++, false)
}) {
  /* istanbul ignore next */
  cov_wnl5v25cp().f[2]++;
  const router =
  /* istanbul ignore next */
  (cov_wnl5v25cp().s[12]++, (0, _navigation.useRouter)());
  const {
    toast
  } =
  /* istanbul ignore next */
  (cov_wnl5v25cp().s[13]++, (0, _usetoast.useToast)());
  const {
    addItem
  } =
  /* istanbul ignore next */
  (cov_wnl5v25cp().s[14]++, (0, _usecartstore.default)());
  //PROMPT: add quantity state
  const [quantity, setQuantity] =
  /* istanbul ignore next */
  (cov_wnl5v25cp().s[15]++, (0, _react.useState)(1));
  const t =
  /* istanbul ignore next */
  (cov_wnl5v25cp().s[16]++, (0, _nextintl.useTranslations)());
  /* istanbul ignore next */
  cov_wnl5v25cp().s[17]++;
  return minimal ?
  /* istanbul ignore next */
  (/*#__PURE__*/cov_wnl5v25cp().b[3][0]++, (0, _jsxruntime.jsx)(_button.Button, {
    className: "rounded-full w-auto",
    onClick: () => {
      /* istanbul ignore next */
      cov_wnl5v25cp().f[3]++;
      cov_wnl5v25cp().s[18]++;
      try {
        /* istanbul ignore next */
        cov_wnl5v25cp().s[19]++;
        addItem(item, 1);
        /* istanbul ignore next */
        cov_wnl5v25cp().s[20]++;
        toast({
          description: t('Product.Added to Cart'),
          action: /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
            onClick: () => {
              /* istanbul ignore next */
              cov_wnl5v25cp().f[4]++;
              cov_wnl5v25cp().s[21]++;
              router.push('/cart');
            },
            children: t('Product.Go to Cart')
          })
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_wnl5v25cp().s[22]++;
        toast({
          variant: 'destructive',
          description: error.message
        });
      }
    },
    children: t('Product.Add to Cart')
  })) :
  /* istanbul ignore next */
  (/*#__PURE__*/cov_wnl5v25cp().b[3][1]++, (0, _jsxruntime.jsxs)("div", {
    className: "w-full space-y-2",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_select.Select, {
      value: quantity.toString(),
      onValueChange: i => {
        /* istanbul ignore next */
        cov_wnl5v25cp().f[5]++;
        cov_wnl5v25cp().s[23]++;
        return setQuantity(Number(i));
      },
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectTrigger, {
        className: "",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_select.SelectValue, {
          children: [t('Product.Quantity'), ": ", quantity]
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectContent, {
        position: "popper",
        children: Array.from({
          length: item.countInStock
        }).map((_, i) => {
          /* istanbul ignore next */
          cov_wnl5v25cp().f[6]++;
          cov_wnl5v25cp().s[24]++;
          return /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
            value: `${i + 1}`,
            children: i + 1
          }, i + 1);
        })
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
      className: "rounded-full w-full",
      type: "button",
      onClick: async () => {
        /* istanbul ignore next */
        cov_wnl5v25cp().f[7]++;
        cov_wnl5v25cp().s[25]++;
        try {
          const itemId =
          /* istanbul ignore next */
          (cov_wnl5v25cp().s[26]++, await addItem(item, quantity));
          /* istanbul ignore next */
          cov_wnl5v25cp().s[27]++;
          router.push(`/cart/${itemId}`);
        } catch (error) {
          /* istanbul ignore next */
          cov_wnl5v25cp().s[28]++;
          toast({
            variant: 'destructive',
            description: error.message
          });
        }
      },
      children: t('Product.Add to Cart')
    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
      variant: "secondary",
      onClick: () => {
        /* istanbul ignore next */
        cov_wnl5v25cp().f[8]++;
        cov_wnl5v25cp().s[29]++;
        try {
          /* istanbul ignore next */
          cov_wnl5v25cp().s[30]++;
          addItem(item, quantity);
          /* istanbul ignore next */
          cov_wnl5v25cp().s[31]++;
          router.push(`/checkout`);
        } catch (error) {
          /* istanbul ignore next */
          cov_wnl5v25cp().s[32]++;
          toast({
            variant: 'destructive',
            description: error.message
          });
        }
      },
      className: "w-full rounded-full ",
      children: t('Product.Buy Now')
    })]
  }));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,