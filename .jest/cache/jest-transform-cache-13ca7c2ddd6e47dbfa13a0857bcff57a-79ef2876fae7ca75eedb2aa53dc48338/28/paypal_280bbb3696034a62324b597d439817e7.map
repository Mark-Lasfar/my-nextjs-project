{"version":3,"names":["cov_173ncdv6qr","actualCoverage","s","paypal","base","b","process","env","PAYPAL_API_URL","createOrder","price","f","accessToken","generateAccessToken","url","response","fetch","method","headers","Authorization","body","JSON","stringify","intent","purchase_units","amount","currency_code","value","handleResponse","capturePayment","orderId","PAYPAL_CLIENT_ID","PAYPAL_APP_SECRET","auth","Buffer","from","toString","jsonData","access_token","status","json","errorMessage","text","Error"],"sources":["/home/mark/Downloads/nextjs-amazona-main/lib/paypal.ts"],"sourcesContent":["const base = process.env.PAYPAL_API_URL || 'https://api-m.sandbox.paypal.com'\n\nexport const paypal = {\n  createOrder: async function createOrder(price: number) {\n    const accessToken = await generateAccessToken()\n    const url = `${base}/v2/checkout/orders`\n    const response = await fetch(url, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${accessToken}`,\n      },\n      body: JSON.stringify({\n        intent: 'CAPTURE',\n        purchase_units: [\n          {\n            amount: {\n              currency_code: 'USD',\n              value: price,\n            },\n          },\n        ],\n      }),\n    })\n    return handleResponse(response)\n  },\n  capturePayment: async function capturePayment(orderId: string) {\n    const accessToken = await generateAccessToken()\n    const url = `${base}/v2/checkout/orders/${orderId}/capture`\n    const response = await fetch(url, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${accessToken}`,\n      },\n    })\n\n    return handleResponse(response)\n  },\n}\n\nasync function generateAccessToken() {\n  const { PAYPAL_CLIENT_ID, PAYPAL_APP_SECRET } = process.env\n  const auth = Buffer.from(PAYPAL_CLIENT_ID + ':' + PAYPAL_APP_SECRET).toString(\n    'base64'\n  )\n  const response = await fetch(`${base}/v1/oauth2/token`, {\n    method: 'post',\n    body: 'grant_type=client_credentials',\n    headers: {\n      Authorization: `Basic ${auth}`,\n    },\n  })\n\n  const jsonData = await handleResponse(response)\n  return jsonData.access_token\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nasync function handleResponse(response: any) {\n  if (response.status === 200 || response.status === 201) {\n    return response.json()\n  }\n\n  const errorMessage = await response.text()\n  throw new Error(errorMessage)\n}\n"],"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","ignoreList":[]}