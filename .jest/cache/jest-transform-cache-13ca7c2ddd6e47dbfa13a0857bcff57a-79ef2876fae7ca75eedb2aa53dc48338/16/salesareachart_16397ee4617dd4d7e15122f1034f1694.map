{"version":3,"names":["SalesAreaChart","CustomTooltip","active","payload","label","cov_jnlv5u7gv","f","s","b","length","_jsxruntime","jsx","_card","Card","jsxs","CardContent","className","_utils","formatDateTime","Date","dateOnly","_productprice","default","price","value","plain","CustomXAxisTick","x","y","textAnchor","fill","STROKE_COLORS","Red","light","dark","Green","Gold","data","theme","_nextthemes","useTheme","cssColors","color","_usecolorstore","_recharts","ResponsiveContainer","width","height","AreaChart","CartesianGrid","horizontal","vertical","stroke","XAxis","dataKey","tick","interval","YAxis","fontSize","tickFormatter","Tooltip","content","Area","type","name","strokeWidth","fillOpacity"],"sources":["/home/mark/Downloads/nextjs-amazona-main/app/[locale]/admin/overview/sales-area-chart.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n'use client'\n\nimport ProductPrice from '@/components/shared/product/product-price'\nimport { Card, CardContent } from '@/components/ui/card'\nimport useColorStore from '@/hooks/use-color-store'\nimport { formatDateTime } from '@/lib/utils'\nimport { useTheme } from 'next-themes'\nimport React from 'react'\nimport {\n  Area,\n  AreaChart,\n  CartesianGrid,\n  ResponsiveContainer,\n  Tooltip,\n  TooltipProps,\n  XAxis,\n  YAxis,\n} from 'recharts'\n\ninterface CustomTooltipProps extends TooltipProps<number, string> {\n  active?: boolean\n  payload?: { value: number }[]\n  label?: string\n}\n\nconst CustomTooltip: React.FC<CustomTooltipProps> = ({\n  active,\n  payload,\n  label,\n}) => {\n  if (active && payload && payload.length) {\n    return (\n      <Card>\n        <CardContent className=\"p-2\">\n          <p>{label && formatDateTime(new Date(label)).dateOnly}</p>\n          <p className=\"text-primary text-xl\">\n            <ProductPrice price={payload[0].value} plain />\n          </p>\n        </CardContent>\n      </Card>\n    )\n  }\n  return null\n}\n\nconst CustomXAxisTick: React.FC<any> = ({ x, y, payload }) => {\n  return (\n    <text x={x} y={y + 10} textAnchor=\"left\" fill=\"#666\" className=\"text-xs\">\n      {formatDateTime(new Date(payload.value)).dateOnly}\n      {/* {`${payload.value.split('/')[1]}/${payload.value.split('/')[2]}`} */}\n    </text>\n  )\n}\nconst STROKE_COLORS: { [key: string]: { [key: string]: string } } = {\n  Red: { light: '#980404', dark: '#ff3333' },\n  Green: { light: '#015001', dark: '#06dc06' },\n  Gold: { light: '#ac9103', dark: '#f1d541' },\n}\n\nexport default function SalesAreaChart({ data }: { data: any[] }) {\n  const { theme } = useTheme()\n  const { cssColors, color } = useColorStore(theme)\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={400}>\n      <AreaChart data={data}>\n        <CartesianGrid horizontal={true} vertical={false} stroke=\"\" />\n        <XAxis dataKey=\"date\" tick={<CustomXAxisTick />} interval={3} />\n        <YAxis fontSize={12} tickFormatter={(value: number) => `$${value}`} />\n        <Tooltip content={<CustomTooltip />} />\n        <Area\n          type=\"monotone\"\n          dataKey=\"totalSales\"\n          stroke={STROKE_COLORS[color.name][theme || 'light']}\n          strokeWidth={2}\n          fill={`hsl(${cssColors['--primary']})`}\n          fillOpacity={0.8}\n        />\n      </AreaChart>\n    </ResponsiveContainer>\n  )\n}\n"],"mappings":"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","ignoreList":[]}